{
  type: 'flow',
  kind: 'artifact',
  metadata: {
    trifactaVersion: '8.7.0+99.20210921002317.282e2e3',
    exportedAt: '2021-09-30T03:58:23.319Z',
    exportedBy: 79454,
    uuid: 'a8458670-21a2-11ec-9c2d-41d9b9e2d52a',
    comment: '',
    primaryFlowIds: [
      397351,
    ],
    edition: 'Dataprep',
    lastMigration: '20210819111601',
  },
  data: {
    artifacts: [],
    connections: [],
    flows: [
      {
        settings: null,
        id: 397351,
        name: 'ECOUNT2BQ_v0.2',
        description: '',
        defaultOutputDir: null,
        fromExampleFlowHash: null,
        fromExampleFlowName: null,
        fromTemplateId: null,
        flownodes: [
          {
            id: 2066077,
            scriptId: 1891507,
            flowNodeId: null,
            wrangled: true,
            referenceId: null,
          },
          {
            id: 2066078,
            scriptId: 1891508,
            flowNodeId: null,
            wrangled: true,
            referenceId: null,
          },
          {
            id: 2303868,
            scriptId: 2091081,
            flowNodeId: null,
            wrangled: false,
            referenceId: null,
          },
        ],
        notes: [],
        flowgraphvertices: [
          {
            id: 688645,
            objectType: 'flownode',
            objectId: 2066077,
            x: -63,
            y: 153,
            width: null,
            height: null,
          },
          {
            id: 688646,
            objectType: 'flownode',
            objectId: 2066078,
            x: 138,
            y: 152,
            width: null,
            height: null,
          },
          {
            id: 1043899,
            objectType: 'flownode',
            objectId: 2303868,
            x: -258,
            y: -53,
            width: null,
            height: null,
          },
          {
            id: 721349,
            objectType: 'outputobject',
            objectId: 403190,
            x: 343,
            y: 154,
            width: null,
            height: null,
          },
        ],
        flowedges: [
          {
            id: 1807187,
            inFlowNodeId: 2066077,
            inPortId: null,
            outFlowNodeId: 2066078,
            outPortId: null,
          },
          {
            id: 2001318,
            inFlowNodeId: 2303868,
            inPortId: null,
            outFlowNodeId: 2066077,
            outPortId: null,
          },
        ],
        references: [],
        flowrunparameteroverrides: [],
        runparameters: [],
        recipes: [
          {
            id: 1891507,
            name: 'main transform',
            description: null,
            active: true,
            nextPortId: 1,
            steps: [
              {
                columnMetadata: {
                  email: {
                    id: '2ybobwt',
                  },
                  cellphone_number: {
                    id: '-12dfv4p',
                  },
                  cust_name: {
                    id: '2yd4v44',
                  },
                  cust_id: {
                    id: '33p5xww',
                  },
                  addr1: {
                    id: '2y8nssx',
                  },
                  order_total: {
                    id: '-bqv02k',
                  },
                  order_id: {
                    id: '1tr1lnx',
                  },
                  sale_channel: {
                    id: '9fieoy',
                  },
                  deposit_date: {
                    id: '4lno8je',
                  },
                  delivery_date: {
                    id: '25j2qli',
                  },
                  product_name_spec: {
                    id: '5gc8weo',
                  },
                  supplier: {
                    id: '37w6sgp',
                  },
                  category_group: {
                    id: '2kwubv3',
                  },
                  product_id: {
                    id: '3uketiq',
                  },
                  product_name: {
                    id: '4rveepy',
                  },
                  unit_price: {
                    id: '4if00t3',
                  },
                  quantity: {
                    id: '393uu04',
                  },
                  price: {
                    id: '2yjjyt4',
                  },
                  ecount_date: {
                    id: '486cmts',
                  },
                  payment_channel: {
                    id: '35sacl7',
                  },
                  deposit: {
                    id: '3en20yl',
                  },
                  purchase_category: {
                    id: '2kcyf8d',
                  },
                  purchase_fabrics: {
                    id: '27fz4qh',
                  },
                  purchase_collection: {
                    id: '247is0b',
                  },
                  purchase_spec: {
                    id: '3v5pjqi',
                  },
                  TRIFACTA__FILE_LINEAGE_INFO: {
                    id: '68royxc',
                  },
                },
                task: {
                  annotations: {
                    hidden: true,
                  },
                  kind: 'task',
                  type: 'Load',
                  parameters: {
                    format: {
                      annotations: {},
                      kind: 'func',
                      type: 'FormatBlob',
                      parameters: {},
                    },
                    location: {
                      kind: 'constant',
                      type: 'String',
                      value: 'portId://null',
                    },
                    enableLineage: {
                      kind: 'constant',
                      type: 'Bool',
                      value: true,
                    },
                    as: {
                      kind: 'array',
                      type: 'Array',
                      value: [
                        {
                          kind: 'constant',
                          type: 'String',
                          value: 'column1',
                        },
                      ],
                    },
                  },
                  outputName: 'original_datasource_591368',
                },
                tableData: null,
                portId: null,
                id: 6743027,
                hash: 'cb649ee99fe4b15cb27f66d7451cd2bad6ede315',
                pbemappingartifacts: [],
                targetmappingartifacts: [],
                dependencies: [],
              },
              {
                columnMetadata: {
                  TRIFACTA__LINEAGE_INFO: {
                    id: '-2aulw2x',
                  },
                },
                task: {
                  annotations: {},
                  kind: 'task',
                  type: 'Delete',
                  parameters: {
                    row: {
                      annotations: {
                        infix: true,
                        parenthetical: false,
                      },
                      kind: 'func',
                      type: 'Equal',
                      parameters: {
                        lhs: {
                          annotations: {},
                          kind: 'func',
                          type: 'SourceRowNumber',
                          parameters: {},
                        },
                        rhs: {
                          kind: 'constant',
                          type: 'Integer',
                          value: 1,
                        },
                      },
                    },
                  },
                  outputName: null,
                },
                tableData: null,
                portId: null,
                id: 6763000,
                hash: 'b918ef709b1dba48d13fc12ff20d9041e6aa7569',
                pbemappingartifacts: [],
                targetmappingartifacts: [],
                dependencies: [],
              },
              {
                columnMetadata: {},
                task: {
                  annotations: {},
                  kind: 'task',
                  type: 'Drop',
                  parameters: {
                    col: {
                      kind: 'array',
                      type: 'Array',
                      value: [
                        {
                          kind: 'column',
                          type: 'Column',
                          value: 'column23',
                          relation: null,
                        },
                      ],
                    },
                    action: {
                      kind: 'enumerable',
                      type: 'Enumerable',
                      value: 'Drop',
                    },
                  },
                  outputName: null,
                },
                tableData: null,
                portId: null,
                id: 11949024,
                hash: 'e2fe023ac6a675a27b6b35de5497b0e8873a8496',
                pbemappingartifacts: [],
                targetmappingartifacts: [],
                dependencies: [],
              },
              {
                columnMetadata: {},
                task: {
                  annotations: {
                    outputColumnAnnotations: {
                      column2: {
                        type: [
                          'Emailaddress',
                        ],
                        _likely_types: [
                          [
                            'Emailaddress',
                          ],
                          [
                            'Url',
                          ],
                          [
                            'String',
                          ],
                          [
                            'Integer',
                          ],
                          [
                            'Phone',
                          ],
                        ],
                      },
                      column3: {
                        type: [
                          'String',
                        ],
                        _likely_types: [
                          [
                            'String',
                          ],
                          [
                            'Integer',
                          ],
                          [
                            'Phone',
                          ],
                          [
                            'SSN',
                          ],
                          [
                            'Map',
                          ],
                        ],
                      },
                      column4: {
                        type: [
                          'String',
                        ],
                        _likely_types: [
                          [
                            'String',
                          ],
                          [
                            'Integer',
                          ],
                          [
                            'Phone',
                          ],
                          [
                            'SSN',
                          ],
                          [
                            'Map',
                          ],
                        ],
                      },
                      column5: {
                        type: [
                          'Integer',
                        ],
                        _likely_types: [
                          [
                            'Integer',
                          ],
                          [
                            'Float',
                          ],
                          [
                            'String',
                          ],
                          [
                            'Phone',
                          ],
                          [
                            'SSN',
                          ],
                        ],
                      },
                      column6: {
                        type: [
                          'String',
                        ],
                        _likely_types: [
                          [
                            'String',
                          ],
                          [
                            'Integer',
                          ],
                          [
                            'Phone',
                          ],
                          [
                            'SSN',
                          ],
                          [
                            'Map',
                          ],
                        ],
                      },
                      column7: {
                        type: [
                          'String',
                        ],
                        _likely_types: [
                          [
                            'String',
                          ],
                          [
                            'Integer',
                          ],
                          [
                            'Phone',
                          ],
                          [
                            'SSN',
                          ],
                          [
                            'Map',
                          ],
                        ],
                      },
                      column8: {
                        type: [
                          'Integer',
                        ],
                        _likely_types: [
                          [
                            'Integer',
                          ],
                          [
                            'Float',
                          ],
                          [
                            'String',
                          ],
                          [
                            'Phone',
                          ],
                          [
                            'SSN',
                          ],
                        ],
                      },
                      column9: {
                        type: [
                          'String',
                        ],
                        _likely_types: [
                          [
                            'String',
                          ],
                          [
                            'Integer',
                          ],
                          [
                            'Phone',
                          ],
                          [
                            'SSN',
                          ],
                          [
                            'Map',
                          ],
                        ],
                      },
                      column10: {
                        type: [
                          'Datetime',
                          'mm-dd',
                          'mm*dd',
                        ],
                        _likely_types: [
                          [
                            'Datetime',
                            'mm-dd',
                            'mm*dd',
                          ],
                          [
                            'Datetime',
                            'dd-mm',
                            'dd*mm',
                          ],
                          [
                            'String',
                          ],
                          [
                            'Integer',
                          ],
                          [
                            'Phone',
                          ],
                        ],
                      },
                      column11: {
                        type: [
                          'Datetime',
                          'yy-mm-dd',
                          'yyyy*mm*dd',
                        ],
                        _likely_types: [
                          [
                            'Datetime',
                            'yy-mm-dd',
                            'yyyy*mm*dd',
                          ],
                          [
                            'String',
                          ],
                          [
                            'Integer',
                          ],
                          [
                            'Phone',
                          ],
                          [
                            'SSN',
                          ],
                        ],
                      },
                      column12: {
                        type: [
                          'String',
                        ],
                        _likely_types: [
                          [
                            'String',
                          ],
                          [
                            'Integer',
                          ],
                          [
                            'Phone',
                          ],
                          [
                            'SSN',
                          ],
                          [
                            'Map',
                          ],
                        ],
                      },
                      column13: {
                        type: [
                          'String',
                        ],
                        _likely_types: [
                          [
                            'String',
                          ],
                          [
                            'Integer',
                          ],
                          [
                            'Phone',
                          ],
                          [
                            'SSN',
                          ],
                          [
                            'Map',
                          ],
                        ],
                      },
                      column14: {
                        type: [
                          'String',
                        ],
                        _likely_types: [
                          [
                            'String',
                          ],
                          [
                            'Url',
                          ],
                          [
                            'Integer',
                          ],
                          [
                            'Phone',
                          ],
                          [
                            'SSN',
                          ],
                        ],
                      },
                      column15: {
                        type: [
                          'String',
                        ],
                        _likely_types: [
                          [
                            'String',
                          ],
                          [
                            'Integer',
                          ],
                          [
                            'Phone',
                          ],
                          [
                            'SSN',
                          ],
                          [
                            'Map',
                          ],
                        ],
                      },
                      column16: {
                        type: [
                          'String',
                        ],
                        _likely_types: [
                          [
                            'String',
                          ],
                          [
                            'Integer',
                          ],
                          [
                            'Phone',
                          ],
                          [
                            'SSN',
                          ],
                          [
                            'Map',
                          ],
                        ],
                      },
                      column17: {
                        type: [
                          'String',
                        ],
                        _likely_types: [
                          [
                            'String',
                          ],
                          [
                            'Integer',
                          ],
                          [
                            'Phone',
                          ],
                          [
                            'SSN',
                          ],
                          [
                            'Map',
                          ],
                        ],
                      },
                      column18: {
                        type: [
                          'Integer',
                        ],
                        _likely_types: [
                          [
                            'Integer',
                          ],
                          [
                            'Float',
                          ],
                          [
                            'String',
                          ],
                          [
                            'Phone',
                          ],
                          [
                            'SSN',
                          ],
                        ],
                      },
                      column19: {
                        type: [
                          'String',
                        ],
                        _likely_types: [
                          [
                            'String',
                          ],
                          [
                            'Integer',
                          ],
                          [
                            'Phone',
                          ],
                          [
                            'SSN',
                          ],
                          [
                            'Map',
                          ],
                        ],
                      },
                      column20: {
                        type: [
                          'Datetime',
                          'yy-mm-dd',
                          'yyyy*mm*dd',
                        ],
                        _likely_types: [
                          [
                            'Datetime',
                            'yy-mm-dd',
                            'yyyy*mm*dd',
                          ],
                          [
                            'Datetime',
                            'yy-dd-mm',
                            'yyyy*dd*mm',
                          ],
                          [
                            'String',
                          ],
                          [
                            'Integer',
                          ],
                          [
                            'Phone',
                          ],
                        ],
                      },
                      column21: {
                        type: [
                          'String',
                        ],
                        _likely_types: [
                          [
                            'String',
                          ],
                          [
                            'Integer',
                          ],
                          [
                            'Phone',
                          ],
                          [
                            'SSN',
                          ],
                          [
                            'Map',
                          ],
                        ],
                      },
                      column22: {
                        type: [
                          'Integer',
                        ],
                        _likely_types: [
                          [
                            'Integer',
                          ],
                          [
                            'String',
                          ],
                          [
                            'Phone',
                          ],
                          [
                            'SSN',
                          ],
                          [
                            'Map',
                          ],
                        ],
                      },
                    },
                  },
                  kind: 'task',
                  type: 'TextFormat',
                  parameters: {
                    col: {
                      kind: 'array',
                      type: 'Array',
                      value: [
                        {
                          kind: 'column',
                          type: 'Column',
                          value: 'column2',
                          relation: null,
                        },
                        {
                          kind: 'column',
                          type: 'Column',
                          value: 'column3',
                          relation: null,
                        },
                        {
                          kind: 'column',
                          type: 'Column',
                          value: 'column4',
                          relation: null,
                        },
                        {
                          kind: 'column',
                          type: 'Column',
                          value: 'column5',
                          relation: null,
                        },
                        {
                          kind: 'column',
                          type: 'Column',
                          value: 'column6',
                          relation: null,
                        },
                        {
                          kind: 'column',
                          type: 'Column',
                          value: 'column7',
                          relation: null,
                        },
                        {
                          kind: 'column',
                          type: 'Column',
                          value: 'column8',
                          relation: null,
                        },
                        {
                          kind: 'column',
                          type: 'Column',
                          value: 'column9',
                          relation: null,
                        },
                        {
                          kind: 'column',
                          type: 'Column',
                          value: 'column10',
                          relation: null,
                        },
                        {
                          kind: 'column',
                          type: 'Column',
                          value: 'column11',
                          relation: null,
                        },
                        {
                          kind: 'column',
                          type: 'Column',
                          value: 'column12',
                          relation: null,
                        },
                        {
                          kind: 'column',
                          type: 'Column',
                          value: 'column13',
                          relation: null,
                        },
                        {
                          kind: 'column',
                          type: 'Column',
                          value: 'column14',
                          relation: null,
                        },
                        {
                          kind: 'column',
                          type: 'Column',
                          value: 'column15',
                          relation: null,
                        },
                        {
                          kind: 'column',
                          type: 'Column',
                          value: 'column16',
                          relation: null,
                        },
                        {
                          kind: 'column',
                          type: 'Column',
                          value: 'column17',
                          relation: null,
                        },
                        {
                          kind: 'column',
                          type: 'Column',
                          value: 'column18',
                          relation: null,
                        },
                        {
                          kind: 'column',
                          type: 'Column',
                          value: 'column19',
                          relation: null,
                        },
                        {
                          kind: 'column',
                          type: 'Column',
                          value: 'column20',
                          relation: null,
                        },
                        {
                          kind: 'column',
                          type: 'Column',
                          value: 'column21',
                          relation: null,
                        },
                        {
                          kind: 'column',
                          type: 'Column',
                          value: 'column22',
                          relation: null,
                        },
                      ],
                    },
                    type: {
                      kind: 'bundle',
                      type: 'Bundle',
                      value: 'trimquotes',
                    },
                  },
                  outputName: null,
                },
                tableData: null,
                portId: null,
                id: 11949008,
                hash: 'cb1c2a995aaf1bff605685b5a6f542b61144e225',
                pbemappingartifacts: [],
                targetmappingartifacts: [],
                dependencies: [],
              },
              {
                columnMetadata: {},
                task: {
                  annotations: {
                    outputColumnAnnotations: {
                      column2: {
                        type: [
                          'Emailaddress',
                        ],
                        _likely_types: [
                          [
                            'Emailaddress',
                          ],
                          [
                            'Url',
                          ],
                          [
                            'String',
                          ],
                          [
                            'Integer',
                          ],
                          [
                            'Phone',
                          ],
                        ],
                      },
                      column3: {
                        type: [
                          'String',
                        ],
                        _likely_types: [
                          [
                            'String',
                          ],
                          [
                            'Integer',
                          ],
                          [
                            'Phone',
                          ],
                          [
                            'SSN',
                          ],
                          [
                            'Map',
                          ],
                        ],
                      },
                      column4: {
                        type: [
                          'String',
                        ],
                        _likely_types: [
                          [
                            'String',
                          ],
                          [
                            'Integer',
                          ],
                          [
                            'Phone',
                          ],
                          [
                            'SSN',
                          ],
                          [
                            'Map',
                          ],
                        ],
                      },
                      column5: {
                        type: [
                          'Integer',
                        ],
                        _likely_types: [
                          [
                            'Integer',
                          ],
                          [
                            'String',
                          ],
                          [
                            'Phone',
                          ],
                          [
                            'SSN',
                          ],
                          [
                            'Map',
                          ],
                        ],
                      },
                      column6: {
                        type: [
                          'String',
                        ],
                        _likely_types: [
                          [
                            'String',
                          ],
                          [
                            'Integer',
                          ],
                          [
                            'Phone',
                          ],
                          [
                            'SSN',
                          ],
                          [
                            'Map',
                          ],
                        ],
                      },
                      column7: {
                        type: [
                          'Integer',
                        ],
                        _likely_types: [
                          [
                            'Integer',
                          ],
                          [
                            'Float',
                          ],
                          [
                            'String',
                          ],
                          [
                            'Phone',
                          ],
                          [
                            'SSN',
                          ],
                        ],
                      },
                      column8: {
                        type: [
                          'Integer',
                        ],
                        _likely_types: [
                          [
                            'Integer',
                          ],
                          [
                            'Float',
                          ],
                          [
                            'String',
                          ],
                          [
                            'Phone',
                          ],
                          [
                            'SSN',
                          ],
                        ],
                      },
                      column9: {
                        type: [
                          'String',
                        ],
                        _likely_types: [
                          [
                            'String',
                          ],
                          [
                            'Integer',
                          ],
                          [
                            'Phone',
                          ],
                          [
                            'SSN',
                          ],
                          [
                            'Map',
                          ],
                        ],
                      },
                      column10: {
                        type: [
                          'String',
                        ],
                        _likely_types: [
                          [
                            'String',
                          ],
                          [
                            'Bool',
                          ],
                          [
                            'Integer',
                          ],
                          [
                            'Phone',
                          ],
                          [
                            'SSN',
                          ],
                        ],
                      },
                      column11: {
                        type: [
                          'Datetime',
                          'yy-mm-dd',
                          'yyyy*mm*dd',
                        ],
                        _likely_types: [
                          [
                            'Datetime',
                            'yy-mm-dd',
                            'yyyy*mm*dd',
                          ],
                          [
                            'Datetime',
                            'yy-dd-mm',
                            'yyyy*dd*mm',
                          ],
                          [
                            'String',
                          ],
                          [
                            'Integer',
                          ],
                          [
                            'Phone',
                          ],
                        ],
                      },
                      column12: {
                        type: [
                          'String',
                        ],
                        _likely_types: [
                          [
                            'String',
                          ],
                          [
                            'Integer',
                          ],
                          [
                            'Phone',
                          ],
                          [
                            'SSN',
                          ],
                          [
                            'Map',
                          ],
                        ],
                      },
                      column13: {
                        type: [
                          'String',
                        ],
                        _likely_types: [
                          [
                            'String',
                          ],
                          [
                            'Integer',
                          ],
                          [
                            'Phone',
                          ],
                          [
                            'SSN',
                          ],
                          [
                            'Map',
                          ],
                        ],
                      },
                      column14: {
                        type: [
                          'String',
                        ],
                        _likely_types: [
                          [
                            'String',
                          ],
                          [
                            'Url',
                          ],
                          [
                            'Integer',
                          ],
                          [
                            'Phone',
                          ],
                          [
                            'SSN',
                          ],
                        ],
                      },
                      column15: {
                        type: [
                          'String',
                        ],
                        _likely_types: [
                          [
                            'String',
                          ],
                          [
                            'Integer',
                          ],
                          [
                            'Phone',
                          ],
                          [
                            'SSN',
                          ],
                          [
                            'Map',
                          ],
                        ],
                      },
                      column16: {
                        type: [
                          'String',
                        ],
                        _likely_types: [
                          [
                            'String',
                          ],
                          [
                            'Integer',
                          ],
                          [
                            'Phone',
                          ],
                          [
                            'SSN',
                          ],
                          [
                            'Map',
                          ],
                        ],
                      },
                      column17: {
                        type: [
                          'Integer',
                        ],
                        _likely_types: [
                          [
                            'Integer',
                          ],
                          [
                            'Float',
                          ],
                          [
                            'String',
                          ],
                          [
                            'Phone',
                          ],
                          [
                            'SSN',
                          ],
                        ],
                      },
                      column18: {
                        type: [
                          'Integer',
                        ],
                        _likely_types: [
                          [
                            'Integer',
                          ],
                          [
                            'Float',
                          ],
                          [
                            'String',
                          ],
                          [
                            'Phone',
                          ],
                          [
                            'SSN',
                          ],
                        ],
                      },
                      column19: {
                        type: [
                          'Integer',
                        ],
                        _likely_types: [
                          [
                            'Integer',
                          ],
                          [
                            'Float',
                          ],
                          [
                            'String',
                          ],
                          [
                            'Phone',
                          ],
                          [
                            'SSN',
                          ],
                        ],
                      },
                      column20: {
                        type: [
                          'Datetime',
                          'yy-mm-dd',
                          'yyyy*mm*dd',
                        ],
                        _likely_types: [
                          [
                            'Datetime',
                            'yy-mm-dd',
                            'yyyy*mm*dd',
                          ],
                          [
                            'Datetime',
                            'yy-dd-mm',
                            'yyyy*dd*mm',
                          ],
                          [
                            'String',
                          ],
                          [
                            'Integer',
                          ],
                          [
                            'Phone',
                          ],
                        ],
                      },
                      column21: {
                        type: [
                          'String',
                        ],
                        _likely_types: [
                          [
                            'String',
                          ],
                          [
                            'Bool',
                          ],
                          [
                            'Integer',
                          ],
                          [
                            'Phone',
                          ],
                          [
                            'SSN',
                          ],
                        ],
                      },
                      column22: {
                        type: [
                          'Integer',
                        ],
                        _likely_types: [
                          [
                            'Integer',
                          ],
                          [
                            'String',
                          ],
                          [
                            'Phone',
                          ],
                          [
                            'SSN',
                          ],
                          [
                            'Map',
                          ],
                        ],
                      },
                    },
                  },
                  kind: 'task',
                  type: 'ReplacePatterns',
                  parameters: {
                    with: {
                      kind: 'constant',
                      type: 'String',
                      value: '',
                    },
                    col: {
                      kind: 'array',
                      type: 'Array',
                      value: [
                        {
                          kind: 'column',
                          type: 'Column',
                          value: 'column2',
                          relation: null,
                        },
                        {
                          kind: 'column',
                          type: 'Column',
                          value: 'column3',
                          relation: null,
                        },
                        {
                          kind: 'column',
                          type: 'Column',
                          value: 'column4',
                          relation: null,
                        },
                        {
                          kind: 'column',
                          type: 'Column',
                          value: 'column5',
                          relation: null,
                        },
                        {
                          kind: 'column',
                          type: 'Column',
                          value: 'column6',
                          relation: null,
                        },
                        {
                          kind: 'column',
                          type: 'Column',
                          value: 'column7',
                          relation: null,
                        },
                        {
                          kind: 'column',
                          type: 'Column',
                          value: 'column8',
                          relation: null,
                        },
                        {
                          kind: 'column',
                          type: 'Column',
                          value: 'column9',
                          relation: null,
                        },
                        {
                          kind: 'column',
                          type: 'Column',
                          value: 'column10',
                          relation: null,
                        },
                        {
                          kind: 'column',
                          type: 'Column',
                          value: 'column11',
                          relation: null,
                        },
                        {
                          kind: 'column',
                          type: 'Column',
                          value: 'column12',
                          relation: null,
                        },
                        {
                          kind: 'column',
                          type: 'Column',
                          value: 'column13',
                          relation: null,
                        },
                        {
                          kind: 'column',
                          type: 'Column',
                          value: 'column14',
                          relation: null,
                        },
                        {
                          kind: 'column',
                          type: 'Column',
                          value: 'column15',
                          relation: null,
                        },
                        {
                          kind: 'column',
                          type: 'Column',
                          value: 'column16',
                          relation: null,
                        },
                        {
                          kind: 'column',
                          type: 'Column',
                          value: 'column17',
                          relation: null,
                        },
                        {
                          kind: 'column',
                          type: 'Column',
                          value: 'column18',
                          relation: null,
                        },
                        {
                          kind: 'column',
                          type: 'Column',
                          value: 'column19',
                          relation: null,
                        },
                        {
                          kind: 'column',
                          type: 'Column',
                          value: 'column20',
                          relation: null,
                        },
                        {
                          kind: 'column',
                          type: 'Column',
                          value: 'column21',
                          relation: null,
                        },
                        {
                          kind: 'column',
                          type: 'Column',
                          value: 'column22',
                          relation: null,
                        },
                      ],
                    },
                    on: {
                      kind: 'constant',
                      type: 'Regexp',
                      value: '^\\t|\\t$',
                    },
                    ignoreCase: {
                      kind: 'constant',
                      type: 'Bool',
                      value: false,
                    },
                    global: {
                      kind: 'constant',
                      type: 'Bool',
                      value: true,
                    },
                  },
                  outputName: null,
                },
                tableData: null,
                portId: null,
                id: 11064784,
                hash: 'fc055c39ca414a9227b6e6802b186463c0547b40',
                pbemappingartifacts: [],
                targetmappingartifacts: [],
                dependencies: [],
              },
              {
                columnMetadata: {},
                task: {
                  annotations: {
                    outputColumnAnnotations: {
                      Email: {
                        type: [
                          'Emailaddress',
                        ],
                      },
                      手機號碼: {
                        type: [
                          'String',
                        ],
                      },
                      '客戶/供應商名': {
                        type: [
                          'String',
                        ],
                      },
                      '客戶/供應商編碼': {
                        type: [
                          'Integer',
                        ],
                      },
                      地址1: {
                        type: [
                          'String',
                        ],
                      },
                      訂單金額合計: {
                        type: [
                          'Integer',
                        ],
                      },
                      訂貨單號: {
                        type: [
                          'Integer',
                        ],
                      },
                      門市: {
                        type: [
                          'String',
                        ],
                      },
                      付訂日期: {
                        type: [
                          'String',
                        ],
                      },
                      各品項交期日: {
                        type: [
                          'Datetime',
                          'yy-mm-dd',
                          'yyyy*mm*dd',
                        ],
                      },
                      '品項名稱[規格]': {
                        type: [
                          'String',
                        ],
                      },
                      供應商名: {
                        type: [
                          'String',
                        ],
                      },
                      品項群組名稱: {
                        type: [
                          'String',
                        ],
                      },
                      品項編碼: {
                        type: [
                          'String',
                        ],
                      },
                      品項名: {
                        type: [
                          'String',
                        ],
                      },
                      '價格（含稅）（計算值）': {
                        type: [
                          'Integer',
                        ],
                      },
                      數量: {
                        type: [
                          'Integer',
                        ],
                      },
                      '價格（含稅）（計算值）(附加數量)': {
                        type: [
                          'Integer',
                        ],
                      },
                      日期: {
                        type: [
                          'Datetime',
                          'yy-mm-dd',
                          'yyyy*mm*dd',
                        ],
                      },
                      支付條件: {
                        type: [
                          'String',
                        ],
                      },
                      訂金: {
                        type: [
                          'Integer',
                        ],
                      },
                    },
                  },
                  kind: 'task',
                  type: 'Header',
                  parameters: {
                    sanitize: {
                      kind: 'constant',
                      type: 'Bool',
                      value: false,
                    },
                    as: {
                      kind: 'array',
                      type: 'Array',
                      value: [
                        {
                          kind: 'constant',
                          type: 'String',
                          value: 'Email',
                        },
                        {
                          kind: 'constant',
                          type: 'String',
                          value: '手機號碼',
                        },
                        {
                          kind: 'constant',
                          type: 'String',
                          value: '客戶/供應商名',
                        },
                        {
                          kind: 'constant',
                          type: 'String',
                          value: '客戶/供應商編碼',
                        },
                        {
                          kind: 'constant',
                          type: 'String',
                          value: '地址1',
                        },
                        {
                          kind: 'constant',
                          type: 'String',
                          value: '訂單金額合計',
                        },
                        {
                          kind: 'constant',
                          type: 'String',
                          value: '訂貨單號',
                        },
                        {
                          kind: 'constant',
                          type: 'String',
                          value: '門市',
                        },
                        {
                          kind: 'constant',
                          type: 'String',
                          value: '付訂日期',
                        },
                        {
                          kind: 'constant',
                          type: 'String',
                          value: '各品項交期日',
                        },
                        {
                          kind: 'constant',
                          type: 'String',
                          value: '品項名稱[規格]',
                        },
                        {
                          kind: 'constant',
                          type: 'String',
                          value: '供應商名',
                        },
                        {
                          kind: 'constant',
                          type: 'String',
                          value: '品項群組名稱',
                        },
                        {
                          kind: 'constant',
                          type: 'String',
                          value: '品項編碼',
                        },
                        {
                          kind: 'constant',
                          type: 'String',
                          value: '品項名',
                        },
                        {
                          kind: 'constant',
                          type: 'String',
                          value: '價格（含稅）（計算值）',
                        },
                        {
                          kind: 'constant',
                          type: 'String',
                          value: '數量',
                        },
                        {
                          kind: 'constant',
                          type: 'String',
                          value: '價格（含稅）（計算值）(附加數量)',
                        },
                        {
                          kind: 'constant',
                          type: 'String',
                          value: '日期',
                        },
                        {
                          kind: 'constant',
                          type: 'String',
                          value: '支付條件',
                        },
                        {
                          kind: 'constant',
                          type: 'String',
                          value: '訂金',
                        },
                      ],
                    },
                  },
                  outputName: null,
                },
                tableData: {
                  column2: 'Email',
                  column3: '手機號碼',
                  column4: '客戶/供應商名',
                  column5: '客戶/供應商編碼',
                  column6: '地址1',
                  column7: '訂單金額合計',
                  column8: '訂貨單號',
                  column9: '門市',
                  column10: '付訂日期',
                  column11: '各品項交期日',
                  column12: '品項名稱[規格]',
                  column13: '供應商名',
                  column14: '品項群組名稱',
                  column15: '品項編碼',
                  column16: '品項名',
                  column17: '價格（含稅）（計算值）',
                  column18: '數量',
                  column19: '價格（含稅）（計算值）(附加數量)',
                  column20: '日期',
                  column21: '支付條件',
                  column22: '訂金',
                },
                portId: null,
                id: 11949025,
                hash: 'b8a31e981805338dbadc5f38fd59a0fe74188762',
                pbemappingartifacts: [],
                targetmappingartifacts: [],
                dependencies: [],
              },
              {
                columnMetadata: {},
                task: {
                  annotations: {
                    outputColumnAnnotations: {},
                  },
                  kind: 'task',
                  type: 'Rename',
                  parameters: {
                    type: {
                      kind: 'bundle',
                      type: 'Bundle',
                      value: 'manual',
                    },
                    mapping: {
                      kind: 'matrix',
                      type: 'Matrix',
                      value: [
                        {
                          kind: 'array',
                          type: 'Array',
                          value: [
                            {
                              kind: 'column',
                              type: 'Column',
                              value: 'Email',
                              relation: null,
                            },
                            {
                              kind: 'constant',
                              type: 'String',
                              value: 'email',
                            },
                          ],
                        },
                      ],
                    },
                  },
                  outputName: null,
                },
                tableData: null,
                portId: null,
                id: 7302227,
                hash: 'c8154aa871e027a5de2c1b9ab0d2d3971661180d',
                pbemappingartifacts: [],
                targetmappingartifacts: [],
                dependencies: [],
              },
              {
                columnMetadata: {},
                task: {
                  annotations: {},
                  kind: 'task',
                  type: 'Rename',
                  parameters: {
                    type: {
                      kind: 'bundle',
                      type: 'Bundle',
                      value: 'manual',
                    },
                    mapping: {
                      kind: 'matrix',
                      type: 'Matrix',
                      value: [
                        {
                          kind: 'array',
                          type: 'Array',
                          value: [
                            {
                              kind: 'column',
                              type: 'Column',
                              value: '手機號碼',
                              relation: null,
                            },
                            {
                              kind: 'constant',
                              type: 'String',
                              value: 'cellphone_number',
                            },
                          ],
                        },
                      ],
                    },
                  },
                  outputName: null,
                },
                tableData: null,
                portId: null,
                id: 8543509,
                hash: '5efdb5893a644f26b9e5d5fff23cb7a039391105',
                pbemappingartifacts: [],
                targetmappingartifacts: [],
                dependencies: [],
              },
              {
                columnMetadata: {},
                task: {
                  annotations: {},
                  kind: 'task',
                  type: 'Rename',
                  parameters: {
                    type: {
                      kind: 'bundle',
                      type: 'Bundle',
                      value: 'manual',
                    },
                    mapping: {
                      kind: 'matrix',
                      type: 'Matrix',
                      value: [
                        {
                          kind: 'array',
                          type: 'Array',
                          value: [
                            {
                              kind: 'column',
                              type: 'Column',
                              value: '客戶/供應商名',
                              relation: null,
                            },
                            {
                              kind: 'constant',
                              type: 'String',
                              value: 'cust_name',
                            },
                          ],
                        },
                      ],
                    },
                  },
                  outputName: null,
                },
                tableData: null,
                portId: null,
                id: 8543517,
                hash: 'e2014ed9e90593a2581b1eb04dcffe9ea59bf3e7',
                pbemappingartifacts: [],
                targetmappingartifacts: [],
                dependencies: [],
              },
              {
                columnMetadata: {},
                task: {
                  annotations: {},
                  kind: 'task',
                  type: 'Rename',
                  parameters: {
                    type: {
                      kind: 'bundle',
                      type: 'Bundle',
                      value: 'manual',
                    },
                    mapping: {
                      kind: 'matrix',
                      type: 'Matrix',
                      value: [
                        {
                          kind: 'array',
                          type: 'Array',
                          value: [
                            {
                              kind: 'column',
                              type: 'Column',
                              value: '客戶/供應商編碼',
                              relation: null,
                            },
                            {
                              kind: 'constant',
                              type: 'String',
                              value: 'cust_id',
                            },
                          ],
                        },
                      ],
                    },
                  },
                  outputName: null,
                },
                tableData: null,
                portId: null,
                id: 8543644,
                hash: '3883d375ace12c7f0028863dde253d8bbb76bcf3',
                pbemappingartifacts: [],
                targetmappingartifacts: [],
                dependencies: [],
              },
              {
                columnMetadata: {
                  cust_id1: {
                    id: '-1hwlc7e',
                  },
                  cust_id2: {
                    id: '-1hwlc7d',
                  },
                },
                task: {
                  annotations: {
                    outputColumnAnnotations: {
                      cust_id1: {
                        type: [
                          'Integer',
                        ],
                        _likely_types: [
                          [
                            'Integer',
                          ],
                          [
                            'Float',
                          ],
                          [
                            'String',
                          ],
                          [
                            'Phone',
                          ],
                          [
                            'SSN',
                          ],
                        ],
                      },
                      cust_id2: {
                        type: [
                          'String',
                        ],
                        _likely_types: [
                          [
                            'String',
                          ],
                          [
                            'Integer',
                          ],
                          [
                            'Bool',
                          ],
                          [
                            'Float',
                          ],
                          [
                            'Phone',
                          ],
                        ],
                      },
                    },
                  },
                  kind: 'task',
                  type: 'SplitPatterns',
                  parameters: {
                    col: {
                      kind: 'column',
                      type: 'Column',
                      value: 'cust_id',
                      relation: null,
                    },
                    type: {
                      kind: 'bundle',
                      type: 'Bundle',
                      value: 'between',
                    },
                    start: {
                      kind: 'constant',
                      type: 'Regexp',
                      value: '[\\/-]',
                    },
                    includeStart: {
                      kind: 'constant',
                      type: 'Bool',
                      value: true,
                    },
                    includeEnd: {
                      kind: 'constant',
                      type: 'Bool',
                      value: false,
                    },
                    ignoreCase: {
                      kind: 'constant',
                      type: 'Bool',
                      value: false,
                    },
                    as: {
                      kind: 'array',
                      type: 'Array',
                      value: [
                        {
                          kind: 'constant',
                          type: 'String',
                          value: 'cust_id1',
                        },
                        {
                          kind: 'constant',
                          type: 'String',
                          value: 'cust_id2',
                        },
                      ],
                    },
                  },
                  outputName: null,
                },
                tableData: null,
                portId: null,
                id: 8543746,
                hash: 'c2e50d34d0bb25597e7146ed457950d0743944aa',
                pbemappingartifacts: [],
                targetmappingartifacts: [],
                dependencies: [],
              },
              {
                columnMetadata: {},
                task: {
                  annotations: {},
                  kind: 'task',
                  type: 'Rename',
                  parameters: {
                    type: {
                      kind: 'bundle',
                      type: 'Bundle',
                      value: 'manual',
                    },
                    mapping: {
                      kind: 'matrix',
                      type: 'Matrix',
                      value: [
                        {
                          kind: 'array',
                          type: 'Array',
                          value: [
                            {
                              kind: 'column',
                              type: 'Column',
                              value: 'cust_id1',
                              relation: null,
                            },
                            {
                              kind: 'constant',
                              type: 'String',
                              value: 'cust_id',
                            },
                          ],
                        },
                      ],
                    },
                  },
                  outputName: null,
                },
                tableData: null,
                portId: null,
                id: 7356095,
                hash: '3638bd0947c3ded9b4f8d57cef223544957c673a',
                pbemappingartifacts: [],
                targetmappingartifacts: [],
                dependencies: [],
              },
              {
                columnMetadata: {},
                task: {
                  annotations: {},
                  kind: 'task',
                  type: 'SetType',
                  parameters: {
                    col: {
                      kind: 'array',
                      type: 'Array',
                      value: [
                        {
                          kind: 'column',
                          type: 'Column',
                          value: 'cust_id',
                          relation: null,
                        },
                      ],
                    },
                    type: {
                      kind: 'bundle',
                      type: 'Bundle',
                      value: 'String',
                    },
                  },
                  outputName: null,
                },
                tableData: null,
                portId: null,
                id: 7832356,
                hash: 'a801c0b4e6c0abfabde75a66f045288228824802',
                pbemappingartifacts: [],
                targetmappingartifacts: [],
                dependencies: [],
              },
              {
                columnMetadata: {},
                task: {
                  annotations: {},
                  kind: 'task',
                  type: 'Drop',
                  parameters: {
                    col: {
                      kind: 'array',
                      type: 'Array',
                      value: [
                        {
                          kind: 'column',
                          type: 'Column',
                          value: 'cust_id2',
                          relation: null,
                        },
                      ],
                    },
                    action: {
                      kind: 'enumerable',
                      type: 'Enumerable',
                      value: 'Drop',
                    },
                  },
                  outputName: null,
                },
                tableData: null,
                portId: null,
                id: 7356092,
                hash: '97374b1908a8a09f258116493f03b32543611dd2',
                pbemappingartifacts: [],
                targetmappingartifacts: [],
                dependencies: [],
              },
              {
                columnMetadata: {},
                task: {
                  annotations: {},
                  kind: 'task',
                  type: 'Rename',
                  parameters: {
                    type: {
                      kind: 'bundle',
                      type: 'Bundle',
                      value: 'manual',
                    },
                    mapping: {
                      kind: 'matrix',
                      type: 'Matrix',
                      value: [
                        {
                          kind: 'array',
                          type: 'Array',
                          value: [
                            {
                              kind: 'column',
                              type: 'Column',
                              value: '地址1',
                              relation: null,
                            },
                            {
                              kind: 'constant',
                              type: 'String',
                              value: 'addr1',
                            },
                          ],
                        },
                      ],
                    },
                  },
                  outputName: null,
                },
                tableData: null,
                portId: null,
                id: 8543761,
                hash: 'b0a1775fc62d5472c9de2d77090bbcdab4000198',
                pbemappingartifacts: [],
                targetmappingartifacts: [],
                dependencies: [],
              },
              {
                columnMetadata: {},
                task: {
                  annotations: {},
                  kind: 'task',
                  type: 'SetType',
                  parameters: {
                    col: {
                      kind: 'array',
                      type: 'Array',
                      value: [
                        {
                          kind: 'column',
                          type: 'Column',
                          value: 'addr1',
                          relation: null,
                        },
                      ],
                    },
                    type: {
                      kind: 'bundle',
                      type: 'Bundle',
                      value: 'String',
                    },
                  },
                  outputName: null,
                },
                tableData: null,
                portId: null,
                id: 8548196,
                hash: '0de90dcd537c6f8ea80a9713620aa304ac7fe48a',
                pbemappingartifacts: [],
                targetmappingartifacts: [],
                dependencies: [],
              },
              {
                columnMetadata: {},
                task: {
                  annotations: {},
                  kind: 'task',
                  type: 'Rename',
                  parameters: {
                    type: {
                      kind: 'bundle',
                      type: 'Bundle',
                      value: 'manual',
                    },
                    mapping: {
                      kind: 'matrix',
                      type: 'Matrix',
                      value: [
                        {
                          kind: 'array',
                          type: 'Array',
                          value: [
                            {
                              kind: 'column',
                              type: 'Column',
                              value: '訂單金額合計',
                              relation: null,
                            },
                            {
                              kind: 'constant',
                              type: 'String',
                              value: 'order_total',
                            },
                          ],
                        },
                      ],
                    },
                  },
                  outputName: null,
                },
                tableData: null,
                portId: null,
                id: 11043580,
                hash: '641440d749e361896b8495e7bfe45daf03484871',
                pbemappingartifacts: [],
                targetmappingartifacts: [],
                dependencies: [],
              },
              {
                columnMetadata: {},
                task: {
                  annotations: {},
                  kind: 'task',
                  type: 'Rename',
                  parameters: {
                    type: {
                      kind: 'bundle',
                      type: 'Bundle',
                      value: 'manual',
                    },
                    mapping: {
                      kind: 'matrix',
                      type: 'Matrix',
                      value: [
                        {
                          kind: 'array',
                          type: 'Array',
                          value: [
                            {
                              kind: 'column',
                              type: 'Column',
                              value: '訂貨單號',
                              relation: null,
                            },
                            {
                              kind: 'constant',
                              type: 'String',
                              value: 'order_id',
                            },
                          ],
                        },
                      ],
                    },
                  },
                  outputName: null,
                },
                tableData: null,
                portId: null,
                id: 8544095,
                hash: '021d0982572ca811568c8ab54e547050d2f535f4',
                pbemappingartifacts: [],
                targetmappingartifacts: [],
                dependencies: [],
              },
              {
                columnMetadata: {},
                task: {
                  annotations: {},
                  kind: 'task',
                  type: 'Rename',
                  parameters: {
                    type: {
                      kind: 'bundle',
                      type: 'Bundle',
                      value: 'manual',
                    },
                    mapping: {
                      kind: 'matrix',
                      type: 'Matrix',
                      value: [
                        {
                          kind: 'array',
                          type: 'Array',
                          value: [
                            {
                              kind: 'column',
                              type: 'Column',
                              value: '門市',
                              relation: null,
                            },
                            {
                              kind: 'constant',
                              type: 'String',
                              value: 'sale_channel',
                            },
                          ],
                        },
                      ],
                    },
                  },
                  outputName: null,
                },
                tableData: null,
                portId: null,
                id: 8548200,
                hash: 'c2693122e7f4aac0e3c7fde774375aeb3df35c27',
                pbemappingartifacts: [],
                targetmappingartifacts: [],
                dependencies: [],
              },
              {
                columnMetadata: {},
                task: {
                  annotations: {
                    outputColumnAnnotations: {},
                  },
                  kind: 'task',
                  type: 'SetType',
                  parameters: {
                    col: {
                      kind: 'array',
                      type: 'Array',
                      value: [
                        {
                          kind: 'column',
                          type: 'Column',
                          value: 'sale_channel',
                          relation: null,
                        },
                      ],
                    },
                    type: {
                      kind: 'bundle',
                      type: 'Bundle',
                      value: 'String',
                    },
                  },
                  outputName: null,
                },
                tableData: null,
                portId: null,
                id: 8548201,
                hash: '1869a13f033de61597a9bd97a64946d4b85bda18',
                pbemappingartifacts: [],
                targetmappingartifacts: [],
                dependencies: [],
              },
              {
                columnMetadata: {},
                task: {
                  annotations: {},
                  kind: 'task',
                  type: 'Rename',
                  parameters: {
                    type: {
                      kind: 'bundle',
                      type: 'Bundle',
                      value: 'manual',
                    },
                    mapping: {
                      kind: 'matrix',
                      type: 'Matrix',
                      value: [
                        {
                          kind: 'array',
                          type: 'Array',
                          value: [
                            {
                              kind: 'column',
                              type: 'Column',
                              value: '付訂日期',
                              relation: null,
                            },
                            {
                              kind: 'constant',
                              type: 'String',
                              value: 'deposit_date',
                            },
                          ],
                        },
                      ],
                    },
                  },
                  outputName: null,
                },
                tableData: null,
                portId: null,
                id: 8544173,
                hash: 'aa3984689e45ea0bdd83c15f6ce5c4e625ce7117',
                pbemappingartifacts: [],
                targetmappingartifacts: [],
                dependencies: [],
              },
              {
                columnMetadata: {},
                task: {
                  annotations: {},
                  kind: 'task',
                  type: 'Rename',
                  parameters: {
                    type: {
                      kind: 'bundle',
                      type: 'Bundle',
                      value: 'manual',
                    },
                    mapping: {
                      kind: 'matrix',
                      type: 'Matrix',
                      value: [
                        {
                          kind: 'array',
                          type: 'Array',
                          value: [
                            {
                              kind: 'column',
                              type: 'Column',
                              value: '各品項交期日',
                              relation: null,
                            },
                            {
                              kind: 'constant',
                              type: 'String',
                              value: 'delivery_date',
                            },
                          ],
                        },
                      ],
                    },
                  },
                  outputName: null,
                },
                tableData: null,
                portId: null,
                id: 8544205,
                hash: '44c2f664a90b3873089769565339d5544314d388',
                pbemappingartifacts: [],
                targetmappingartifacts: [],
                dependencies: [],
              },
              {
                columnMetadata: {},
                task: {
                  annotations: {},
                  kind: 'task',
                  type: 'SetType',
                  parameters: {
                    col: {
                      kind: 'array',
                      type: 'Array',
                      value: [
                        {
                          kind: 'column',
                          type: 'Column',
                          value: 'delivery_date',
                          relation: null,
                        },
                      ],
                    },
                    type: {
                      kind: 'bundle',
                      type: 'Bundle',
                      value: 'Datetime',
                    },
                    datetimeType: {
                      kind: 'array',
                      type: 'Array',
                      value: [
                        {
                          kind: 'constant',
                          type: 'String',
                          value: 'Datetime',
                        },
                        {
                          kind: 'constant',
                          type: 'String',
                          value: 'yy-mm-dd',
                        },
                        {
                          kind: 'constant',
                          type: 'String',
                          value: 'yyyy*mm*dd',
                        },
                      ],
                    },
                  },
                  outputName: null,
                },
                tableData: null,
                portId: null,
                id: 8544884,
                hash: '09b3a927ac403568cfa3d96e4b5e5980f0cf2d78',
                pbemappingartifacts: [],
                targetmappingartifacts: [],
                dependencies: [],
              },
              {
                columnMetadata: {},
                task: {
                  annotations: {},
                  kind: 'task',
                  type: 'Rename',
                  parameters: {
                    type: {
                      kind: 'bundle',
                      type: 'Bundle',
                      value: 'manual',
                    },
                    mapping: {
                      kind: 'matrix',
                      type: 'Matrix',
                      value: [
                        {
                          kind: 'array',
                          type: 'Array',
                          value: [
                            {
                              kind: 'column',
                              type: 'Column',
                              value: '品項名稱[規格]',
                              relation: null,
                            },
                            {
                              kind: 'constant',
                              type: 'String',
                              value: 'product_name_spec',
                            },
                          ],
                        },
                      ],
                    },
                  },
                  outputName: null,
                },
                tableData: null,
                portId: null,
                id: 8544263,
                hash: 'ffd49d5474b222544926ee21aa964595fee0921a',
                pbemappingartifacts: [],
                targetmappingartifacts: [],
                dependencies: [],
              },
              {
                columnMetadata: {},
                task: {
                  annotations: {},
                  kind: 'task',
                  type: 'SetType',
                  parameters: {
                    col: {
                      kind: 'array',
                      type: 'Array',
                      value: [
                        {
                          kind: 'column',
                          type: 'Column',
                          value: 'product_name_spec',
                          relation: null,
                        },
                      ],
                    },
                    type: {
                      kind: 'bundle',
                      type: 'Bundle',
                      value: 'String',
                    },
                  },
                  outputName: null,
                },
                tableData: null,
                portId: null,
                id: 8545504,
                hash: '9ceb21741c8b50355301070792e4f6e2a87f2d40',
                pbemappingartifacts: [],
                targetmappingartifacts: [],
                dependencies: [],
              },
              {
                columnMetadata: {},
                task: {
                  annotations: {},
                  kind: 'task',
                  type: 'Rename',
                  parameters: {
                    type: {
                      kind: 'bundle',
                      type: 'Bundle',
                      value: 'manual',
                    },
                    mapping: {
                      kind: 'matrix',
                      type: 'Matrix',
                      value: [
                        {
                          kind: 'array',
                          type: 'Array',
                          value: [
                            {
                              kind: 'column',
                              type: 'Column',
                              value: '供應商名',
                              relation: null,
                            },
                            {
                              kind: 'constant',
                              type: 'String',
                              value: 'supplier',
                            },
                          ],
                        },
                      ],
                    },
                  },
                  outputName: null,
                },
                tableData: null,
                portId: null,
                id: 8544351,
                hash: 'ccd8733306d5be30ea2bfa52227d061a1f1c159e',
                pbemappingartifacts: [],
                targetmappingartifacts: [],
                dependencies: [],
              },
              {
                columnMetadata: {},
                task: {
                  annotations: {},
                  kind: 'task',
                  type: 'Rename',
                  parameters: {
                    type: {
                      kind: 'bundle',
                      type: 'Bundle',
                      value: 'manual',
                    },
                    mapping: {
                      kind: 'matrix',
                      type: 'Matrix',
                      value: [
                        {
                          kind: 'array',
                          type: 'Array',
                          value: [
                            {
                              kind: 'column',
                              type: 'Column',
                              value: '品項群組名稱',
                              relation: null,
                            },
                            {
                              kind: 'constant',
                              type: 'String',
                              value: 'category_group',
                            },
                          ],
                        },
                      ],
                    },
                  },
                  outputName: null,
                },
                tableData: null,
                portId: null,
                id: 8544412,
                hash: 'ee4ddc599855f3da388e41f453b92066fd67ed1f',
                pbemappingartifacts: [],
                targetmappingartifacts: [],
                dependencies: [],
              },
              {
                columnMetadata: {},
                task: {
                  annotations: {
                    outputColumnAnnotations: {
                      category_group: {
                        type: [
                          'String',
                        ],
                        _likely_types: [
                          [
                            'String',
                          ],
                          [
                            'Url',
                          ],
                          [
                            'Integer',
                          ],
                          [
                            'Phone',
                          ],
                          [
                            'SSN',
                          ],
                        ],
                      },
                    },
                  },
                  kind: 'task',
                  type: 'ReplacePatterns',
                  parameters: {
                    with: {
                      kind: 'constant',
                      type: 'String',
                      value: 'ㆍ',
                    },
                    col: {
                      kind: 'array',
                      type: 'Array',
                      value: [
                        {
                          kind: 'column',
                          type: 'Column',
                          value: 'category_group',
                          relation: null,
                        },
                      ],
                    },
                    on: {
                      kind: 'constant',
                      type: 'String',
                      value: '∬',
                    },
                    ignoreCase: {
                      kind: 'constant',
                      type: 'Bool',
                      value: false,
                    },
                    global: {
                      kind: 'constant',
                      type: 'Bool',
                      value: true,
                    },
                    as: {
                      kind: 'array',
                      type: 'Array',
                      value: [
                        {
                          kind: 'constant',
                          type: 'String',
                          value: 'category_group',
                        },
                      ],
                    },
                  },
                  outputName: null,
                },
                tableData: null,
                portId: null,
                id: 8545497,
                hash: '2f2a46a26f9adda0c3bc068dede9d0f860acfb6b',
                pbemappingartifacts: [],
                targetmappingartifacts: [],
                dependencies: [],
              },
              {
                columnMetadata: {},
                task: {
                  annotations: {},
                  kind: 'task',
                  type: 'Rename',
                  parameters: {
                    type: {
                      kind: 'bundle',
                      type: 'Bundle',
                      value: 'manual',
                    },
                    mapping: {
                      kind: 'matrix',
                      type: 'Matrix',
                      value: [
                        {
                          kind: 'array',
                          type: 'Array',
                          value: [
                            {
                              kind: 'column',
                              type: 'Column',
                              value: '品項編碼',
                              relation: null,
                            },
                            {
                              kind: 'constant',
                              type: 'String',
                              value: 'product_id',
                            },
                          ],
                        },
                      ],
                    },
                  },
                  outputName: null,
                },
                tableData: null,
                portId: null,
                id: 8545521,
                hash: '804e2065a9953c3a5291727622eb5411f547ec72',
                pbemappingartifacts: [],
                targetmappingartifacts: [],
                dependencies: [],
              },
              {
                columnMetadata: {},
                task: {
                  annotations: {},
                  kind: 'task',
                  type: 'Rename',
                  parameters: {
                    type: {
                      kind: 'bundle',
                      type: 'Bundle',
                      value: 'manual',
                    },
                    mapping: {
                      kind: 'matrix',
                      type: 'Matrix',
                      value: [
                        {
                          kind: 'array',
                          type: 'Array',
                          value: [
                            {
                              kind: 'column',
                              type: 'Column',
                              value: '品項名',
                              relation: null,
                            },
                            {
                              kind: 'constant',
                              type: 'String',
                              value: 'product_name',
                            },
                          ],
                        },
                      ],
                    },
                  },
                  outputName: null,
                },
                tableData: null,
                portId: null,
                id: 8548298,
                hash: 'a300d8888a22295429a2d14424baeeca354cbef2',
                pbemappingartifacts: [],
                targetmappingartifacts: [],
                dependencies: [],
              },
              {
                columnMetadata: {},
                task: {
                  annotations: {},
                  kind: 'task',
                  type: 'Rename',
                  parameters: {
                    type: {
                      kind: 'bundle',
                      type: 'Bundle',
                      value: 'manual',
                    },
                    mapping: {
                      kind: 'matrix',
                      type: 'Matrix',
                      value: [
                        {
                          kind: 'array',
                          type: 'Array',
                          value: [
                            {
                              kind: 'column',
                              type: 'Column',
                              value: '價格（含稅）（計算值）',
                              relation: null,
                            },
                            {
                              kind: 'constant',
                              type: 'String',
                              value: 'unit_price',
                            },
                          ],
                        },
                      ],
                    },
                  },
                  outputName: null,
                },
                tableData: null,
                portId: null,
                id: 8546162,
                hash: '3ef23183f6593ab7b38ee3432f5245b45f62e179',
                pbemappingartifacts: [],
                targetmappingartifacts: [],
                dependencies: [],
              },
              {
                columnMetadata: {},
                task: {
                  annotations: {},
                  kind: 'task',
                  type: 'Rename',
                  parameters: {
                    type: {
                      kind: 'bundle',
                      type: 'Bundle',
                      value: 'manual',
                    },
                    mapping: {
                      kind: 'matrix',
                      type: 'Matrix',
                      value: [
                        {
                          kind: 'array',
                          type: 'Array',
                          value: [
                            {
                              kind: 'column',
                              type: 'Column',
                              value: '數量',
                              relation: null,
                            },
                            {
                              kind: 'constant',
                              type: 'String',
                              value: 'quantity',
                            },
                          ],
                        },
                      ],
                    },
                  },
                  outputName: null,
                },
                tableData: null,
                portId: null,
                id: 8546174,
                hash: '063005beae16493c95f69490134eb44f6dd6fc91',
                pbemappingartifacts: [],
                targetmappingartifacts: [],
                dependencies: [],
              },
              {
                columnMetadata: {},
                task: {
                  annotations: {
                    outputColumnAnnotations: {},
                  },
                  kind: 'task',
                  type: 'SetType',
                  parameters: {
                    col: {
                      kind: 'array',
                      type: 'Array',
                      value: [
                        {
                          kind: 'column',
                          type: 'Column',
                          value: 'quantity',
                          relation: null,
                        },
                      ],
                    },
                    type: {
                      kind: 'bundle',
                      type: 'Bundle',
                      value: 'Integer',
                    },
                  },
                  outputName: null,
                },
                tableData: null,
                portId: null,
                id: 8547467,
                hash: 'cb6ce8c06a017d843ef5e21ddf4ed9730df72c85',
                pbemappingartifacts: [],
                targetmappingartifacts: [],
                dependencies: [],
              },
              {
                columnMetadata: {},
                task: {
                  annotations: {},
                  kind: 'task',
                  type: 'Rename',
                  parameters: {
                    type: {
                      kind: 'bundle',
                      type: 'Bundle',
                      value: 'manual',
                    },
                    mapping: {
                      kind: 'matrix',
                      type: 'Matrix',
                      value: [
                        {
                          kind: 'array',
                          type: 'Array',
                          value: [
                            {
                              kind: 'column',
                              type: 'Column',
                              value: '價格（含稅）（計算值）(附加數量)',
                              relation: null,
                            },
                            {
                              kind: 'constant',
                              type: 'String',
                              value: 'price',
                            },
                          ],
                        },
                      ],
                    },
                  },
                  outputName: null,
                },
                tableData: null,
                portId: null,
                id: 8546792,
                hash: '1bb4a4321fa4a64d4e2d6f609ba2c8ca8c88d4bf',
                pbemappingartifacts: [],
                targetmappingartifacts: [],
                dependencies: [],
              },
              {
                columnMetadata: {},
                task: {
                  annotations: {},
                  kind: 'task',
                  type: 'Rename',
                  parameters: {
                    type: {
                      kind: 'bundle',
                      type: 'Bundle',
                      value: 'manual',
                    },
                    mapping: {
                      kind: 'matrix',
                      type: 'Matrix',
                      value: [
                        {
                          kind: 'array',
                          type: 'Array',
                          value: [
                            {
                              kind: 'column',
                              type: 'Column',
                              value: '日期',
                              relation: null,
                            },
                            {
                              kind: 'constant',
                              type: 'String',
                              value: 'ecount_date',
                            },
                          ],
                        },
                      ],
                    },
                  },
                  outputName: null,
                },
                tableData: null,
                portId: null,
                id: 7615266,
                hash: '17ad59bdf885bd9f4aa234ae6b8f759a331fa56e',
                pbemappingartifacts: [],
                targetmappingartifacts: [],
                dependencies: [],
              },
              {
                columnMetadata: {},
                task: {
                  annotations: {},
                  kind: 'task',
                  type: 'Rename',
                  parameters: {
                    type: {
                      kind: 'bundle',
                      type: 'Bundle',
                      value: 'manual',
                    },
                    mapping: {
                      kind: 'matrix',
                      type: 'Matrix',
                      value: [
                        {
                          kind: 'array',
                          type: 'Array',
                          value: [
                            {
                              kind: 'column',
                              type: 'Column',
                              value: '支付條件',
                              relation: null,
                            },
                            {
                              kind: 'constant',
                              type: 'String',
                              value: 'payment_channel',
                            },
                          ],
                        },
                      ],
                    },
                  },
                  outputName: null,
                },
                tableData: null,
                portId: null,
                id: 7615015,
                hash: '856d78c2075bda14869bdd3ef45841b2d1dd035e',
                pbemappingartifacts: [],
                targetmappingartifacts: [],
                dependencies: [],
              },
              {
                columnMetadata: {},
                task: {
                  annotations: {},
                  kind: 'task',
                  type: 'Rename',
                  parameters: {
                    type: {
                      kind: 'bundle',
                      type: 'Bundle',
                      value: 'manual',
                    },
                    mapping: {
                      kind: 'matrix',
                      type: 'Matrix',
                      value: [
                        {
                          kind: 'array',
                          type: 'Array',
                          value: [
                            {
                              kind: 'column',
                              type: 'Column',
                              value: '訂金',
                              relation: null,
                            },
                            {
                              kind: 'constant',
                              type: 'String',
                              value: 'deposit',
                            },
                          ],
                        },
                      ],
                    },
                  },
                  outputName: null,
                },
                tableData: null,
                portId: null,
                id: 11064943,
                hash: '462a4336cf203a7a68712aad3ec0c0ab6c7cf43b',
                pbemappingartifacts: [],
                targetmappingartifacts: [],
                dependencies: [],
              },
              {
                columnMetadata: {},
                task: {
                  annotations: {},
                  kind: 'task',
                  type: 'SetType',
                  parameters: {
                    col: {
                      kind: 'array',
                      type: 'Array',
                      value: [
                        {
                          kind: 'column',
                          type: 'Column',
                          value: 'deposit',
                          relation: null,
                        },
                      ],
                    },
                    type: {
                      kind: 'bundle',
                      type: 'Bundle',
                      value: 'String',
                    },
                  },
                  outputName: null,
                },
                tableData: null,
                portId: null,
                id: 11064946,
                hash: '18c9ae2c1fb353e13463adcef41501e592e5d1fd',
                pbemappingartifacts: [],
                targetmappingartifacts: [],
                dependencies: [],
              },
              {
                columnMetadata: {},
                task: {
                  annotations: {
                    outputColumnAnnotations: {
                      unit_price: {
                        type: [
                          'Integer',
                        ],
                        _likely_types: [
                          [
                            'Integer',
                          ],
                          [
                            'Float',
                          ],
                          [
                            'String',
                          ],
                          [
                            'Phone',
                          ],
                          [
                            'SSN',
                          ],
                        ],
                      },
                      price: {
                        type: [
                          'Integer',
                        ],
                        _likely_types: [
                          [
                            'Integer',
                          ],
                          [
                            'Float',
                          ],
                          [
                            'String',
                          ],
                          [
                            'Phone',
                          ],
                          [
                            'SSN',
                          ],
                        ],
                      },
                    },
                  },
                  kind: 'task',
                  type: 'ReplacePatterns',
                  parameters: {
                    with: {
                      kind: 'constant',
                      type: 'String',
                      value: '',
                    },
                    col: {
                      kind: 'array',
                      type: 'Array',
                      value: [
                        {
                          kind: 'column',
                          type: 'Column',
                          value: 'price',
                          relation: null,
                        },
                        {
                          kind: 'column',
                          type: 'Column',
                          value: 'unit_price',
                          relation: null,
                        },
                      ],
                    },
                    on: {
                      kind: 'constant',
                      type: 'Regexp',
                      value: ',',
                    },
                    ignoreCase: {
                      kind: 'constant',
                      type: 'Bool',
                      value: false,
                    },
                    global: {
                      kind: 'constant',
                      type: 'Bool',
                      value: true,
                    },
                  },
                  outputName: null,
                },
                tableData: null,
                portId: null,
                id: 8548217,
                hash: '02d8b49ff0943957a53929a56888168961a43ece',
                pbemappingartifacts: [],
                targetmappingartifacts: [],
                dependencies: [],
              },
              {
                columnMetadata: {},
                task: {
                  annotations: {},
                  kind: 'task',
                  type: 'SetType',
                  parameters: {
                    col: {
                      kind: 'array',
                      type: 'Array',
                      value: [
                        {
                          kind: 'column',
                          type: 'Column',
                          value: 'price',
                          relation: null,
                        },
                        {
                          kind: 'column',
                          type: 'Column',
                          value: 'unit_price',
                          relation: null,
                        },
                      ],
                    },
                    type: {
                      kind: 'bundle',
                      type: 'Bundle',
                      value: 'Float',
                    },
                  },
                  outputName: null,
                },
                tableData: null,
                portId: null,
                id: 8548225,
                hash: '665211633bbf361676a54b290b728f118c888460',
                pbemappingartifacts: [],
                targetmappingartifacts: [],
                dependencies: [],
              },
              {
                columnMetadata: {
                  channel_oo: {
                    id: '-2pyrzai',
                  },
                },
                task: {
                  annotations: {
                    outputColumnAnnotations: {
                      channel_oo: {
                        type: [
                          'String',
                        ],
                        _likely_types: [
                          [
                            'String',
                          ],
                          [
                            'Integer',
                          ],
                          [
                            'Phone',
                          ],
                          [
                            'SSN',
                          ],
                          [
                            'Map',
                          ],
                        ],
                      },
                    },
                  },
                  kind: 'task',
                  type: 'Derive',
                  parameters: {
                    type: {
                      kind: 'bundle',
                      type: 'Bundle',
                      value: 'single',
                    },
                    value: {
                      annotations: {},
                      kind: 'func',
                      type: 'Case',
                      parameters: {
                        predicateValuePairs: {
                          kind: 'array',
                          type: 'Array',
                          value: [
                            {
                              annotations: {},
                              kind: 'func',
                              type: 'Matches',
                              parameters: {
                                ignore_case: {
                                  kind: 'constant',
                                  type: 'Bool',
                                  value: false,
                                },
                                lhs: {
                                  kind: 'array',
                                  type: 'Array',
                                  value: [
                                    {
                                      kind: 'column',
                                      type: 'Column',
                                      value: 'sale_channel',
                                      relation: null,
                                    },
                                  ],
                                },
                                rhs: {
                                  kind: 'constant',
                                  type: 'Regexp',
                                  value: '網路',
                                },
                              },
                            },
                            {
                              kind: 'constant',
                              type: 'String',
                              value: '線上',
                            },
                            {
                              kind: 'constant',
                              type: 'String',
                              value: '線下',
                            },
                          ],
                        },
                      },
                    },
                    as: {
                      kind: 'constant',
                      type: 'String',
                      value: 'channel_oo',
                    },
                  },
                  outputName: null,
                },
                tableData: null,
                portId: null,
                id: 10647398,
                hash: '529466e72f09bf6bd3183fdb36d269f510704801',
                pbemappingartifacts: [],
                targetmappingartifacts: [],
                dependencies: [],
              },
              {
                columnMetadata: {
                  sale_channel_sort: {
                    id: '-7ni49ei',
                  },
                },
                task: {
                  annotations: {
                    outputColumnAnnotations: {
                      sale_channel_sort: {
                        type: [
                          'Integer',
                        ],
                        _likely_types: [
                          [
                            'Integer',
                          ],
                          [
                            'Float',
                          ],
                          [
                            'String',
                          ],
                          [
                            'Phone',
                          ],
                          [
                            'SSN',
                          ],
                        ],
                      },
                    },
                  },
                  kind: 'task',
                  type: 'Derive',
                  parameters: {
                    type: {
                      kind: 'bundle',
                      type: 'Bundle',
                      value: 'single',
                    },
                    value: {
                      annotations: {},
                      kind: 'func',
                      type: 'Case',
                      parameters: {
                        predicateValuePairs: {
                          kind: 'array',
                          type: 'Array',
                          value: [
                            {
                              annotations: {
                                infix: true,
                                parenthetical: false,
                              },
                              kind: 'func',
                              type: 'Equal',
                              parameters: {
                                lhs: {
                                  kind: 'column',
                                  type: 'Column',
                                  value: 'sale_channel',
                                  relation: null,
                                },
                                rhs: {
                                  kind: 'constant',
                                  type: 'String',
                                  value: '內湖旗艦店',
                                },
                              },
                            },
                            {
                              kind: 'constant',
                              type: 'Integer',
                              value: 100,
                            },
                            {
                              annotations: {
                                infix: true,
                                parenthetical: false,
                              },
                              kind: 'func',
                              type: 'Equal',
                              parameters: {
                                lhs: {
                                  kind: 'column',
                                  type: 'Column',
                                  value: 'sale_channel',
                                  relation: null,
                                },
                                rhs: {
                                  kind: 'constant',
                                  type: 'String',
                                  value: '新竹竹北店',
                                },
                              },
                            },
                            {
                              kind: 'constant',
                              type: 'Integer',
                              value: 102,
                            },
                            {
                              annotations: {
                                infix: true,
                                parenthetical: false,
                              },
                              kind: 'func',
                              type: 'Equal',
                              parameters: {
                                lhs: {
                                  kind: 'column',
                                  type: 'Column',
                                  value: 'sale_channel',
                                  relation: null,
                                },
                                rhs: {
                                  kind: 'constant',
                                  type: 'String',
                                  value: '台中文心店',
                                },
                              },
                            },
                            {
                              kind: 'constant',
                              type: 'Integer',
                              value: 103,
                            },
                            {
                              annotations: {
                                infix: true,
                                parenthetical: false,
                              },
                              kind: 'func',
                              type: 'Equal',
                              parameters: {
                                lhs: {
                                  kind: 'column',
                                  type: 'Column',
                                  value: 'sale_channel',
                                  relation: null,
                                },
                                rhs: {
                                  kind: 'constant',
                                  type: 'String',
                                  value: '高雄巨蛋店',
                                },
                              },
                            },
                            {
                              kind: 'constant',
                              type: 'Integer',
                              value: 104,
                            },
                            {
                              annotations: {},
                              kind: 'func',
                              type: 'Matches',
                              parameters: {
                                ignore_case: {
                                  kind: 'constant',
                                  type: 'Bool',
                                  value: false,
                                },
                                lhs: {
                                  kind: 'array',
                                  type: 'Array',
                                  value: [
                                    {
                                      kind: 'column',
                                      type: 'Column',
                                      value: 'sale_channel',
                                      relation: null,
                                    },
                                  ],
                                },
                                rhs: {
                                  kind: 'constant',
                                  type: 'Regexp',
                                  value: '網路',
                                },
                              },
                            },
                            {
                              kind: 'constant',
                              type: 'Integer',
                              value: 200,
                            },
                            {
                              kind: 'constant',
                              type: 'Integer',
                              value: 300,
                            },
                          ],
                        },
                      },
                    },
                    as: {
                      kind: 'constant',
                      type: 'String',
                      value: 'sale_channel_sort',
                    },
                  },
                  outputName: null,
                },
                tableData: null,
                portId: null,
                id: 10650937,
                hash: '6c632558946d5cf4ec12419390d0c79523d44550',
                pbemappingartifacts: [],
                targetmappingartifacts: [],
                dependencies: [],
              },
              {
                columnMetadata: {},
                task: {
                  annotations: {},
                  kind: 'task',
                  type: 'DateFormat',
                  parameters: {
                    col: {
                      kind: 'array',
                      type: 'Array',
                      value: [
                        {
                          kind: 'column',
                          type: 'Column',
                          value: 'ecount_date',
                          relation: null,
                        },
                      ],
                    },
                    type: {
                      kind: 'bundle',
                      type: 'Bundle',
                      value: 'yymmddcommondateslash',
                    },
                  },
                  outputName: null,
                },
                tableData: null,
                portId: null,
                id: 8548331,
                hash: 'c9b9e9032617779250a55fe2511bdf112f532f85',
                pbemappingartifacts: [],
                targetmappingartifacts: [],
                dependencies: [],
              },
              {
                columnMetadata: {
                  addr2: {
                    id: 'dyv9rcc',
                  },
                },
                task: {
                  annotations: {
                    outputColumnAnnotations: {
                      addr2: {
                        type: [
                          'String',
                        ],
                        _likely_types: [
                          [
                            'String',
                          ],
                          [
                            'Integer',
                          ],
                          [
                            'Phone',
                          ],
                          [
                            'SSN',
                          ],
                          [
                            'Map',
                          ],
                        ],
                      },
                    },
                  },
                  kind: 'task',
                  type: 'ExtractPatterns',
                  parameters: {
                    col: {
                      kind: 'column',
                      type: 'Column',
                      value: 'addr1',
                      relation: null,
                    },
                    type: {
                      kind: 'bundle',
                      type: 'Bundle',
                      value: 'custom',
                    },
                    on: {
                      kind: 'constant',
                      type: 'Regexp',
                      value: '臺北市|台北市|台北|北市|南海島|釣魚臺|基隆市|新北市|新北|新店|板橋|宜蘭縣|宜蘭|連江縣|桃園市|新竹市|新竹縣|竹北市|新竹門市|新竹|桃園市|桃園|苗栗縣|苗栗市|臺中市|台中市|彰化縣|彰化市|彰化|南投縣|南投市|嘉義市|嘉義縣|雲林縣|臺南市|台南市|高雄市|高雄|澎湖縣|金門縣|屏東縣|屏東市|臺東縣|台東縣|臺東市|台東市|花蓮縣|花蓮市|自取',
                    },
                    limit: {
                      kind: 'constant',
                      type: 'Integer',
                      value: 1,
                    },
                    ignoreCase: {
                      kind: 'constant',
                      type: 'Bool',
                      value: false,
                    },
                    as: {
                      kind: 'array',
                      type: 'Array',
                      value: [
                        {
                          kind: 'constant',
                          type: 'String',
                          value: 'addr2',
                        },
                      ],
                    },
                  },
                  outputName: null,
                },
                tableData: null,
                portId: null,
                id: 10901592,
                hash: 'efb47e8651985e5ccde4e544a0ed3973b4c94c4a',
                pbemappingartifacts: [],
                targetmappingartifacts: [],
                dependencies: [],
              },
              {
                columnMetadata: {
                  district: {
                    id: '-3czws5b',
                  },
                },
                task: {
                  annotations: {
                    outputColumnAnnotations: {
                      district: {
                        type: [
                          'String',
                        ],
                        _likely_types: [
                          [
                            'String',
                          ],
                          [
                            'Integer',
                          ],
                          [
                            'Phone',
                          ],
                          [
                            'SSN',
                          ],
                          [
                            'Map',
                          ],
                        ],
                      },
                    },
                  },
                  kind: 'task',
                  type: 'Derive',
                  parameters: {
                    type: {
                      kind: 'bundle',
                      type: 'Bundle',
                      value: 'single',
                    },
                    value: {
                      annotations: {},
                      kind: 'func',
                      type: 'Case',
                      parameters: {
                        predicateValuePairs: {
                          kind: 'array',
                          type: 'Array',
                          value: [
                            {
                              annotations: {},
                              kind: 'func',
                              type: 'Matches',
                              parameters: {
                                ignore_case: {
                                  kind: 'constant',
                                  type: 'Bool',
                                  value: false,
                                },
                                lhs: {
                                  kind: 'array',
                                  type: 'Array',
                                  value: [
                                    {
                                      kind: 'column',
                                      type: 'Column',
                                      value: 'addr2',
                                      relation: null,
                                    },
                                  ],
                                },
                                rhs: {
                                  kind: 'constant',
                                  type: 'Regexp',
                                  value: '^(台北市|台北|北市)',
                                },
                              },
                            },
                            {
                              kind: 'constant',
                              type: 'String',
                              value: '臺北市',
                            },
                            {
                              annotations: {},
                              kind: 'func',
                              type: 'Matches',
                              parameters: {
                                ignore_case: {
                                  kind: 'constant',
                                  type: 'Bool',
                                  value: false,
                                },
                                lhs: {
                                  kind: 'array',
                                  type: 'Array',
                                  value: [
                                    {
                                      kind: 'column',
                                      type: 'Column',
                                      value: 'addr2',
                                      relation: null,
                                    },
                                  ],
                                },
                                rhs: {
                                  kind: 'constant',
                                  type: 'Regexp',
                                  value: '^(新北|板橋|新店)',
                                },
                              },
                            },
                            {
                              kind: 'constant',
                              type: 'String',
                              value: '新北市',
                            },
                            {
                              annotations: {},
                              kind: 'func',
                              type: 'Matches',
                              parameters: {
                                ignore_case: {
                                  kind: 'constant',
                                  type: 'Bool',
                                  value: false,
                                },
                                lhs: {
                                  kind: 'array',
                                  type: 'Array',
                                  value: [
                                    {
                                      kind: 'column',
                                      type: 'Column',
                                      value: 'addr2',
                                      relation: null,
                                    },
                                  ],
                                },
                                rhs: {
                                  kind: 'constant',
                                  type: 'String',
                                  value: '宜蘭',
                                },
                              },
                            },
                            {
                              kind: 'constant',
                              type: 'String',
                              value: '宜蘭縣',
                            },
                            {
                              annotations: {
                                infix: true,
                                parenthetical: false,
                              },
                              kind: 'func',
                              type: 'Equal',
                              parameters: {
                                lhs: {
                                  kind: 'column',
                                  type: 'Column',
                                  value: 'addr2',
                                  relation: null,
                                },
                                rhs: {
                                  kind: 'constant',
                                  type: 'String',
                                  value: '桃園',
                                },
                              },
                            },
                            {
                              kind: 'constant',
                              type: 'String',
                              value: '桃園市',
                            },
                            {
                              annotations: {
                                infix: true,
                                parenthetical: false,
                              },
                              kind: 'func',
                              type: 'Or',
                              parameters: {
                                lhs: {
                                  annotations: {},
                                  kind: 'func',
                                  type: 'Matches',
                                  parameters: {
                                    ignore_case: {
                                      kind: 'constant',
                                      type: 'Bool',
                                      value: false,
                                    },
                                    lhs: {
                                      kind: 'array',
                                      type: 'Array',
                                      value: [
                                        {
                                          kind: 'column',
                                          type: 'Column',
                                          value: 'addr2',
                                          relation: null,
                                        },
                                      ],
                                    },
                                    rhs: {
                                      kind: 'constant',
                                      type: 'Regexp',
                                      value: '^(竹北市|新竹門市)',
                                    },
                                  },
                                },
                                rhs: {
                                  annotations: {},
                                  kind: 'func',
                                  type: 'Matches',
                                  parameters: {
                                    ignore_case: {
                                      kind: 'constant',
                                      type: 'Bool',
                                      value: false,
                                    },
                                    lhs: {
                                      kind: 'array',
                                      type: 'Array',
                                      value: [
                                        {
                                          kind: 'column',
                                          type: 'Column',
                                          value: 'addr2',
                                          relation: null,
                                        },
                                      ],
                                    },
                                    rhs: {
                                      kind: 'constant',
                                      type: 'Regexp',
                                      value: '^新竹$',
                                    },
                                  },
                                },
                              },
                            },
                            {
                              kind: 'constant',
                              type: 'String',
                              value: '新竹縣',
                            },
                            {
                              annotations: {
                                infix: true,
                                parenthetical: false,
                              },
                              kind: 'func',
                              type: 'Equal',
                              parameters: {
                                lhs: {
                                  kind: 'column',
                                  type: 'Column',
                                  value: 'addr2',
                                  relation: null,
                                },
                                rhs: {
                                  kind: 'constant',
                                  type: 'String',
                                  value: '苗栗市',
                                },
                              },
                            },
                            {
                              kind: 'constant',
                              type: 'String',
                              value: '苗栗縣',
                            },
                            {
                              annotations: {
                                infix: true,
                                parenthetical: false,
                              },
                              kind: 'func',
                              type: 'Equal',
                              parameters: {
                                lhs: {
                                  kind: 'column',
                                  type: 'Column',
                                  value: 'addr2',
                                  relation: null,
                                },
                                rhs: {
                                  kind: 'constant',
                                  type: 'String',
                                  value: '台中市',
                                },
                              },
                            },
                            {
                              kind: 'constant',
                              type: 'String',
                              value: '臺中市',
                            },
                            {
                              annotations: {},
                              kind: 'func',
                              type: 'Matches',
                              parameters: {
                                ignore_case: {
                                  kind: 'constant',
                                  type: 'Bool',
                                  value: false,
                                },
                                lhs: {
                                  kind: 'array',
                                  type: 'Array',
                                  value: [
                                    {
                                      kind: 'column',
                                      type: 'Column',
                                      value: 'addr2',
                                      relation: null,
                                    },
                                  ],
                                },
                                rhs: {
                                  kind: 'constant',
                                  type: 'String',
                                  value: '彰化',
                                },
                              },
                            },
                            {
                              kind: 'constant',
                              type: 'String',
                              value: '彰化縣',
                            },
                            {
                              annotations: {
                                infix: true,
                                parenthetical: false,
                              },
                              kind: 'func',
                              type: 'Equal',
                              parameters: {
                                lhs: {
                                  kind: 'column',
                                  type: 'Column',
                                  value: 'addr2',
                                  relation: null,
                                },
                                rhs: {
                                  kind: 'constant',
                                  type: 'String',
                                  value: '南投市',
                                },
                              },
                            },
                            {
                              kind: 'constant',
                              type: 'String',
                              value: '南投縣',
                            },
                            {
                              annotations: {
                                infix: true,
                                parenthetical: false,
                              },
                              kind: 'func',
                              type: 'Equal',
                              parameters: {
                                lhs: {
                                  kind: 'column',
                                  type: 'Column',
                                  value: 'addr2',
                                  relation: null,
                                },
                                rhs: {
                                  kind: 'constant',
                                  type: 'String',
                                  value: '台南市',
                                },
                              },
                            },
                            {
                              kind: 'constant',
                              type: 'String',
                              value: '臺南市',
                            },
                            {
                              annotations: {},
                              kind: 'func',
                              type: 'Matches',
                              parameters: {
                                ignore_case: {
                                  kind: 'constant',
                                  type: 'Bool',
                                  value: false,
                                },
                                lhs: {
                                  kind: 'array',
                                  type: 'Array',
                                  value: [
                                    {
                                      kind: 'column',
                                      type: 'Column',
                                      value: 'addr2',
                                      relation: null,
                                    },
                                  ],
                                },
                                rhs: {
                                  kind: 'constant',
                                  type: 'Regexp',
                                  value: '^高雄$',
                                },
                              },
                            },
                            {
                              kind: 'constant',
                              type: 'String',
                              value: '高雄市',
                            },
                            {
                              annotations: {
                                infix: true,
                                parenthetical: false,
                              },
                              kind: 'func',
                              type: 'Equal',
                              parameters: {
                                lhs: {
                                  kind: 'column',
                                  type: 'Column',
                                  value: 'addr2',
                                  relation: null,
                                },
                                rhs: {
                                  kind: 'constant',
                                  type: 'String',
                                  value: '屏東市',
                                },
                              },
                            },
                            {
                              kind: 'constant',
                              type: 'String',
                              value: '屏東縣',
                            },
                            {
                              annotations: {
                                infix: true,
                                parenthetical: false,
                              },
                              kind: 'func',
                              type: 'Equal',
                              parameters: {
                                lhs: {
                                  kind: 'column',
                                  type: 'Column',
                                  value: 'addr2',
                                  relation: null,
                                },
                                rhs: {
                                  kind: 'constant',
                                  type: 'String',
                                  value: '台東縣',
                                },
                              },
                            },
                            {
                              kind: 'constant',
                              type: 'String',
                              value: '臺東縣',
                            },
                            {
                              annotations: {
                                infix: true,
                                parenthetical: false,
                              },
                              kind: 'func',
                              type: 'Equal',
                              parameters: {
                                lhs: {
                                  kind: 'column',
                                  type: 'Column',
                                  value: 'addr2',
                                  relation: null,
                                },
                                rhs: {
                                  kind: 'constant',
                                  type: 'String',
                                  value: '台東市',
                                },
                              },
                            },
                            {
                              kind: 'constant',
                              type: 'String',
                              value: '臺東縣',
                            },
                            {
                              annotations: {
                                infix: true,
                                parenthetical: false,
                              },
                              kind: 'func',
                              type: 'Equal',
                              parameters: {
                                lhs: {
                                  kind: 'column',
                                  type: 'Column',
                                  value: 'addr2',
                                  relation: null,
                                },
                                rhs: {
                                  kind: 'constant',
                                  type: 'String',
                                  value: '臺東市',
                                },
                              },
                            },
                            {
                              kind: 'constant',
                              type: 'String',
                              value: '臺東縣',
                            },
                            {
                              annotations: {
                                infix: true,
                                parenthetical: false,
                              },
                              kind: 'func',
                              type: 'Equal',
                              parameters: {
                                lhs: {
                                  kind: 'column',
                                  type: 'Column',
                                  value: 'addr2',
                                  relation: null,
                                },
                                rhs: {
                                  kind: 'constant',
                                  type: 'String',
                                  value: '花蓮市',
                                },
                              },
                            },
                            {
                              kind: 'constant',
                              type: 'String',
                              value: '花蓮縣',
                            },
                            {
                              annotations: {
                                infix: true,
                                parenthetical: false,
                              },
                              kind: 'func',
                              type: 'And',
                              parameters: {
                                lhs: {
                                  annotations: {},
                                  kind: 'func',
                                  type: 'Matches',
                                  parameters: {
                                    ignore_case: {
                                      kind: 'constant',
                                      type: 'Bool',
                                      value: false,
                                    },
                                    lhs: {
                                      kind: 'array',
                                      type: 'Array',
                                      value: [
                                        {
                                          kind: 'column',
                                          type: 'Column',
                                          value: 'addr2',
                                          relation: null,
                                        },
                                      ],
                                    },
                                    rhs: {
                                      kind: 'constant',
                                      type: 'Regexp',
                                      value: '自取',
                                    },
                                  },
                                },
                                rhs: {
                                  annotations: {},
                                  kind: 'func',
                                  type: 'Matches',
                                  parameters: {
                                    ignore_case: {
                                      kind: 'constant',
                                      type: 'Bool',
                                      value: false,
                                    },
                                    lhs: {
                                      kind: 'array',
                                      type: 'Array',
                                      value: [
                                        {
                                          kind: 'column',
                                          type: 'Column',
                                          value: 'sale_channel',
                                          relation: null,
                                        },
                                      ],
                                    },
                                    rhs: {
                                      kind: 'constant',
                                      type: 'Regexp',
                                      value: '內湖',
                                    },
                                  },
                                },
                              },
                            },
                            {
                              kind: 'constant',
                              type: 'String',
                              value: '臺北市',
                            },
                            {
                              kind: 'column',
                              type: 'Column',
                              value: 'addr2',
                              relation: null,
                            },
                          ],
                        },
                      },
                    },
                    as: {
                      kind: 'constant',
                      type: 'String',
                      value: 'district',
                    },
                  },
                  outputName: null,
                },
                tableData: null,
                portId: null,
                id: 10902005,
                hash: '42127a5573547b51ba96df7b6cb79a4eb428056e',
                pbemappingartifacts: [],
                targetmappingartifacts: [],
                dependencies: [],
              },
              {
                columnMetadata: {
                  region: {
                    id: '-214h1oa',
                  },
                },
                task: {
                  annotations: {
                    outputColumnAnnotations: {
                      region: {
                        type: [
                          'String',
                        ],
                        _likely_types: [
                          [
                            'String',
                          ],
                          [
                            'Integer',
                          ],
                          [
                            'Phone',
                          ],
                          [
                            'SSN',
                          ],
                          [
                            'Map',
                          ],
                        ],
                      },
                    },
                  },
                  kind: 'task',
                  type: 'Derive',
                  parameters: {
                    type: {
                      kind: 'bundle',
                      type: 'Bundle',
                      value: 'single',
                    },
                    value: {
                      annotations: {},
                      kind: 'func',
                      type: 'Case',
                      parameters: {
                        predicateValuePairs: {
                          kind: 'array',
                          type: 'Array',
                          value: [
                            {
                              annotations: {},
                              kind: 'func',
                              type: 'Matches',
                              parameters: {
                                ignore_case: {
                                  kind: 'constant',
                                  type: 'Bool',
                                  value: false,
                                },
                                lhs: {
                                  kind: 'array',
                                  type: 'Array',
                                  value: [
                                    {
                                      kind: 'column',
                                      type: 'Column',
                                      value: 'addr2',
                                      relation: null,
                                    },
                                  ],
                                },
                                rhs: {
                                  kind: 'constant',
                                  type: 'Regexp',
                                  value: '臺北市|台北市|台北|北市|新北市|新北|新店|板橋|基隆市|宜蘭縣|宜蘭',
                                },
                              },
                            },
                            {
                              kind: 'constant',
                              type: 'String',
                              value: '北部',
                            },
                            {
                              annotations: {},
                              kind: 'func',
                              type: 'Matches',
                              parameters: {
                                ignore_case: {
                                  kind: 'constant',
                                  type: 'Bool',
                                  value: false,
                                },
                                lhs: {
                                  kind: 'array',
                                  type: 'Array',
                                  value: [
                                    {
                                      kind: 'column',
                                      type: 'Column',
                                      value: 'addr2',
                                      relation: null,
                                    },
                                  ],
                                },
                                rhs: {
                                  kind: 'constant',
                                  type: 'Regexp',
                                  value: '桃園市|桃園|新竹市|新竹縣|新竹|竹北市|苗栗縣|苗栗市',
                                },
                              },
                            },
                            {
                              kind: 'constant',
                              type: 'String',
                              value: '中北部',
                            },
                            {
                              annotations: {},
                              kind: 'func',
                              type: 'Matches',
                              parameters: {
                                ignore_case: {
                                  kind: 'constant',
                                  type: 'Bool',
                                  value: false,
                                },
                                lhs: {
                                  kind: 'array',
                                  type: 'Array',
                                  value: [
                                    {
                                      kind: 'column',
                                      type: 'Column',
                                      value: 'addr2',
                                      relation: null,
                                    },
                                  ],
                                },
                                rhs: {
                                  kind: 'constant',
                                  type: 'Regexp',
                                  value: '臺中市|台中市|彰化縣|彰化|南投縣|南投市|雲林縣',
                                },
                              },
                            },
                            {
                              kind: 'constant',
                              type: 'String',
                              value: '中部',
                            },
                            {
                              annotations: {},
                              kind: 'func',
                              type: 'Matches',
                              parameters: {
                                ignore_case: {
                                  kind: 'constant',
                                  type: 'Bool',
                                  value: false,
                                },
                                lhs: {
                                  kind: 'array',
                                  type: 'Array',
                                  value: [
                                    {
                                      kind: 'column',
                                      type: 'Column',
                                      value: 'addr2',
                                      relation: null,
                                    },
                                  ],
                                },
                                rhs: {
                                  kind: 'constant',
                                  type: 'Regexp',
                                  value: '嘉義縣|嘉義市|臺南市|台南市|高雄市|屏東縣|屏東|臺東縣|台東縣|臺東市|台東市',
                                },
                              },
                            },
                            {
                              kind: 'constant',
                              type: 'String',
                              value: '南部',
                            },
                            {
                              annotations: {
                                infix: true,
                                parenthetical: false,
                              },
                              kind: 'func',
                              type: 'Equal',
                              parameters: {
                                lhs: {
                                  kind: 'column',
                                  type: 'Column',
                                  value: 'addr2',
                                  relation: null,
                                },
                                rhs: {
                                  kind: 'constant',
                                  type: 'String',
                                  value: '花蓮縣',
                                },
                              },
                            },
                            {
                              kind: 'constant',
                              type: 'String',
                              value: '北部',
                            },
                            {
                              annotations: {
                                infix: true,
                                parenthetical: false,
                              },
                              kind: 'func',
                              type: 'Equal',
                              parameters: {
                                lhs: {
                                  kind: 'column',
                                  type: 'Column',
                                  value: 'addr2',
                                  relation: null,
                                },
                                rhs: {
                                  kind: 'constant',
                                  type: 'String',
                                  value: '花蓮市',
                                },
                              },
                            },
                            {
                              kind: 'constant',
                              type: 'String',
                              value: '北部',
                            },
                            {
                              annotations: {
                                infix: true,
                                parenthetical: false,
                              },
                              kind: 'func',
                              type: 'Equal',
                              parameters: {
                                lhs: {
                                  kind: 'column',
                                  type: 'Column',
                                  value: 'addr2',
                                  relation: null,
                                },
                                rhs: {
                                  kind: 'constant',
                                  type: 'String',
                                  value: '澎湖縣',
                                },
                              },
                            },
                            {
                              kind: 'constant',
                              type: 'String',
                              value: '北部',
                            },
                            {
                              annotations: {
                                infix: true,
                                parenthetical: false,
                              },
                              kind: 'func',
                              type: 'And',
                              parameters: {
                                lhs: {
                                  annotations: {},
                                  kind: 'func',
                                  type: 'Matches',
                                  parameters: {
                                    ignore_case: {
                                      kind: 'constant',
                                      type: 'Bool',
                                      value: false,
                                    },
                                    lhs: {
                                      kind: 'array',
                                      type: 'Array',
                                      value: [
                                        {
                                          kind: 'column',
                                          type: 'Column',
                                          value: 'addr2',
                                          relation: null,
                                        },
                                      ],
                                    },
                                    rhs: {
                                      kind: 'constant',
                                      type: 'Regexp',
                                      value: '自取',
                                    },
                                  },
                                },
                                rhs: {
                                  annotations: {},
                                  kind: 'func',
                                  type: 'Matches',
                                  parameters: {
                                    ignore_case: {
                                      kind: 'constant',
                                      type: 'Bool',
                                      value: false,
                                    },
                                    lhs: {
                                      kind: 'array',
                                      type: 'Array',
                                      value: [
                                        {
                                          kind: 'column',
                                          type: 'Column',
                                          value: 'sale_channel',
                                          relation: null,
                                        },
                                      ],
                                    },
                                    rhs: {
                                      kind: 'constant',
                                      type: 'Regexp',
                                      value: '內湖',
                                    },
                                  },
                                },
                              },
                            },
                            {
                              kind: 'constant',
                              type: 'String',
                              value: '北部',
                            },
                          ],
                        },
                      },
                    },
                    as: {
                      kind: 'constant',
                      type: 'String',
                      value: 'region',
                    },
                  },
                  outputName: null,
                },
                tableData: null,
                portId: null,
                id: 10244994,
                hash: 'a9e229f0a7d867fe0091fe7cde19c603266ad9c7',
                pbemappingartifacts: [],
                targetmappingartifacts: [],
                dependencies: [],
              },
              {
                columnMetadata: {
                  region_sort: {
                    id: '-9npacf9',
                  },
                },
                task: {
                  annotations: {
                    outputColumnAnnotations: {
                      region_sort: {
                        type: [
                          'Integer',
                        ],
                        _likely_types: [
                          [
                            'Integer',
                          ],
                          [
                            'Float',
                          ],
                          [
                            'String',
                          ],
                          [
                            'Phone',
                          ],
                          [
                            'SSN',
                          ],
                        ],
                      },
                    },
                  },
                  kind: 'task',
                  type: 'Derive',
                  parameters: {
                    type: {
                      kind: 'bundle',
                      type: 'Bundle',
                      value: 'single',
                    },
                    value: {
                      annotations: {},
                      kind: 'func',
                      type: 'Case',
                      parameters: {
                        predicateValuePairs: {
                          kind: 'array',
                          type: 'Array',
                          value: [
                            {
                              annotations: {
                                infix: true,
                                parenthetical: false,
                              },
                              kind: 'func',
                              type: 'Equal',
                              parameters: {
                                lhs: {
                                  kind: 'column',
                                  type: 'Column',
                                  value: 'region',
                                  relation: null,
                                },
                                rhs: {
                                  kind: 'constant',
                                  type: 'String',
                                  value: '北部',
                                },
                              },
                            },
                            {
                              kind: 'constant',
                              type: 'Integer',
                              value: 10,
                            },
                            {
                              annotations: {
                                infix: true,
                                parenthetical: false,
                              },
                              kind: 'func',
                              type: 'Equal',
                              parameters: {
                                lhs: {
                                  kind: 'column',
                                  type: 'Column',
                                  value: 'region',
                                  relation: null,
                                },
                                rhs: {
                                  kind: 'constant',
                                  type: 'String',
                                  value: '中北部',
                                },
                              },
                            },
                            {
                              kind: 'constant',
                              type: 'Integer',
                              value: 11,
                            },
                            {
                              annotations: {
                                infix: true,
                                parenthetical: false,
                              },
                              kind: 'func',
                              type: 'Equal',
                              parameters: {
                                lhs: {
                                  kind: 'column',
                                  type: 'Column',
                                  value: 'region',
                                  relation: null,
                                },
                                rhs: {
                                  kind: 'constant',
                                  type: 'String',
                                  value: '中部',
                                },
                              },
                            },
                            {
                              kind: 'constant',
                              type: 'Integer',
                              value: 20,
                            },
                            {
                              annotations: {
                                infix: true,
                                parenthetical: false,
                              },
                              kind: 'func',
                              type: 'Equal',
                              parameters: {
                                lhs: {
                                  kind: 'column',
                                  type: 'Column',
                                  value: 'region',
                                  relation: null,
                                },
                                rhs: {
                                  kind: 'constant',
                                  type: 'String',
                                  value: '南部',
                                },
                              },
                            },
                            {
                              kind: 'constant',
                              type: 'Integer',
                              value: 30,
                            },
                            {
                              kind: 'constant',
                              type: 'Integer',
                              value: 99,
                            },
                          ],
                        },
                      },
                    },
                    as: {
                      kind: 'constant',
                      type: 'String',
                      value: 'region_sort',
                    },
                  },
                  outputName: null,
                },
                tableData: null,
                portId: null,
                id: 10245009,
                hash: 'c6297ad31f6c7aea06115f148de116369a19d52b',
                pbemappingartifacts: [],
                targetmappingartifacts: [],
                dependencies: [],
              },
              {
                columnMetadata: {
                  category_group1: {
                    id: 'k3cjnh',
                  },
                },
                task: {
                  annotations: {
                    outputColumnAnnotations: {
                      category_group1: {
                        type: [
                          'String',
                        ],
                        _likely_types: [
                          [
                            'String',
                          ],
                          [
                            'Integer',
                          ],
                          [
                            'Phone',
                          ],
                          [
                            'SSN',
                          ],
                          [
                            'Map',
                          ],
                        ],
                      },
                    },
                  },
                  kind: 'task',
                  type: 'ExtractPatterns',
                  parameters: {
                    col: {
                      kind: 'column',
                      type: 'Column',
                      value: 'category_group',
                      relation: null,
                    },
                    type: {
                      kind: 'bundle',
                      type: 'Bundle',
                      value: 'custom',
                    },
                    on: {
                      kind: 'constant',
                      type: 'Regexp',
                      value: '[^ㆍ]+節',
                    },
                    ignoreCase: {
                      kind: 'constant',
                      type: 'Bool',
                      value: false,
                    },
                    as: {
                      kind: 'array',
                      type: 'Array',
                      value: [
                        {
                          kind: 'constant',
                          type: 'String',
                          value: 'category_group1',
                        },
                      ],
                    },
                  },
                  outputName: null,
                },
                tableData: null,
                portId: null,
                id: 8548595,
                hash: '5e18e1dd1bdae9d4f3ae21e586274bcce9854ba0',
                pbemappingartifacts: [],
                targetmappingartifacts: [],
                dependencies: [],
              },
              {
                columnMetadata: {},
                task: {
                  annotations: {
                    outputColumnAnnotations: {},
                  },
                  kind: 'task',
                  type: 'Rename',
                  parameters: {
                    type: {
                      kind: 'bundle',
                      type: 'Bundle',
                      value: 'manual',
                    },
                    mapping: {
                      kind: 'matrix',
                      type: 'Matrix',
                      value: [
                        {
                          kind: 'array',
                          type: 'Array',
                          value: [
                            {
                              kind: 'column',
                              type: 'Column',
                              value: 'category_group1',
                              relation: null,
                            },
                            {
                              kind: 'constant',
                              type: 'String',
                              value: 'category_campaign',
                            },
                          ],
                        },
                      ],
                    },
                  },
                  outputName: null,
                },
                tableData: null,
                portId: null,
                id: 6791690,
                hash: '5506d85e21adbeaa768f486a626aa2b18d507ee9',
                pbemappingartifacts: [],
                targetmappingartifacts: [],
                dependencies: [],
              },
              {
                columnMetadata: {
                  category_group1: {
                    id: 'k1idtuq',
                  },
                },
                task: {
                  annotations: {
                    outputColumnAnnotations: {
                      category_group1: {
                        type: [
                          'String',
                        ],
                        _likely_types: [
                          [
                            'String',
                          ],
                          [
                            'Integer',
                          ],
                          [
                            'Bool',
                          ],
                          [
                            'Float',
                          ],
                          [
                            'Phone',
                          ],
                        ],
                      },
                    },
                  },
                  kind: 'task',
                  type: 'ExtractPatterns',
                  parameters: {
                    col: {
                      kind: 'column',
                      type: 'Column',
                      value: 'category_group',
                      relation: null,
                    },
                    type: {
                      kind: 'bundle',
                      type: 'Bundle',
                      value: 'custom',
                    },
                    on: {
                      kind: 'constant',
                      type: 'Regexp',
                      value: '陶板|布料|皮革|塑料|大理石',
                    },
                    ignoreCase: {
                      kind: 'constant',
                      type: 'Bool',
                      value: false,
                    },
                    as: {
                      kind: 'array',
                      type: 'Array',
                      value: [
                        {
                          kind: 'constant',
                          type: 'String',
                          value: 'category_group1',
                        },
                      ],
                    },
                  },
                  outputName: null,
                },
                tableData: null,
                portId: null,
                id: 8548597,
                hash: 'a1ddd2a65745e1007a52e32b72201d973c00f899',
                pbemappingartifacts: [],
                targetmappingartifacts: [],
                dependencies: [],
              },
              {
                columnMetadata: {},
                task: {
                  annotations: {},
                  kind: 'task',
                  type: 'Rename',
                  parameters: {
                    type: {
                      kind: 'bundle',
                      type: 'Bundle',
                      value: 'manual',
                    },
                    mapping: {
                      kind: 'matrix',
                      type: 'Matrix',
                      value: [
                        {
                          kind: 'array',
                          type: 'Array',
                          value: [
                            {
                              kind: 'column',
                              type: 'Column',
                              value: 'category_group1',
                              relation: null,
                            },
                            {
                              kind: 'constant',
                              type: 'String',
                              value: 'category_material',
                            },
                          ],
                        },
                      ],
                    },
                  },
                  outputName: null,
                },
                tableData: null,
                portId: null,
                id: 8548602,
                hash: 'da992a4f389e07952c22ed787f26c903b5562307',
                pbemappingartifacts: [],
                targetmappingartifacts: [],
                dependencies: [],
              },
              {
                columnMetadata: {
                  category_group1: {
                    id: '-386dk9w',
                  },
                },
                task: {
                  annotations: {
                    outputColumnAnnotations: {
                      category_group1: {
                        type: [
                          'String',
                        ],
                        _likely_types: [
                          [
                            'String',
                          ],
                          [
                            'State',
                          ],
                          [
                            'Integer',
                          ],
                          [
                            'Phone',
                          ],
                          [
                            'SSN',
                          ],
                        ],
                      },
                    },
                  },
                  kind: 'task',
                  type: 'ExtractPatterns',
                  parameters: {
                    col: {
                      kind: 'column',
                      type: 'Column',
                      value: 'category_group',
                      relation: null,
                    },
                    type: {
                      kind: 'bundle',
                      type: 'Bundle',
                      value: 'custom',
                    },
                    on: {
                      kind: 'constant',
                      type: 'Regexp',
                      value: 'AT|CA|CC|CO|DG|MN|SD|ST',
                    },
                    ignoreCase: {
                      kind: 'constant',
                      type: 'Bool',
                      value: false,
                    },
                    as: {
                      kind: 'array',
                      type: 'Array',
                      value: [
                        {
                          kind: 'constant',
                          type: 'String',
                          value: 'category_group1',
                        },
                      ],
                    },
                  },
                  outputName: null,
                },
                tableData: null,
                portId: null,
                id: 8548617,
                hash: '22dadcbee8359e598db7f38bf1a7565501c9c2a1',
                pbemappingartifacts: [],
                targetmappingartifacts: [],
                dependencies: [],
              },
              {
                columnMetadata: {},
                task: {
                  annotations: {},
                  kind: 'task',
                  type: 'Rename',
                  parameters: {
                    type: {
                      kind: 'bundle',
                      type: 'Bundle',
                      value: 'manual',
                    },
                    mapping: {
                      kind: 'matrix',
                      type: 'Matrix',
                      value: [
                        {
                          kind: 'array',
                          type: 'Array',
                          value: [
                            {
                              kind: 'column',
                              type: 'Column',
                              value: 'category_group1',
                              relation: null,
                            },
                            {
                              kind: 'constant',
                              type: 'String',
                              value: 'category_factory',
                            },
                          ],
                        },
                      ],
                    },
                  },
                  outputName: null,
                },
                tableData: null,
                portId: null,
                id: 8548618,
                hash: '54bdfbd885d72c4337854ee5e4ba0e5b13a7e1bc',
                pbemappingartifacts: [],
                targetmappingartifacts: [],
                dependencies: [],
              },
              {
                columnMetadata: {
                  category_group1: {
                    id: '-pgxrub',
                  },
                },
                task: {
                  annotations: {
                    outputColumnAnnotations: {
                      category_group1: {
                        type: [
                          'String',
                        ],
                        _likely_types: [
                          [
                            'String',
                          ],
                          [
                            'Integer',
                          ],
                          [
                            'Phone',
                          ],
                          [
                            'SSN',
                          ],
                          [
                            'Map',
                          ],
                        ],
                      },
                    },
                  },
                  kind: 'task',
                  type: 'ExtractPatterns',
                  parameters: {
                    col: {
                      kind: 'column',
                      type: 'Column',
                      value: 'category_group',
                      relation: null,
                    },
                    type: {
                      kind: 'bundle',
                      type: 'Bundle',
                      value: 'custom',
                    },
                    on: {
                      kind: 'constant',
                      type: 'Regexp',
                      value: '世紀中現代風|美式鄉村風格|法式鄉村風格|工業風格|美式|法式|北歐',
                    },
                    ignoreCase: {
                      kind: 'constant',
                      type: 'Bool',
                      value: false,
                    },
                    as: {
                      kind: 'array',
                      type: 'Array',
                      value: [
                        {
                          kind: 'constant',
                          type: 'String',
                          value: 'category_group1',
                        },
                      ],
                    },
                  },
                  outputName: null,
                },
                tableData: null,
                portId: null,
                id: 8548620,
                hash: '735eb32bf8fac6eeb2ca4d36220e5d70c161deef',
                pbemappingartifacts: [],
                targetmappingartifacts: [],
                dependencies: [],
              },
              {
                columnMetadata: {},
                task: {
                  annotations: {},
                  kind: 'task',
                  type: 'Rename',
                  parameters: {
                    type: {
                      kind: 'bundle',
                      type: 'Bundle',
                      value: 'manual',
                    },
                    mapping: {
                      kind: 'matrix',
                      type: 'Matrix',
                      value: [
                        {
                          kind: 'array',
                          type: 'Array',
                          value: [
                            {
                              kind: 'column',
                              type: 'Column',
                              value: 'category_group1',
                              relation: null,
                            },
                            {
                              kind: 'constant',
                              type: 'String',
                              value: 'category_style_tmp',
                            },
                          ],
                        },
                      ],
                    },
                  },
                  outputName: null,
                },
                tableData: null,
                portId: null,
                id: 8548624,
                hash: '658658e6659af4ad6da59de54c947350d808f3e1',
                pbemappingartifacts: [],
                targetmappingartifacts: [],
                dependencies: [],
              },
              {
                columnMetadata: {
                  category_style: {
                    id: '4ocdzax',
                  },
                },
                task: {
                  annotations: {
                    outputColumnAnnotations: {
                      category_style: {
                        type: [
                          'String',
                        ],
                        _likely_types: [
                          [
                            'String',
                          ],
                          [
                            'Integer',
                          ],
                          [
                            'Phone',
                          ],
                          [
                            'SSN',
                          ],
                          [
                            'Map',
                          ],
                        ],
                      },
                    },
                  },
                  kind: 'task',
                  type: 'Derive',
                  parameters: {
                    type: {
                      kind: 'bundle',
                      type: 'Bundle',
                      value: 'single',
                    },
                    value: {
                      annotations: {},
                      kind: 'func',
                      type: 'Case',
                      parameters: {
                        predicateValuePairs: {
                          kind: 'array',
                          type: 'Array',
                          value: [
                            {
                              annotations: {},
                              kind: 'func',
                              type: 'Matches',
                              parameters: {
                                ignore_case: {
                                  kind: 'constant',
                                  type: 'Bool',
                                  value: false,
                                },
                                lhs: {
                                  kind: 'array',
                                  type: 'Array',
                                  value: [
                                    {
                                      kind: 'column',
                                      type: 'Column',
                                      value: 'category_factory',
                                      relation: null,
                                    },
                                  ],
                                },
                                rhs: {
                                  kind: 'constant',
                                  type: 'Regexp',
                                  value: 'ST',
                                },
                              },
                            },
                            {
                              kind: 'constant',
                              type: 'String',
                              value: 'MCM',
                            },
                            {
                              annotations: {},
                              kind: 'func',
                              type: 'Not',
                              parameters: {
                                operand: {
                                  annotations: {},
                                  kind: 'func',
                                  type: 'IsNull',
                                  parameters: {
                                    col: {
                                      kind: 'column',
                                      type: 'Column',
                                      value: 'category_style_tmp',
                                      relation: null,
                                    },
                                  },
                                },
                              },
                            },
                            {
                              kind: 'column',
                              type: 'Column',
                              value: 'category_style_tmp',
                              relation: null,
                            },
                            {
                              annotations: {},
                              kind: 'func',
                              type: 'Null',
                              parameters: {},
                            },
                          ],
                        },
                      },
                    },
                    as: {
                      kind: 'constant',
                      type: 'String',
                      value: 'category_style',
                    },
                  },
                  outputName: null,
                },
                tableData: null,
                portId: null,
                id: 8548682,
                hash: '89f023a8ad43748a6f358378cd9c3de6b81f61e6',
                pbemappingartifacts: [],
                targetmappingartifacts: [],
                dependencies: [],
              },
              {
                columnMetadata: {
                  category_group1: {
                    id: 'cbcka0a',
                  },
                },
                task: {
                  annotations: {
                    outputColumnAnnotations: {
                      category_group1: {
                        type: [
                          'String',
                        ],
                        _likely_types: [
                          [
                            'String',
                          ],
                          [
                            'Integer',
                          ],
                          [
                            'Phone',
                          ],
                          [
                            'SSN',
                          ],
                          [
                            'Map',
                          ],
                        ],
                      },
                    },
                  },
                  kind: 'task',
                  type: 'ExtractPatterns',
                  parameters: {
                    col: {
                      kind: 'column',
                      type: 'Column',
                      value: 'category_group',
                      relation: null,
                    },
                    type: {
                      kind: 'bundle',
                      type: 'Bundle',
                      value: 'custom',
                    },
                    on: {
                      kind: 'constant',
                      type: 'Regexp',
                      value: '沙發\\/主人椅|腳凳|餐椅|板凳|吧椅|茶\\(邊\\)几|書桌|櫃架|床架|餐桌|寢具|家飾|燈飾|配件|鄉村風布套|辦公椅',
                    },
                    ignoreCase: {
                      kind: 'constant',
                      type: 'Bool',
                      value: false,
                    },
                    as: {
                      kind: 'array',
                      type: 'Array',
                      value: [
                        {
                          kind: 'constant',
                          type: 'String',
                          value: 'category_group1',
                        },
                      ],
                    },
                  },
                  outputName: null,
                },
                tableData: null,
                portId: null,
                id: 8954763,
                hash: 'ae8870456b7ef54f941613d96f2829e1b7b358b6',
                pbemappingartifacts: [],
                targetmappingartifacts: [],
                dependencies: [],
              },
              {
                columnMetadata: {},
                task: {
                  annotations: {},
                  kind: 'task',
                  type: 'Rename',
                  parameters: {
                    type: {
                      kind: 'bundle',
                      type: 'Bundle',
                      value: 'manual',
                    },
                    mapping: {
                      kind: 'matrix',
                      type: 'Matrix',
                      value: [
                        {
                          kind: 'array',
                          type: 'Array',
                          value: [
                            {
                              kind: 'column',
                              type: 'Column',
                              value: 'category_group1',
                              relation: null,
                            },
                            {
                              kind: 'constant',
                              type: 'String',
                              value: 'category_fun_tmp',
                            },
                          ],
                        },
                      ],
                    },
                  },
                  outputName: null,
                },
                tableData: null,
                portId: null,
                id: 8506674,
                hash: '5fd82ff8809007141a4de9ec18b379a45825145b',
                pbemappingartifacts: [],
                targetmappingartifacts: [],
                dependencies: [],
              },
              {
                columnMetadata: {
                  category_fun: {
                    id: '5cn5bib',
                  },
                },
                task: {
                  annotations: {
                    outputColumnAnnotations: {
                      category_fun: {
                        type: [
                          'String',
                        ],
                        _likely_types: [
                          [
                            'String',
                          ],
                          [
                            'Integer',
                          ],
                          [
                            'Phone',
                          ],
                          [
                            'SSN',
                          ],
                          [
                            'Map',
                          ],
                        ],
                      },
                    },
                  },
                  kind: 'task',
                  type: 'Derive',
                  parameters: {
                    type: {
                      kind: 'bundle',
                      type: 'Bundle',
                      value: 'single',
                    },
                    value: {
                      annotations: {},
                      kind: 'func',
                      type: 'Case',
                      parameters: {
                        predicateValuePairs: {
                          kind: 'array',
                          type: 'Array',
                          value: [
                            {
                              annotations: {
                                infix: true,
                                parenthetical: false,
                              },
                              kind: 'func',
                              type: 'And',
                              parameters: {
                                lhs: {
                                  annotations: {},
                                  kind: 'func',
                                  type: 'Matches',
                                  parameters: {
                                    ignore_case: {
                                      kind: 'constant',
                                      type: 'Bool',
                                      value: false,
                                    },
                                    lhs: {
                                      kind: 'array',
                                      type: 'Array',
                                      value: [
                                        {
                                          kind: 'column',
                                          type: 'Column',
                                          value: 'category_fun_tmp',
                                          relation: null,
                                        },
                                      ],
                                    },
                                    rhs: {
                                      kind: 'constant',
                                      type: 'String',
                                      value: '床架',
                                    },
                                  },
                                },
                                rhs: {
                                  annotations: {
                                    infix: true,
                                    parenthetical: false,
                                  },
                                  kind: 'func',
                                  type: 'And',
                                  parameters: {
                                    lhs: {
                                      annotations: {},
                                      kind: 'func',
                                      type: 'Not',
                                      parameters: {
                                        operand: {
                                          annotations: {},
                                          kind: 'func',
                                          type: 'Matches',
                                          parameters: {
                                            ignore_case: {
                                              kind: 'constant',
                                              type: 'Bool',
                                              value: false,
                                            },
                                            lhs: {
                                              kind: 'array',
                                              type: 'Array',
                                              value: [
                                                {
                                                  kind: 'column',
                                                  type: 'Column',
                                                  value: 'category_style',
                                                  relation: null,
                                                },
                                              ],
                                            },
                                            rhs: {
                                              kind: 'constant',
                                              type: 'String',
                                              value: 'MCM',
                                            },
                                          },
                                        },
                                      },
                                    },
                                    rhs: {
                                      annotations: {},
                                      kind: 'func',
                                      type: 'Not',
                                      parameters: {
                                        operand: {
                                          annotations: {},
                                          kind: 'func',
                                          type: 'Matches',
                                          parameters: {
                                            ignore_case: {
                                              kind: 'constant',
                                              type: 'Bool',
                                              value: false,
                                            },
                                            lhs: {
                                              kind: 'array',
                                              type: 'Array',
                                              value: [
                                                {
                                                  kind: 'column',
                                                  type: 'Column',
                                                  value: 'category_factory',
                                                  relation: null,
                                                },
                                              ],
                                            },
                                            rhs: {
                                              kind: 'constant',
                                              type: 'String',
                                              value: 'CC',
                                            },
                                          },
                                        },
                                      },
                                    },
                                  },
                                },
                              },
                            },
                            {
                              kind: 'constant',
                              type: 'String',
                              value: '床架',
                            },
                            {
                              annotations: {
                                infix: true,
                                parenthetical: false,
                              },
                              kind: 'func',
                              type: 'And',
                              parameters: {
                                lhs: {
                                  annotations: {},
                                  kind: 'func',
                                  type: 'Matches',
                                  parameters: {
                                    ignore_case: {
                                      kind: 'constant',
                                      type: 'Bool',
                                      value: false,
                                    },
                                    lhs: {
                                      kind: 'array',
                                      type: 'Array',
                                      value: [
                                        {
                                          kind: 'column',
                                          type: 'Column',
                                          value: 'category_fun_tmp',
                                          relation: null,
                                        },
                                      ],
                                    },
                                    rhs: {
                                      kind: 'constant',
                                      type: 'String',
                                      value: '櫃架',
                                    },
                                  },
                                },
                                rhs: {
                                  annotations: {
                                    infix: true,
                                    parenthetical: false,
                                  },
                                  kind: 'func',
                                  type: 'And',
                                  parameters: {
                                    lhs: {
                                      annotations: {},
                                      kind: 'func',
                                      type: 'Not',
                                      parameters: {
                                        operand: {
                                          annotations: {},
                                          kind: 'func',
                                          type: 'Matches',
                                          parameters: {
                                            ignore_case: {
                                              kind: 'constant',
                                              type: 'Bool',
                                              value: false,
                                            },
                                            lhs: {
                                              kind: 'array',
                                              type: 'Array',
                                              value: [
                                                {
                                                  kind: 'column',
                                                  type: 'Column',
                                                  value: 'category_style',
                                                  relation: null,
                                                },
                                              ],
                                            },
                                            rhs: {
                                              kind: 'constant',
                                              type: 'Regexp',
                                              value: 'MCM',
                                            },
                                          },
                                        },
                                      },
                                    },
                                    rhs: {
                                      annotations: {},
                                      kind: 'func',
                                      type: 'Not',
                                      parameters: {
                                        operand: {
                                          annotations: {},
                                          kind: 'func',
                                          type: 'Matches',
                                          parameters: {
                                            ignore_case: {
                                              kind: 'constant',
                                              type: 'Bool',
                                              value: false,
                                            },
                                            lhs: {
                                              kind: 'array',
                                              type: 'Array',
                                              value: [
                                                {
                                                  kind: 'column',
                                                  type: 'Column',
                                                  value: 'category_factory',
                                                  relation: null,
                                                },
                                              ],
                                            },
                                            rhs: {
                                              kind: 'constant',
                                              type: 'String',
                                              value: 'CC',
                                            },
                                          },
                                        },
                                      },
                                    },
                                  },
                                },
                              },
                            },
                            {
                              kind: 'constant',
                              type: 'String',
                              value: '櫃架',
                            },
                            {
                              annotations: {},
                              kind: 'func',
                              type: 'Not',
                              parameters: {
                                operand: {
                                  annotations: {},
                                  kind: 'func',
                                  type: 'Matches',
                                  parameters: {
                                    ignore_case: {
                                      kind: 'constant',
                                      type: 'Bool',
                                      value: false,
                                    },
                                    lhs: {
                                      kind: 'array',
                                      type: 'Array',
                                      value: [
                                        {
                                          kind: 'column',
                                          type: 'Column',
                                          value: 'category_fun_tmp',
                                          relation: null,
                                        },
                                      ],
                                    },
                                    rhs: {
                                      kind: 'constant',
                                      type: 'Regexp',
                                      value: '床架|櫃架',
                                    },
                                  },
                                },
                              },
                            },
                            {
                              kind: 'column',
                              type: 'Column',
                              value: 'category_fun_tmp',
                              relation: null,
                            },
                          ],
                        },
                      },
                    },
                    as: {
                      kind: 'constant',
                      type: 'String',
                      value: 'category_fun',
                    },
                  },
                  outputName: null,
                },
                tableData: null,
                portId: null,
                id: 8548750,
                hash: '26185d5b12cdd1935c46e2da2ad6227a3f5b7a70',
                pbemappingartifacts: [],
                targetmappingartifacts: [],
                dependencies: [],
              },
              {
                columnMetadata: {
                  category_mat: {
                    id: '-1d76w3',
                  },
                },
                task: {
                  annotations: {
                    outputColumnAnnotations: {
                      category_mat: {
                        type: [
                          'String',
                        ],
                        _likely_types: [
                          [
                            'String',
                          ],
                          [
                            'Integer',
                          ],
                          [
                            'Phone',
                          ],
                          [
                            'SSN',
                          ],
                          [
                            'Map',
                          ],
                        ],
                      },
                    },
                  },
                  kind: 'task',
                  type: 'Derive',
                  parameters: {
                    type: {
                      kind: 'bundle',
                      type: 'Bundle',
                      value: 'single',
                    },
                    value: {
                      annotations: {},
                      kind: 'func',
                      type: 'Case',
                      parameters: {
                        predicateValuePairs: {
                          kind: 'array',
                          type: 'Array',
                          value: [
                            {
                              annotations: {},
                              kind: 'func',
                              type: 'Matches',
                              parameters: {
                                ignore_case: {
                                  kind: 'constant',
                                  type: 'Bool',
                                  value: false,
                                },
                                lhs: {
                                  kind: 'array',
                                  type: 'Array',
                                  value: [
                                    {
                                      kind: 'column',
                                      type: 'Column',
                                      value: 'category_group',
                                      relation: null,
                                    },
                                  ],
                                },
                                rhs: {
                                  kind: 'constant',
                                  type: 'Regexp',
                                  value: '棉被',
                                },
                              },
                            },
                            {
                              kind: 'constant',
                              type: 'String',
                              value: '棉被',
                            },
                            {
                              annotations: {},
                              kind: 'func',
                              type: 'Matches',
                              parameters: {
                                ignore_case: {
                                  kind: 'constant',
                                  type: 'Bool',
                                  value: false,
                                },
                                lhs: {
                                  kind: 'array',
                                  type: 'Array',
                                  value: [
                                    {
                                      kind: 'column',
                                      type: 'Column',
                                      value: 'category_group',
                                      relation: null,
                                    },
                                  ],
                                },
                                rhs: {
                                  kind: 'constant',
                                  type: 'Regexp',
                                  value: '枕頭|枕套',
                                },
                              },
                            },
                            {
                              kind: 'constant',
                              type: 'String',
                              value: '枕頭',
                            },
                            {
                              annotations: {},
                              kind: 'func',
                              type: 'Matches',
                              parameters: {
                                ignore_case: {
                                  kind: 'constant',
                                  type: 'Bool',
                                  value: false,
                                },
                                lhs: {
                                  kind: 'array',
                                  type: 'Array',
                                  value: [
                                    {
                                      kind: 'column',
                                      type: 'Column',
                                      value: 'category_group',
                                      relation: null,
                                    },
                                  ],
                                },
                                rhs: {
                                  kind: 'constant',
                                  type: 'Regexp',
                                  value: '床墊|床套|保潔墊|床板',
                                },
                              },
                            },
                            {
                              kind: 'constant',
                              type: 'String',
                              value: '床墊',
                            },
                            {
                              annotations: {},
                              kind: 'func',
                              type: 'Null',
                              parameters: {},
                            },
                          ],
                        },
                      },
                    },
                    as: {
                      kind: 'constant',
                      type: 'String',
                      value: 'category_mat',
                    },
                  },
                  outputName: null,
                },
                tableData: null,
                portId: null,
                id: 8954918,
                hash: '02f40d4a3f2e2e5940566ee704846c39b4f71c8f',
                pbemappingartifacts: [],
                targetmappingartifacts: [],
                dependencies: [],
              },
              {
                columnMetadata: {
                  category_region_style: {
                    id: '-16h1ykr',
                  },
                },
                task: {
                  annotations: {
                    outputColumnAnnotations: {
                      category_region_style: {
                        type: [
                          'String',
                        ],
                        _likely_types: [
                          [
                            'String',
                          ],
                          [
                            'Integer',
                          ],
                          [
                            'Phone',
                          ],
                          [
                            'SSN',
                          ],
                          [
                            'Map',
                          ],
                        ],
                      },
                    },
                  },
                  kind: 'task',
                  type: 'Derive',
                  parameters: {
                    type: {
                      kind: 'bundle',
                      type: 'Bundle',
                      value: 'single',
                    },
                    value: {
                      annotations: {},
                      kind: 'func',
                      type: 'Case',
                      parameters: {
                        predicateValuePairs: {
                          kind: 'array',
                          type: 'Array',
                          value: [
                            {
                              annotations: {
                                infix: true,
                                parenthetical: false,
                              },
                              kind: 'func',
                              type: 'And',
                              parameters: {
                                lhs: {
                                  annotations: {
                                    infix: true,
                                    parenthetical: true,
                                  },
                                  kind: 'func',
                                  type: 'Or',
                                  parameters: {
                                    lhs: {
                                      annotations: {},
                                      kind: 'func',
                                      type: 'Matches',
                                      parameters: {
                                        ignore_case: {
                                          kind: 'constant',
                                          type: 'Bool',
                                          value: false,
                                        },
                                        lhs: {
                                          kind: 'array',
                                          type: 'Array',
                                          value: [
                                            {
                                              kind: 'column',
                                              type: 'Column',
                                              value: 'category_factory',
                                              relation: null,
                                            },
                                          ],
                                        },
                                        rhs: {
                                          kind: 'constant',
                                          type: 'String',
                                          value: 'SD',
                                        },
                                      },
                                    },
                                    rhs: {
                                      annotations: {
                                        infix: true,
                                        parenthetical: true,
                                      },
                                      kind: 'func',
                                      type: 'And',
                                      parameters: {
                                        lhs: {
                                          annotations: {},
                                          kind: 'func',
                                          type: 'Matches',
                                          parameters: {
                                            ignore_case: {
                                              kind: 'constant',
                                              type: 'Bool',
                                              value: false,
                                            },
                                            lhs: {
                                              kind: 'array',
                                              type: 'Array',
                                              value: [
                                                {
                                                  kind: 'column',
                                                  type: 'Column',
                                                  value: 'category_factory',
                                                  relation: null,
                                                },
                                              ],
                                            },
                                            rhs: {
                                              kind: 'constant',
                                              type: 'String',
                                              value: 'CA',
                                            },
                                          },
                                        },
                                        rhs: {
                                          annotations: {},
                                          kind: 'func',
                                          type: 'Matches',
                                          parameters: {
                                            ignore_case: {
                                              kind: 'constant',
                                              type: 'Bool',
                                              value: false,
                                            },
                                            lhs: {
                                              kind: 'array',
                                              type: 'Array',
                                              value: [
                                                {
                                                  kind: 'column',
                                                  type: 'Column',
                                                  value: 'category_material',
                                                  relation: null,
                                                },
                                              ],
                                            },
                                            rhs: {
                                              kind: 'constant',
                                              type: 'String',
                                              value: '布料',
                                            },
                                          },
                                        },
                                      },
                                    },
                                  },
                                },
                                rhs: {
                                  annotations: {},
                                  kind: 'func',
                                  type: 'Not',
                                  parameters: {
                                    operand: {
                                      annotations: {},
                                      kind: 'func',
                                      type: 'Matches',
                                      parameters: {
                                        ignore_case: {
                                          kind: 'constant',
                                          type: 'Bool',
                                          value: false,
                                        },
                                        lhs: {
                                          kind: 'array',
                                          type: 'Array',
                                          value: [
                                            {
                                              kind: 'column',
                                              type: 'Column',
                                              value: 'category_fun',
                                              relation: null,
                                            },
                                          ],
                                        },
                                        rhs: {
                                          kind: 'constant',
                                          type: 'Regexp',
                                          value: '餐椅|餐桌|板凳|吧椅|茶\\(邊\\)几',
                                        },
                                      },
                                    },
                                  },
                                },
                              },
                            },
                            {
                              kind: 'constant',
                              type: 'String',
                              value: '北歐風沙發',
                            },
                            {
                              annotations: {},
                              kind: 'func',
                              type: 'Matches',
                              parameters: {
                                ignore_case: {
                                  kind: 'constant',
                                  type: 'Bool',
                                  value: false,
                                },
                                lhs: {
                                  kind: 'array',
                                  type: 'Array',
                                  value: [
                                    {
                                      kind: 'column',
                                      type: 'Column',
                                      value: 'category_factory',
                                      relation: null,
                                    },
                                  ],
                                },
                                rhs: {
                                  kind: 'constant',
                                  type: 'Regexp',
                                  value: 'MN',
                                },
                              },
                            },
                            {
                              kind: 'constant',
                              type: 'String',
                              value: '美式沙發',
                            },
                            {
                              annotations: {},
                              kind: 'func',
                              type: 'Matches',
                              parameters: {
                                ignore_case: {
                                  kind: 'constant',
                                  type: 'Bool',
                                  value: false,
                                },
                                lhs: {
                                  kind: 'array',
                                  type: 'Array',
                                  value: [
                                    {
                                      kind: 'column',
                                      type: 'Column',
                                      value: 'category_factory',
                                      relation: null,
                                    },
                                  ],
                                },
                                rhs: {
                                  kind: 'constant',
                                  type: 'Regexp',
                                  value: 'CC',
                                },
                              },
                            },
                            {
                              kind: 'constant',
                              type: 'String',
                              value: '法式鄉村',
                            },
                            {
                              annotations: {
                                infix: true,
                                parenthetical: false,
                              },
                              kind: 'func',
                              type: 'And',
                              parameters: {
                                lhs: {
                                  annotations: {},
                                  kind: 'func',
                                  type: 'Matches',
                                  parameters: {
                                    ignore_case: {
                                      kind: 'constant',
                                      type: 'Bool',
                                      value: false,
                                    },
                                    lhs: {
                                      kind: 'array',
                                      type: 'Array',
                                      value: [
                                        {
                                          kind: 'column',
                                          type: 'Column',
                                          value: 'category_fun',
                                          relation: null,
                                        },
                                      ],
                                    },
                                    rhs: {
                                      kind: 'constant',
                                      type: 'Regexp',
                                      value: '辦公椅|家飾|書桌|茶\\(邊\\)几',
                                    },
                                  },
                                },
                                rhs: {
                                  annotations: {
                                    infix: true,
                                    parenthetical: false,
                                  },
                                  kind: 'func',
                                  type: 'And',
                                  parameters: {
                                    lhs: {
                                      annotations: {},
                                      kind: 'func',
                                      type: 'Not',
                                      parameters: {
                                        operand: {
                                          annotations: {},
                                          kind: 'func',
                                          type: 'Matches',
                                          parameters: {
                                            ignore_case: {
                                              kind: 'constant',
                                              type: 'Bool',
                                              value: false,
                                            },
                                            lhs: {
                                              kind: 'array',
                                              type: 'Array',
                                              value: [
                                                {
                                                  kind: 'column',
                                                  type: 'Column',
                                                  value: 'category_style',
                                                  relation: null,
                                                },
                                              ],
                                            },
                                            rhs: {
                                              kind: 'constant',
                                              type: 'String',
                                              value: 'MCM',
                                            },
                                          },
                                        },
                                      },
                                    },
                                    rhs: {
                                      annotations: {
                                        infix: true,
                                        parenthetical: false,
                                      },
                                      kind: 'func',
                                      type: 'And',
                                      parameters: {
                                        lhs: {
                                          annotations: {},
                                          kind: 'func',
                                          type: 'Not',
                                          parameters: {
                                            operand: {
                                              annotations: {},
                                              kind: 'func',
                                              type: 'Matches',
                                              parameters: {
                                                ignore_case: {
                                                  kind: 'constant',
                                                  type: 'Bool',
                                                  value: false,
                                                },
                                                lhs: {
                                                  kind: 'array',
                                                  type: 'Array',
                                                  value: [
                                                    {
                                                      kind: 'column',
                                                      type: 'Column',
                                                      value: 'category_factory',
                                                      relation: null,
                                                    },
                                                  ],
                                                },
                                                rhs: {
                                                  kind: 'constant',
                                                  type: 'String',
                                                  value: 'CC',
                                                },
                                              },
                                            },
                                          },
                                        },
                                        rhs: {
                                          annotations: {},
                                          kind: 'func',
                                          type: 'Not',
                                          parameters: {
                                            operand: {
                                              annotations: {},
                                              kind: 'func',
                                              type: 'Matches',
                                              parameters: {
                                                ignore_case: {
                                                  kind: 'constant',
                                                  type: 'Bool',
                                                  value: false,
                                                },
                                                lhs: {
                                                  kind: 'array',
                                                  type: 'Array',
                                                  value: [
                                                    {
                                                      kind: 'column',
                                                      type: 'Column',
                                                      value: 'category_material',
                                                      relation: null,
                                                    },
                                                  ],
                                                },
                                                rhs: {
                                                  kind: 'constant',
                                                  type: 'String',
                                                  value: '大理石',
                                                },
                                              },
                                            },
                                          },
                                        },
                                      },
                                    },
                                  },
                                },
                              },
                            },
                            {
                              kind: 'constant',
                              type: 'String',
                              value: '其他北歐家具',
                            },
                            {
                              annotations: {},
                              kind: 'func',
                              type: 'Null',
                              parameters: {},
                            },
                          ],
                        },
                      },
                    },
                    as: {
                      kind: 'constant',
                      type: 'String',
                      value: 'category_region_style',
                    },
                  },
                  outputName: null,
                },
                tableData: null,
                portId: null,
                id: 9596231,
                hash: '8bf978971722d2daeff514a4480158235a1a8ed2',
                pbemappingartifacts: [],
                targetmappingartifacts: [],
                dependencies: [],
              },
              {
                columnMetadata: {
                  category_group_alice_tmp: {
                    id: '-ht5t6v',
                  },
                },
                task: {
                  annotations: {
                    outputColumnAnnotations: {
                      category_group_alice_tmp: {
                        type: [
                          'String',
                        ],
                        _likely_types: [
                          [
                            'String',
                          ],
                          [
                            'Integer',
                          ],
                          [
                            'Phone',
                          ],
                          [
                            'SSN',
                          ],
                          [
                            'Map',
                          ],
                        ],
                      },
                    },
                  },
                  kind: 'task',
                  type: 'Derive',
                  parameters: {
                    type: {
                      kind: 'bundle',
                      type: 'Bundle',
                      value: 'single',
                    },
                    value: {
                      annotations: {},
                      kind: 'func',
                      type: 'Case',
                      parameters: {
                        predicateValuePairs: {
                          kind: 'array',
                          type: 'Array',
                          value: [
                            {
                              annotations: {},
                              kind: 'func',
                              type: 'Matches',
                              parameters: {
                                ignore_case: {
                                  kind: 'constant',
                                  type: 'Bool',
                                  value: false,
                                },
                                lhs: {
                                  kind: 'array',
                                  type: 'Array',
                                  value: [
                                    {
                                      kind: 'column',
                                      type: 'Column',
                                      value: 'category_region_style',
                                      relation: null,
                                    },
                                  ],
                                },
                                rhs: {
                                  kind: 'constant',
                                  type: 'Regexp',
                                  value: '北歐風沙發|其他北歐家具|美式沙發|法式鄉村',
                                },
                              },
                            },
                            {
                              kind: 'column',
                              type: 'Column',
                              value: 'category_region_style',
                              relation: null,
                            },
                            {
                              annotations: {},
                              kind: 'func',
                              type: 'Matches',
                              parameters: {
                                ignore_case: {
                                  kind: 'constant',
                                  type: 'Bool',
                                  value: false,
                                },
                                lhs: {
                                  kind: 'array',
                                  type: 'Array',
                                  value: [
                                    {
                                      kind: 'column',
                                      type: 'Column',
                                      value: 'category_style',
                                      relation: null,
                                    },
                                  ],
                                },
                                rhs: {
                                  kind: 'constant',
                                  type: 'Regexp',
                                  value: 'MCM',
                                },
                              },
                            },
                            {
                              kind: 'constant',
                              type: 'String',
                              value: 'MCM',
                            },
                            {
                              annotations: {},
                              kind: 'func',
                              type: 'Matches',
                              parameters: {
                                ignore_case: {
                                  kind: 'constant',
                                  type: 'Bool',
                                  value: false,
                                },
                                lhs: {
                                  kind: 'array',
                                  type: 'Array',
                                  value: [
                                    {
                                      kind: 'column',
                                      type: 'Column',
                                      value: 'category_fun',
                                      relation: null,
                                    },
                                  ],
                                },
                                rhs: {
                                  kind: 'constant',
                                  type: 'Regexp',
                                  value: '床架|櫃架|燈飾',
                                },
                              },
                            },
                            {
                              kind: 'column',
                              type: 'Column',
                              value: 'category_fun',
                              relation: null,
                            },
                            {
                              annotations: {},
                              kind: 'func',
                              type: 'Matches',
                              parameters: {
                                ignore_case: {
                                  kind: 'constant',
                                  type: 'Bool',
                                  value: false,
                                },
                                lhs: {
                                  kind: 'array',
                                  type: 'Array',
                                  value: [
                                    {
                                      kind: 'column',
                                      type: 'Column',
                                      value: 'category_material',
                                      relation: null,
                                    },
                                  ],
                                },
                                rhs: {
                                  kind: 'constant',
                                  type: 'String',
                                  value: '大理石',
                                },
                              },
                            },
                            {
                              kind: 'constant',
                              type: 'String',
                              value: '大理石',
                            },
                            {
                              annotations: {
                                infix: true,
                                parenthetical: false,
                              },
                              kind: 'func',
                              type: 'And',
                              parameters: {
                                lhs: {
                                  annotations: {},
                                  kind: 'func',
                                  type: 'Matches',
                                  parameters: {
                                    ignore_case: {
                                      kind: 'constant',
                                      type: 'Bool',
                                      value: false,
                                    },
                                    lhs: {
                                      kind: 'array',
                                      type: 'Array',
                                      value: [
                                        {
                                          kind: 'column',
                                          type: 'Column',
                                          value: 'category_fun',
                                          relation: null,
                                        },
                                      ],
                                    },
                                    rhs: {
                                      kind: 'constant',
                                      type: 'String',
                                      value: '餐桌',
                                    },
                                  },
                                },
                                rhs: {
                                  annotations: {
                                    infix: true,
                                    parenthetical: false,
                                  },
                                  kind: 'func',
                                  type: 'And',
                                  parameters: {
                                    lhs: {
                                      annotations: {},
                                      kind: 'func',
                                      type: 'Not',
                                      parameters: {
                                        operand: {
                                          annotations: {},
                                          kind: 'func',
                                          type: 'Matches',
                                          parameters: {
                                            ignore_case: {
                                              kind: 'constant',
                                              type: 'Bool',
                                              value: false,
                                            },
                                            lhs: {
                                              kind: 'array',
                                              type: 'Array',
                                              value: [
                                                {
                                                  kind: 'column',
                                                  type: 'Column',
                                                  value: 'category_material',
                                                  relation: null,
                                                },
                                              ],
                                            },
                                            rhs: {
                                              kind: 'constant',
                                              type: 'String',
                                              value: '大理石',
                                            },
                                          },
                                        },
                                      },
                                    },
                                    rhs: {
                                      annotations: {
                                        infix: true,
                                        parenthetical: false,
                                      },
                                      kind: 'func',
                                      type: 'And',
                                      parameters: {
                                        lhs: {
                                          annotations: {},
                                          kind: 'func',
                                          type: 'Not',
                                          parameters: {
                                            operand: {
                                              annotations: {},
                                              kind: 'func',
                                              type: 'Matches',
                                              parameters: {
                                                ignore_case: {
                                                  kind: 'constant',
                                                  type: 'Bool',
                                                  value: false,
                                                },
                                                lhs: {
                                                  kind: 'array',
                                                  type: 'Array',
                                                  value: [
                                                    {
                                                      kind: 'column',
                                                      type: 'Column',
                                                      value: 'category_region_style',
                                                      relation: null,
                                                    },
                                                  ],
                                                },
                                                rhs: {
                                                  kind: 'constant',
                                                  type: 'Regexp',
                                                  value: '法式鄉村',
                                                },
                                              },
                                            },
                                          },
                                        },
                                        rhs: {
                                          annotations: {},
                                          kind: 'func',
                                          type: 'Not',
                                          parameters: {
                                            operand: {
                                              annotations: {},
                                              kind: 'func',
                                              type: 'Matches',
                                              parameters: {
                                                ignore_case: {
                                                  kind: 'constant',
                                                  type: 'Bool',
                                                  value: false,
                                                },
                                                lhs: {
                                                  kind: 'array',
                                                  type: 'Array',
                                                  value: [
                                                    {
                                                      kind: 'column',
                                                      type: 'Column',
                                                      value: 'category_style',
                                                      relation: null,
                                                    },
                                                  ],
                                                },
                                                rhs: {
                                                  kind: 'constant',
                                                  type: 'String',
                                                  value: 'MCM',
                                                },
                                              },
                                            },
                                          },
                                        },
                                      },
                                    },
                                  },
                                },
                              },
                            },
                            {
                              kind: 'constant',
                              type: 'String',
                              value: '餐桌',
                            },
                            {
                              annotations: {
                                infix: true,
                                parenthetical: false,
                              },
                              kind: 'func',
                              type: 'And',
                              parameters: {
                                lhs: {
                                  annotations: {},
                                  kind: 'func',
                                  type: 'Matches',
                                  parameters: {
                                    ignore_case: {
                                      kind: 'constant',
                                      type: 'Bool',
                                      value: false,
                                    },
                                    lhs: {
                                      kind: 'array',
                                      type: 'Array',
                                      value: [
                                        {
                                          kind: 'column',
                                          type: 'Column',
                                          value: 'category_fun',
                                          relation: null,
                                        },
                                      ],
                                    },
                                    rhs: {
                                      kind: 'constant',
                                      type: 'Regexp',
                                      value: '餐椅|板凳|吧椅',
                                    },
                                  },
                                },
                                rhs: {
                                  annotations: {
                                    infix: true,
                                    parenthetical: false,
                                  },
                                  kind: 'func',
                                  type: 'And',
                                  parameters: {
                                    lhs: {
                                      annotations: {},
                                      kind: 'func',
                                      type: 'Not',
                                      parameters: {
                                        operand: {
                                          annotations: {},
                                          kind: 'func',
                                          type: 'Matches',
                                          parameters: {
                                            ignore_case: {
                                              kind: 'constant',
                                              type: 'Bool',
                                              value: false,
                                            },
                                            lhs: {
                                              kind: 'array',
                                              type: 'Array',
                                              value: [
                                                {
                                                  kind: 'column',
                                                  type: 'Column',
                                                  value: 'category_material',
                                                  relation: null,
                                                },
                                              ],
                                            },
                                            rhs: {
                                              kind: 'constant',
                                              type: 'String',
                                              value: '大理石',
                                            },
                                          },
                                        },
                                      },
                                    },
                                    rhs: {
                                      annotations: {
                                        infix: true,
                                        parenthetical: false,
                                      },
                                      kind: 'func',
                                      type: 'And',
                                      parameters: {
                                        lhs: {
                                          annotations: {},
                                          kind: 'func',
                                          type: 'Not',
                                          parameters: {
                                            operand: {
                                              annotations: {},
                                              kind: 'func',
                                              type: 'Matches',
                                              parameters: {
                                                ignore_case: {
                                                  kind: 'constant',
                                                  type: 'Bool',
                                                  value: false,
                                                },
                                                lhs: {
                                                  kind: 'array',
                                                  type: 'Array',
                                                  value: [
                                                    {
                                                      kind: 'column',
                                                      type: 'Column',
                                                      value: 'category_region_style',
                                                      relation: null,
                                                    },
                                                  ],
                                                },
                                                rhs: {
                                                  kind: 'constant',
                                                  type: 'Regexp',
                                                  value: '法式鄉村',
                                                },
                                              },
                                            },
                                          },
                                        },
                                        rhs: {
                                          annotations: {
                                            infix: true,
                                            parenthetical: false,
                                          },
                                          kind: 'func',
                                          type: 'And',
                                          parameters: {
                                            lhs: {
                                              annotations: {},
                                              kind: 'func',
                                              type: 'Not',
                                              parameters: {
                                                operand: {
                                                  annotations: {},
                                                  kind: 'func',
                                                  type: 'Matches',
                                                  parameters: {
                                                    ignore_case: {
                                                      kind: 'constant',
                                                      type: 'Bool',
                                                      value: false,
                                                    },
                                                    lhs: {
                                                      kind: 'array',
                                                      type: 'Array',
                                                      value: [
                                                        {
                                                          kind: 'column',
                                                          type: 'Column',
                                                          value: 'category_style',
                                                          relation: null,
                                                        },
                                                      ],
                                                    },
                                                    rhs: {
                                                      kind: 'constant',
                                                      type: 'Regexp',
                                                      value: 'MCM',
                                                    },
                                                  },
                                                },
                                              },
                                            },
                                            rhs: {
                                              annotations: {},
                                              kind: 'func',
                                              type: 'Not',
                                              parameters: {
                                                operand: {
                                                  annotations: {},
                                                  kind: 'func',
                                                  type: 'Matches',
                                                  parameters: {
                                                    ignore_case: {
                                                      kind: 'constant',
                                                      type: 'Bool',
                                                      value: false,
                                                    },
                                                    lhs: {
                                                      kind: 'array',
                                                      type: 'Array',
                                                      value: [
                                                        {
                                                          kind: 'column',
                                                          type: 'Column',
                                                          value: 'category_fun',
                                                          relation: null,
                                                        },
                                                      ],
                                                    },
                                                    rhs: {
                                                      kind: 'constant',
                                                      type: 'String',
                                                      value: '辦公椅',
                                                    },
                                                  },
                                                },
                                              },
                                            },
                                          },
                                        },
                                      },
                                    },
                                  },
                                },
                              },
                            },
                            {
                              kind: 'constant',
                              type: 'String',
                              value: '餐椅/板凳/中島吧擡',
                            },
                            {
                              annotations: {
                                infix: true,
                                parenthetical: false,
                              },
                              kind: 'func',
                              type: 'And',
                              parameters: {
                                lhs: {
                                  annotations: {},
                                  kind: 'func',
                                  type: 'Matches',
                                  parameters: {
                                    ignore_case: {
                                      kind: 'constant',
                                      type: 'Bool',
                                      value: false,
                                    },
                                    lhs: {
                                      kind: 'array',
                                      type: 'Array',
                                      value: [
                                        {
                                          kind: 'column',
                                          type: 'Column',
                                          value: 'category_factory',
                                          relation: null,
                                        },
                                      ],
                                    },
                                    rhs: {
                                      kind: 'constant',
                                      type: 'String',
                                      value: 'CA',
                                    },
                                  },
                                },
                                rhs: {
                                  annotations: {},
                                  kind: 'func',
                                  type: 'Not',
                                  parameters: {
                                    operand: {
                                      annotations: {},
                                      kind: 'func',
                                      type: 'Matches',
                                      parameters: {
                                        ignore_case: {
                                          kind: 'constant',
                                          type: 'Bool',
                                          value: false,
                                        },
                                        lhs: {
                                          kind: 'array',
                                          type: 'Array',
                                          value: [
                                            {
                                              kind: 'column',
                                              type: 'Column',
                                              value: 'category_material',
                                              relation: null,
                                            },
                                          ],
                                        },
                                        rhs: {
                                          kind: 'constant',
                                          type: 'String',
                                          value: '布料',
                                        },
                                      },
                                    },
                                  },
                                },
                              },
                            },
                            {
                              kind: 'constant',
                              type: 'String',
                              value: '皮沙發',
                            },
                            {
                              annotations: {},
                              kind: 'func',
                              type: 'Matches',
                              parameters: {
                                ignore_case: {
                                  kind: 'constant',
                                  type: 'Bool',
                                  value: false,
                                },
                                lhs: {
                                  kind: 'array',
                                  type: 'Array',
                                  value: [
                                    {
                                      kind: 'column',
                                      type: 'Column',
                                      value: 'category_mat',
                                      relation: null,
                                    },
                                  ],
                                },
                                rhs: {
                                  kind: 'constant',
                                  type: 'Regexp',
                                  value: '床墊|枕頭|棉被',
                                },
                              },
                            },
                            {
                              kind: 'column',
                              type: 'Column',
                              value: 'category_mat',
                              relation: null,
                            },
                            {
                              annotations: {},
                              kind: 'func',
                              type: 'Null',
                              parameters: {},
                            },
                          ],
                        },
                      },
                    },
                    as: {
                      kind: 'constant',
                      type: 'String',
                      value: 'category_group_alice_tmp',
                    },
                  },
                  outputName: null,
                },
                tableData: null,
                portId: null,
                id: 8954936,
                hash: '1972a6d2ab201799a2fb134fb696b0105522b7db',
                pbemappingartifacts: [],
                targetmappingartifacts: [],
                dependencies: [],
              },
              {
                columnMetadata: {},
                task: {
                  annotations: {},
                  kind: 'task',
                  type: 'Rename',
                  parameters: {
                    type: {
                      kind: 'bundle',
                      type: 'Bundle',
                      value: 'manual',
                    },
                    mapping: {
                      kind: 'matrix',
                      type: 'Matrix',
                      value: [
                        {
                          kind: 'array',
                          type: 'Array',
                          value: [
                            {
                              kind: 'column',
                              type: 'Column',
                              value: 'category_group_alice_tmp',
                              relation: null,
                            },
                            {
                              kind: 'constant',
                              type: 'String',
                              value: 'category_group_alice',
                            },
                          ],
                        },
                      ],
                    },
                  },
                  outputName: null,
                },
                tableData: null,
                portId: null,
                id: 7004057,
                hash: '72beaef23a639bb07635f8358400be2721f523c3',
                pbemappingartifacts: [],
                targetmappingartifacts: [],
                dependencies: [],
              },
              {
                columnMetadata: {},
                task: {
                  annotations: {},
                  kind: 'task',
                  type: 'Filter',
                  parameters: {
                    action: {
                      kind: 'enumerable',
                      type: 'Enumerable',
                      value: 'Delete',
                    },
                    type: {
                      kind: 'bundle',
                      type: 'Bundle',
                      value: 'custom',
                    },
                    rowType: {
                      kind: 'bundle',
                      type: 'Bundle',
                      value: 'single',
                    },
                    row: {
                      annotations: {},
                      kind: 'func',
                      type: 'Matches',
                      parameters: {
                        ignore_case: {
                          kind: 'constant',
                          type: 'Bool',
                          value: false,
                        },
                        lhs: {
                          kind: 'array',
                          type: 'Array',
                          value: [
                            {
                              kind: 'column',
                              type: 'Column',
                              value: 'email',
                              relation: null,
                            },
                          ],
                        },
                        rhs: {
                          kind: 'constant',
                          type: 'Pattern',
                          value: '{yyyy}/{mm}/{dd}|合計',
                        },
                      },
                    },
                  },
                  outputName: null,
                },
                tableData: null,
                portId: null,
                id: 8548814,
                hash: '77c60e8346049d0725e4ff8848c7f1f595c514b6',
                pbemappingartifacts: [],
                targetmappingartifacts: [],
                dependencies: [],
              },
              {
                columnMetadata: {
                  order_id1: {
                    id: '-296s81x',
                  },
                },
                task: {
                  annotations: {
                    outputColumnAnnotations: {
                      order_id1: {
                        type: [
                          'Datetime',
                          'yy-mm-dd',
                          'yyyymmdd',
                        ],
                        _likely_types: [
                          [
                            'Datetime',
                            'yy-mm-dd',
                            'yyyymmdd',
                          ],
                          [
                            'Integer',
                          ],
                          [
                            'String',
                          ],
                          [
                            'Phone',
                          ],
                          [
                            'SSN',
                          ],
                        ],
                      },
                    },
                  },
                  kind: 'task',
                  type: 'ExtractPositions',
                  parameters: {
                    col: {
                      kind: 'column',
                      type: 'Column',
                      value: 'order_id',
                      relation: null,
                    },
                    type: {
                      kind: 'bundle',
                      type: 'Bundle',
                      value: 'at',
                    },
                    start: {
                      kind: 'constant',
                      type: 'Integer',
                      value: 0,
                    },
                    end: {
                      kind: 'constant',
                      type: 'Integer',
                      value: 8,
                    },
                    as: {
                      kind: 'array',
                      type: 'Array',
                      value: [
                        {
                          kind: 'constant',
                          type: 'String',
                          value: 'order_id1',
                        },
                      ],
                    },
                  },
                  outputName: null,
                },
                tableData: null,
                portId: null,
                id: 10209746,
                hash: '9d223bf6ab0a742297421df9d028a282fbb8a64c',
                pbemappingartifacts: [],
                targetmappingartifacts: [],
                dependencies: [],
              },
              {
                columnMetadata: {},
                task: {
                  annotations: {},
                  kind: 'task',
                  type: 'Rename',
                  parameters: {
                    type: {
                      kind: 'bundle',
                      type: 'Bundle',
                      value: 'manual',
                    },
                    mapping: {
                      kind: 'matrix',
                      type: 'Matrix',
                      value: [
                        {
                          kind: 'array',
                          type: 'Array',
                          value: [
                            {
                              kind: 'column',
                              type: 'Column',
                              value: 'order_id1',
                              relation: null,
                            },
                            {
                              kind: 'constant',
                              type: 'String',
                              value: 'order_date',
                            },
                          ],
                        },
                      ],
                    },
                  },
                  outputName: null,
                },
                tableData: null,
                portId: null,
                id: 10209748,
                hash: 'ac8bea1782267891a388387248153793c64d7c8d',
                pbemappingartifacts: [],
                targetmappingartifacts: [],
                dependencies: [],
              },
              {
                columnMetadata: {},
                task: {
                  annotations: {},
                  kind: 'task',
                  type: 'SetType',
                  parameters: {
                    col: {
                      kind: 'array',
                      type: 'Array',
                      value: [
                        {
                          kind: 'column',
                          type: 'Column',
                          value: 'order_date',
                          relation: null,
                        },
                      ],
                    },
                    type: {
                      kind: 'bundle',
                      type: 'Bundle',
                      value: 'Datetime',
                    },
                    datetimeType: {
                      kind: 'array',
                      type: 'Array',
                      value: [
                        {
                          kind: 'constant',
                          type: 'String',
                          value: 'Datetime',
                        },
                        {
                          kind: 'constant',
                          type: 'String',
                          value: 'yy-mm-dd',
                        },
                        {
                          kind: 'constant',
                          type: 'String',
                          value: 'yyyymmdd',
                        },
                      ],
                    },
                  },
                  outputName: null,
                },
                tableData: null,
                portId: null,
                id: 10209753,
                hash: '9376ec64d2456333b02499881ccd9f1b94f8701d',
                pbemappingartifacts: [],
                targetmappingartifacts: [],
                dependencies: [],
              },
              {
                columnMetadata: {
                  product_order_lead_time: {
                    id: '6wamsji',
                  },
                },
                task: {
                  annotations: {
                    outputColumnAnnotations: {
                      product_order_lead_time: {
                        type: [
                          'Integer',
                        ],
                        _likely_types: [
                          [
                            'Integer',
                          ],
                          [
                            'Float',
                          ],
                          [
                            'String',
                          ],
                          [
                            'Phone',
                          ],
                          [
                            'SSN',
                          ],
                        ],
                      },
                    },
                  },
                  kind: 'task',
                  type: 'Derive',
                  parameters: {
                    type: {
                      kind: 'bundle',
                      type: 'Bundle',
                      value: 'single',
                    },
                    value: {
                      annotations: {},
                      kind: 'func',
                      type: 'DateDif',
                      parameters: {
                        lhs: {
                          kind: 'column',
                          type: 'Column',
                          value: 'order_date',
                          relation: null,
                        },
                        rhs: {
                          kind: 'column',
                          type: 'Column',
                          value: 'delivery_date',
                          relation: null,
                        },
                        measure: {
                          kind: 'enumerable',
                          type: 'Enumerable',
                          value: 'day',
                        },
                      },
                    },
                    as: {
                      kind: 'constant',
                      type: 'String',
                      value: 'product_order_lead_time',
                    },
                  },
                  outputName: null,
                },
                tableData: null,
                portId: null,
                id: 10209793,
                hash: 'f26b768055f0a7b180a3d9888ba9b9c77a8688d4',
                pbemappingartifacts: [],
                targetmappingartifacts: [],
                dependencies: [],
              },
              {
                columnMetadata: {
                  corr_leadtime2qty: {
                    id: '-e9q7p4b',
                  },
                },
                task: {
                  annotations: {
                    outputColumnAnnotations: {
                      corr_leadtime2qty: {
                        type: [
                          'Float',
                        ],
                        _likely_types: [
                          [
                            'Float',
                          ],
                          [
                            'String',
                          ],
                          [
                            'Integer',
                          ],
                          [
                            'Phone',
                          ],
                          [
                            'SSN',
                          ],
                        ],
                      },
                    },
                  },
                  kind: 'task',
                  type: 'Derive',
                  parameters: {
                    type: {
                      kind: 'bundle',
                      type: 'Bundle',
                      value: 'multiple',
                    },
                    value: {
                      annotations: {},
                      kind: 'func',
                      type: 'Correl',
                      parameters: {
                        col: {
                          kind: 'column',
                          type: 'Column',
                          value: 'product_order_lead_time',
                          relation: null,
                        },
                        other: {
                          kind: 'column',
                          type: 'Column',
                          value: 'quantity',
                          relation: null,
                        },
                      },
                    },
                    group: {
                      kind: 'array',
                      type: 'Array',
                      value: [
                        {
                          kind: 'column',
                          type: 'Column',
                          value: 'product_name',
                          relation: null,
                        },
                      ],
                    },
                    as: {
                      kind: 'constant',
                      type: 'String',
                      value: 'corr_leadtime2qty',
                    },
                  },
                  outputName: null,
                },
                tableData: null,
                portId: null,
                id: 8548892,
                hash: 'e721409d55dcc6839bdb533c88616c9f8fe224d1',
                pbemappingartifacts: [],
                targetmappingartifacts: [],
                dependencies: [],
              },
              {
                columnMetadata: {
                  deposit1: {
                    id: '5ot06bw',
                  },
                },
                task: {
                  annotations: {
                    outputColumnAnnotations: {
                      deposit1: {
                        type: [
                          'String',
                        ],
                        _likely_types: [
                          [
                            'String',
                          ],
                          [
                            'Integer',
                          ],
                          [
                            'Bool',
                          ],
                          [
                            'Float',
                          ],
                          [
                            'Phone',
                          ],
                        ],
                      },
                    },
                  },
                  kind: 'task',
                  type: 'ExtractPatterns',
                  parameters: {
                    col: {
                      kind: 'column',
                      type: 'Column',
                      value: 'deposit',
                      relation: null,
                    },
                    type: {
                      kind: 'bundle',
                      type: 'Bundle',
                      value: 'custom',
                    },
                    on: {
                      kind: 'constant',
                      type: 'Regexp',
                      value: '.*',
                    },
                    start: {
                      kind: 'constant',
                      type: 'Regexp',
                      value: '取消[,， ]+',
                    },
                    end: {
                      kind: 'constant',
                      type: 'Regexp',
                      value: '[)）]',
                    },
                    ignoreCase: {
                      kind: 'constant',
                      type: 'Bool',
                      value: false,
                    },
                    as: {
                      kind: 'array',
                      type: 'Array',
                      value: [
                        {
                          kind: 'constant',
                          type: 'String',
                          value: 'deposit1',
                        },
                      ],
                    },
                  },
                  outputName: null,
                },
                tableData: null,
                portId: null,
                id: 11066243,
                hash: '33d25fbbe61903500ea176277b48dfa7d38813d5',
                pbemappingartifacts: [],
                targetmappingartifacts: [],
                dependencies: [],
              },
              {
                columnMetadata: {},
                task: {
                  annotations: {},
                  kind: 'task',
                  type: 'Rename',
                  parameters: {
                    type: {
                      kind: 'bundle',
                      type: 'Bundle',
                      value: 'manual',
                    },
                    mapping: {
                      kind: 'matrix',
                      type: 'Matrix',
                      value: [
                        {
                          kind: 'array',
                          type: 'Array',
                          value: [
                            {
                              kind: 'column',
                              type: 'Column',
                              value: 'deposit1',
                              relation: null,
                            },
                            {
                              kind: 'constant',
                              type: 'String',
                              value: 'tmp_cancel_cause',
                            },
                          ],
                        },
                      ],
                    },
                  },
                  outputName: null,
                },
                tableData: null,
                portId: null,
                id: 11066102,
                hash: '0bc8dd7d3f1f39ecfe6e66a578c58a1f6137f0c2',
                pbemappingartifacts: [],
                targetmappingartifacts: [],
                dependencies: [],
              },
              {
                columnMetadata: {
                  is_prod_cancel: {
                    id: '52e44g6',
                  },
                },
                task: {
                  annotations: {
                    outputColumnAnnotations: {
                      is_prod_cancel: {
                        type: [
                          'Integer',
                        ],
                        _likely_types: [
                          [
                            'Integer',
                          ],
                          [
                            'Float',
                          ],
                          [
                            'String',
                          ],
                          [
                            'Phone',
                          ],
                          [
                            'SSN',
                          ],
                        ],
                      },
                    },
                  },
                  kind: 'task',
                  type: 'Derive',
                  parameters: {
                    type: {
                      kind: 'bundle',
                      type: 'Bundle',
                      value: 'single',
                    },
                    value: {
                      annotations: {},
                      kind: 'func',
                      type: 'Case',
                      parameters: {
                        predicateValuePairs: {
                          kind: 'array',
                          type: 'Array',
                          value: [
                            {
                              annotations: {},
                              kind: 'func',
                              type: 'Matches',
                              parameters: {
                                ignore_case: {
                                  kind: 'constant',
                                  type: 'Bool',
                                  value: true,
                                },
                                lhs: {
                                  kind: 'array',
                                  type: 'Array',
                                  value: [
                                    {
                                      kind: 'column',
                                      type: 'Column',
                                      value: 'deposit',
                                      relation: null,
                                    },
                                  ],
                                },
                                rhs: {
                                  kind: 'constant',
                                  type: 'Regexp',
                                  value: '取消|-\\s*\\d+,?\\d+',
                                },
                              },
                            },
                            {
                              kind: 'constant',
                              type: 'Integer',
                              value: 1,
                            },
                            {
                              kind: 'constant',
                              type: 'Integer',
                              value: 0,
                            },
                          ],
                        },
                      },
                    },
                    as: {
                      kind: 'constant',
                      type: 'String',
                      value: 'is_prod_cancel',
                    },
                  },
                  outputName: null,
                },
                tableData: null,
                portId: null,
                id: 11066104,
                hash: 'eac097664a14f65de37b89f2a4f60dd98a395af2',
                pbemappingartifacts: [],
                targetmappingartifacts: [],
                dependencies: [],
              },
              {
                columnMetadata: {
                  prod_cancel_cause: {
                    id: '-8inl25h',
                  },
                },
                task: {
                  annotations: {
                    outputColumnAnnotations: {
                      prod_cancel_cause: {
                        type: [
                          'String',
                        ],
                        _likely_types: [
                          [
                            'String',
                          ],
                          [
                            'Integer',
                          ],
                          [
                            'Phone',
                          ],
                          [
                            'SSN',
                          ],
                          [
                            'Ipaddress',
                          ],
                        ],
                      },
                    },
                  },
                  kind: 'task',
                  type: 'Derive',
                  parameters: {
                    type: {
                      kind: 'bundle',
                      type: 'Bundle',
                      value: 'single',
                    },
                    value: {
                      annotations: {},
                      kind: 'func',
                      type: 'Case',
                      parameters: {
                        predicateValuePairs: {
                          kind: 'array',
                          type: 'Array',
                          value: [
                            {
                              annotations: {
                                infix: true,
                                parenthetical: false,
                              },
                              kind: 'func',
                              type: 'And',
                              parameters: {
                                lhs: {
                                  annotations: {
                                    infix: true,
                                    parenthetical: false,
                                  },
                                  kind: 'func',
                                  type: 'Equal',
                                  parameters: {
                                    lhs: {
                                      kind: 'column',
                                      type: 'Column',
                                      value: 'is_prod_cancel',
                                      relation: null,
                                    },
                                    rhs: {
                                      kind: 'constant',
                                      type: 'Integer',
                                      value: 1,
                                    },
                                  },
                                },
                                rhs: {
                                  annotations: {},
                                  kind: 'func',
                                  type: 'Not',
                                  parameters: {
                                    operand: {
                                      annotations: {},
                                      kind: 'func',
                                      type: 'IsNull',
                                      parameters: {
                                        col: {
                                          kind: 'column',
                                          type: 'Column',
                                          value: 'tmp_cancel_cause',
                                          relation: null,
                                        },
                                      },
                                    },
                                  },
                                },
                              },
                            },
                            {
                              kind: 'column',
                              type: 'Column',
                              value: 'tmp_cancel_cause',
                              relation: null,
                            },
                            {
                              annotations: {
                                infix: true,
                                parenthetical: false,
                              },
                              kind: 'func',
                              type: 'And',
                              parameters: {
                                lhs: {
                                  annotations: {
                                    infix: true,
                                    parenthetical: false,
                                  },
                                  kind: 'func',
                                  type: 'Equal',
                                  parameters: {
                                    lhs: {
                                      kind: 'column',
                                      type: 'Column',
                                      value: 'is_prod_cancel',
                                      relation: null,
                                    },
                                    rhs: {
                                      kind: 'constant',
                                      type: 'Integer',
                                      value: 1,
                                    },
                                  },
                                },
                                rhs: {
                                  annotations: {},
                                  kind: 'func',
                                  type: 'IsNull',
                                  parameters: {
                                    col: {
                                      kind: 'column',
                                      type: 'Column',
                                      value: 'tmp_cancel_cause',
                                      relation: null,
                                    },
                                  },
                                },
                              },
                            },
                            {
                              kind: 'constant',
                              type: 'String',
                              value: '其他',
                            },
                            {
                              annotations: {},
                              kind: 'func',
                              type: 'Null',
                              parameters: {},
                            },
                          ],
                        },
                      },
                    },
                    as: {
                      kind: 'constant',
                      type: 'String',
                      value: 'prod_cancel_cause',
                    },
                  },
                  outputName: null,
                },
                tableData: null,
                portId: null,
                id: 11066106,
                hash: '6f0da67a3952f5325908f643b272026f7a65edbe',
                pbemappingartifacts: [],
                targetmappingartifacts: [],
                dependencies: [],
              },
            ],
            dqScriptRules: [],
          },
          {
            id: 1891508,
            name: 'insertId',
            description: null,
            active: true,
            nextPortId: 1,
            steps: [
              {
                columnMetadata: {
                  email: {
                    id: 'aa314dz',
                  },
                  cellphone_number: {
                    id: 'betfcsx',
                  },
                  cust_name: {
                    id: 'alwfctq',
                  },
                  cust_id: {
                    id: 'alc1oyi',
                  },
                  addr1: {
                    id: 'aa00la3',
                  },
                  addr2: {
                    id: 'aa00la4',
                  },
                  order_total: {
                    id: 'a7fb9u6',
                  },
                  order_id: {
                    id: 'a8zir4n',
                  },
                  order_date: {
                    id: '9ztkoqw',
                  },
                  sale_channel: {
                    id: 'aft03ws',
                  },
                  region: {
                    id: '9yvlms3',
                  },
                  region_sort: {
                    id: '9i2itkq',
                  },
                  district: {
                    id: '8u1u59x',
                  },
                  sale_channel_sort: {
                    id: '8h3lcsz',
                  },
                  channel_oo: {
                    id: 'abewklh',
                  },
                  deposit_date: {
                    id: '8uxtrtw',
                  },
                  delivery_date: {
                    id: '8hqhowg',
                  },
                  product_order_lead_time: {
                    id: '909g7ce',
                  },
                  product_name_spec: {
                    id: '8s8jtbu',
                  },
                  supplier: {
                    id: '9o3jvyb',
                  },
                  category_group: {
                    id: '8jiy4ft',
                  },
                  category_mat: {
                    id: '8ruf2dq',
                  },
                  category_fun_tmp: {
                    id: '6y4fdol',
                  },
                  category_style_tmp: {
                    id: '85y1ci5',
                  },
                  category_factory: {
                    id: '8k07qys',
                  },
                  category_style: {
                    id: '8jrgwt9',
                  },
                  category_fun: {
                    id: '8ruex05',
                  },
                  category_material: {
                    id: '7b9krp7',
                  },
                  category_region_style: {
                    id: '846zu5c',
                  },
                  category_group_alice: {
                    id: '8lin5ee',
                  },
                  category_campaign: {
                    id: '6qotnn0',
                  },
                  product_id: {
                    id: '9sdy730',
                  },
                  product_name: {
                    id: '915jy0g',
                  },
                  unit_price: {
                    id: '8h7fce9',
                  },
                  quantity: {
                    id: '9pb7xhq',
                  },
                  corr_leadtime2qty: {
                    id: 'bsnrlbt',
                  },
                  price: {
                    id: 'aaawraa',
                  },
                  sum_order_price: {
                    id: '8pnbrv5',
                  },
                  ecount_date: {
                    id: '8u96qt6',
                  },
                  payment_channel: {
                    id: 'ah2y9yd',
                  },
                  deposit: {
                    id: '8x8tq13',
                  },
                  is_prod_cancel: {
                    id: '8uhxuys',
                  },
                  tmp_cancel_cause: {
                    id: 'c8szjsl',
                  },
                  prod_cancel_cause: {
                    id: 'aglc3g9',
                  },
                  purchase_category: {
                    id: 'btcli2v',
                  },
                  purchase_fabrics: {
                    id: 'aqkm8pv',
                  },
                  purchase_collection: {
                    id: 'adp40l1',
                  },
                  purchase_spec: {
                    id: '88c0g2c',
                  },
                  TRIFACTA__FILE_LINEAGE_INFO: {
                    id: '9poj8u2',
                  },
                },
                task: {
                  annotations: {
                    hidden: true,
                  },
                  kind: 'task',
                  type: 'Load',
                  parameters: {
                    format: {
                      annotations: {},
                      kind: 'func',
                      type: 'FormatBlob',
                      parameters: {},
                    },
                    location: {
                      kind: 'constant',
                      type: 'String',
                      value: 'portId://null',
                    },
                    enableLineage: {
                      kind: 'constant',
                      type: 'Bool',
                      value: true,
                    },
                    as: {
                      kind: 'array',
                      type: 'Array',
                      value: [
                        {
                          kind: 'constant',
                          type: 'String',
                          value: 'column1',
                        },
                      ],
                    },
                  },
                  outputName: 'original_datasource_1470419',
                },
                tableData: null,
                portId: null,
                id: 10209894,
                hash: 'cb6e8bd627cb7df3f5654f7fdea039a0c7d0b0e5',
                pbemappingartifacts: [],
                targetmappingartifacts: [],
                dependencies: [],
              },
              {
                columnMetadata: {
                  order_seq: {
                    id: '-fvw2exn',
                  },
                },
                task: {
                  annotations: {
                    outputColumnAnnotations: {
                      order_seq: {
                        type: [
                          'Integer',
                        ],
                        _likely_types: [
                          [
                            'Integer',
                          ],
                          [
                            'Float',
                          ],
                          [
                            'String',
                          ],
                          [
                            'Phone',
                          ],
                          [
                            'SSN',
                          ],
                        ],
                      },
                    },
                  },
                  kind: 'task',
                  type: 'Derive',
                  parameters: {
                    type: {
                      kind: 'bundle',
                      type: 'Bundle',
                      value: 'multiple',
                    },
                    value: {
                      annotations: {},
                      kind: 'func',
                      type: 'RowNumber',
                      parameters: {},
                    },
                    order: {
                      kind: 'array',
                      type: 'Array',
                      value: [
                        {
                          kind: 'column',
                          type: 'Column',
                          value: 'product_id',
                          relation: null,
                        },
                      ],
                    },
                    group: {
                      kind: 'array',
                      type: 'Array',
                      value: [
                        {
                          kind: 'column',
                          type: 'Column',
                          value: 'order_id',
                          relation: null,
                        },
                      ],
                    },
                    as: {
                      kind: 'constant',
                      type: 'String',
                      value: 'order_seq',
                    },
                  },
                  outputName: null,
                },
                tableData: null,
                portId: null,
                id: 10233549,
                hash: 'd4b7465974706110503d6e558db84942120c3415',
                pbemappingartifacts: [],
                targetmappingartifacts: [],
                dependencies: [],
              },
              {
                columnMetadata: {
                  insertId: {
                    id: '92jt27j',
                  },
                },
                task: {
                  annotations: {
                    outputColumnAnnotations: {
                      insertId: {
                        type: [
                          'String',
                        ],
                        _likely_types: [
                          [
                            'String',
                          ],
                          [
                            'Integer',
                          ],
                          [
                            'Phone',
                          ],
                          [
                            'SSN',
                          ],
                          [
                            'Map',
                          ],
                        ],
                      },
                    },
                  },
                  kind: 'task',
                  type: 'Merge',
                  parameters: {
                    col: {
                      kind: 'array',
                      type: 'Array',
                      value: [
                        {
                          kind: 'column',
                          type: 'Column',
                          value: 'order_id',
                          relation: null,
                        },
                        {
                          kind: 'column',
                          type: 'Column',
                          value: 'order_seq',
                          relation: null,
                        },
                      ],
                    },
                    with: {
                      kind: 'constant',
                      type: 'String',
                      value: '_',
                    },
                    as: {
                      kind: 'constant',
                      type: 'String',
                      value: 'insertId',
                    },
                  },
                  outputName: null,
                },
                tableData: null,
                portId: null,
                id: 10233552,
                hash: '606bbc342e7664f57fad54f4494b56ec3f82917d',
                pbemappingartifacts: [],
                targetmappingartifacts: [],
                dependencies: [],
              },
            ],
            dqScriptRules: [],
          },
          {
            id: 2091081,
            name: 'ESD012R_20210101_0331.csv',
            description: null,
            active: true,
            nextPortId: 1,
            steps: [
              {
                columnMetadata: null,
                task: {
                  annotations: {
                    hidden: true,
                  },
                  kind: 'task',
                  type: 'Load',
                  parameters: {
                    format: {
                      annotations: {},
                      kind: 'func',
                      type: 'FormatBlob',
                      parameters: {},
                    },
                    location: {
                      kind: 'constant',
                      type: 'String',
                      value: 'id://986381',
                    },
                    enableLineage: {
                      kind: 'constant',
                      type: 'Bool',
                      value: true,
                    },
                    as: {
                      kind: 'array',
                      type: 'Array',
                      value: [
                        {
                          kind: 'constant',
                          type: 'String',
                          value: 'column1',
                        },
                      ],
                    },
                  },
                  outputName: 'original_datasource_986381',
                },
                tableData: null,
                portId: null,
                id: 12352062,
                hash: '4af489cbb26b9fc0910411c8d1ec5dd14fe86a95',
                pbemappingartifacts: [],
                targetmappingartifacts: [],
                dependencies: [],
              },
              {
                columnMetadata: null,
                task: {
                  annotations: {
                    outputColumnAnnotations: {
                      column1: {
                        type: [
                          'String',
                        ],
                        _likely_types: [
                          [
                            'String',
                          ],
                          [
                            'Integer',
                          ],
                          [
                            'Phone',
                          ],
                          [
                            'SSN',
                          ],
                          [
                            'Map',
                          ],
                        ],
                      },
                    },
                  },
                  kind: 'task',
                  type: 'SplitRows',
                  parameters: {
                    on: {
                      kind: 'constant',
                      type: 'String',
                      value: '\r\n',
                    },
                    col: {
                      kind: 'column',
                      type: 'Column',
                      value: 'column1',
                      relation: null,
                    },
                    quote: {
                      kind: 'constant',
                      type: 'String',
                      value: '"',
                    },
                    quoteEscapeChar: {
                      kind: 'constant',
                      type: 'String',
                      value: '"',
                    },
                  },
                  outputName: null,
                },
                tableData: null,
                portId: null,
                id: 12352063,
                hash: '3e9821a4b98bbaeb713a7a558e0dfd16e5285594',
                pbemappingartifacts: [],
                targetmappingartifacts: [],
                dependencies: [],
              },
              {
                columnMetadata: null,
                task: {
                  annotations: {
                    outputColumnAnnotations: {
                      column2: {
                        type: [
                          'String',
                        ],
                        _likely_types: [
                          [
                            'String',
                          ],
                          [
                            'Integer',
                          ],
                          [
                            'Phone',
                          ],
                          [
                            'SSN',
                          ],
                          [
                            'Map',
                          ],
                        ],
                      },
                      column3: {
                        type: [
                          'String',
                        ],
                        _likely_types: [
                          [
                            'String',
                          ],
                          [
                            'Integer',
                          ],
                          [
                            'Phone',
                          ],
                          [
                            'SSN',
                          ],
                          [
                            'Map',
                          ],
                        ],
                      },
                      column4: {
                        type: [
                          'String',
                        ],
                        _likely_types: [
                          [
                            'String',
                          ],
                          [
                            'Integer',
                          ],
                          [
                            'Phone',
                          ],
                          [
                            'SSN',
                          ],
                          [
                            'Map',
                          ],
                        ],
                      },
                      column5: {
                        type: [
                          'String',
                        ],
                        _likely_types: [
                          [
                            'String',
                          ],
                          [
                            'Integer',
                          ],
                          [
                            'Phone',
                          ],
                          [
                            'SSN',
                          ],
                          [
                            'Map',
                          ],
                        ],
                      },
                      column6: {
                        type: [
                          'String',
                        ],
                        _likely_types: [
                          [
                            'String',
                          ],
                          [
                            'Integer',
                          ],
                          [
                            'Phone',
                          ],
                          [
                            'SSN',
                          ],
                          [
                            'Map',
                          ],
                        ],
                      },
                      column7: {
                        type: [
                          'String',
                        ],
                        _likely_types: [
                          [
                            'String',
                          ],
                          [
                            'Integer',
                          ],
                          [
                            'Phone',
                          ],
                          [
                            'SSN',
                          ],
                          [
                            'Map',
                          ],
                        ],
                      },
                      column8: {
                        type: [
                          'String',
                        ],
                        _likely_types: [
                          [
                            'String',
                          ],
                          [
                            'Integer',
                          ],
                          [
                            'Phone',
                          ],
                          [
                            'SSN',
                          ],
                          [
                            'Map',
                          ],
                        ],
                      },
                      column9: {
                        type: [
                          'String',
                        ],
                        _likely_types: [
                          [
                            'String',
                          ],
                          [
                            'Integer',
                          ],
                          [
                            'Phone',
                          ],
                          [
                            'SSN',
                          ],
                          [
                            'Map',
                          ],
                        ],
                      },
                      column10: {
                        type: [
                          'String',
                        ],
                        _likely_types: [
                          [
                            'String',
                          ],
                          [
                            'Integer',
                          ],
                          [
                            'Phone',
                          ],
                          [
                            'SSN',
                          ],
                          [
                            'Map',
                          ],
                        ],
                      },
                      column11: {
                        type: [
                          'String',
                        ],
                        _likely_types: [
                          [
                            'String',
                          ],
                          [
                            'Integer',
                          ],
                          [
                            'Phone',
                          ],
                          [
                            'SSN',
                          ],
                          [
                            'Map',
                          ],
                        ],
                      },
                      column12: {
                        type: [
                          'String',
                        ],
                        _likely_types: [
                          [
                            'String',
                          ],
                          [
                            'Integer',
                          ],
                          [
                            'Phone',
                          ],
                          [
                            'SSN',
                          ],
                          [
                            'Map',
                          ],
                        ],
                      },
                      column13: {
                        type: [
                          'String',
                        ],
                        _likely_types: [
                          [
                            'String',
                          ],
                          [
                            'Integer',
                          ],
                          [
                            'Phone',
                          ],
                          [
                            'SSN',
                          ],
                          [
                            'Map',
                          ],
                        ],
                      },
                      column14: {
                        type: [
                          'String',
                        ],
                        _likely_types: [
                          [
                            'String',
                          ],
                          [
                            'Integer',
                          ],
                          [
                            'Phone',
                          ],
                          [
                            'SSN',
                          ],
                          [
                            'Map',
                          ],
                        ],
                      },
                      column15: {
                        type: [
                          'String',
                        ],
                        _likely_types: [
                          [
                            'String',
                          ],
                          [
                            'Integer',
                          ],
                          [
                            'Phone',
                          ],
                          [
                            'SSN',
                          ],
                          [
                            'Map',
                          ],
                        ],
                      },
                      column16: {
                        type: [
                          'String',
                        ],
                        _likely_types: [
                          [
                            'String',
                          ],
                          [
                            'Integer',
                          ],
                          [
                            'Phone',
                          ],
                          [
                            'SSN',
                          ],
                          [
                            'Map',
                          ],
                        ],
                      },
                      column17: {
                        type: [
                          'String',
                        ],
                        _likely_types: [
                          [
                            'String',
                          ],
                          [
                            'Integer',
                          ],
                          [
                            'Phone',
                          ],
                          [
                            'SSN',
                          ],
                          [
                            'Map',
                          ],
                        ],
                      },
                      column18: {
                        type: [
                          'String',
                        ],
                        _likely_types: [
                          [
                            'String',
                          ],
                          [
                            'Integer',
                          ],
                          [
                            'Phone',
                          ],
                          [
                            'SSN',
                          ],
                          [
                            'Map',
                          ],
                        ],
                      },
                      column19: {
                        type: [
                          'String',
                        ],
                        _likely_types: [
                          [
                            'String',
                          ],
                          [
                            'Integer',
                          ],
                          [
                            'Phone',
                          ],
                          [
                            'SSN',
                          ],
                          [
                            'Map',
                          ],
                        ],
                      },
                      column20: {
                        type: [
                          'String',
                        ],
                        _likely_types: [
                          [
                            'String',
                          ],
                          [
                            'Integer',
                          ],
                          [
                            'Phone',
                          ],
                          [
                            'SSN',
                          ],
                          [
                            'Map',
                          ],
                        ],
                      },
                      column21: {
                        type: [
                          'String',
                        ],
                        _likely_types: [
                          [
                            'String',
                          ],
                          [
                            'Integer',
                          ],
                          [
                            'Phone',
                          ],
                          [
                            'SSN',
                          ],
                          [
                            'Map',
                          ],
                        ],
                      },
                      column22: {
                        type: [
                          'String',
                        ],
                        _likely_types: [
                          [
                            'String',
                          ],
                          [
                            'Integer',
                          ],
                          [
                            'Phone',
                          ],
                          [
                            'SSN',
                          ],
                          [
                            'Map',
                          ],
                        ],
                      },
                      column23: {
                        type: [
                          'String',
                        ],
                        _likely_types: [
                          [
                            'String',
                          ],
                          [
                            'Integer',
                          ],
                          [
                            'Phone',
                          ],
                          [
                            'SSN',
                          ],
                          [
                            'Map',
                          ],
                        ],
                      },
                    },
                  },
                  kind: 'task',
                  type: 'Split',
                  parameters: {
                    col: {
                      kind: 'column',
                      type: 'Column',
                      value: 'column1',
                      relation: null,
                    },
                    type: {
                      kind: 'bundle',
                      type: 'Bundle',
                      value: 'on',
                    },
                    on: {
                      kind: 'constant',
                      type: 'String',
                      value: ',',
                    },
                    limit: {
                      kind: 'constant',
                      type: 'Integer',
                      value: 21,
                    },
                    quote: {
                      kind: 'constant',
                      type: 'String',
                      value: '"',
                    },
                    as: {
                      kind: 'array',
                      type: 'Array',
                      value: [
                        {
                          kind: 'constant',
                          type: 'String',
                          value: 'column2',
                        },
                        {
                          kind: 'constant',
                          type: 'String',
                          value: 'column3',
                        },
                        {
                          kind: 'constant',
                          type: 'String',
                          value: 'column4',
                        },
                        {
                          kind: 'constant',
                          type: 'String',
                          value: 'column5',
                        },
                        {
                          kind: 'constant',
                          type: 'String',
                          value: 'column6',
                        },
                        {
                          kind: 'constant',
                          type: 'String',
                          value: 'column7',
                        },
                        {
                          kind: 'constant',
                          type: 'String',
                          value: 'column8',
                        },
                        {
                          kind: 'constant',
                          type: 'String',
                          value: 'column9',
                        },
                        {
                          kind: 'constant',
                          type: 'String',
                          value: 'column10',
                        },
                        {
                          kind: 'constant',
                          type: 'String',
                          value: 'column11',
                        },
                        {
                          kind: 'constant',
                          type: 'String',
                          value: 'column12',
                        },
                        {
                          kind: 'constant',
                          type: 'String',
                          value: 'column13',
                        },
                        {
                          kind: 'constant',
                          type: 'String',
                          value: 'column14',
                        },
                        {
                          kind: 'constant',
                          type: 'String',
                          value: 'column15',
                        },
                        {
                          kind: 'constant',
                          type: 'String',
                          value: 'column16',
                        },
                        {
                          kind: 'constant',
                          type: 'String',
                          value: 'column17',
                        },
                        {
                          kind: 'constant',
                          type: 'String',
                          value: 'column18',
                        },
                        {
                          kind: 'constant',
                          type: 'String',
                          value: 'column19',
                        },
                        {
                          kind: 'constant',
                          type: 'String',
                          value: 'column20',
                        },
                        {
                          kind: 'constant',
                          type: 'String',
                          value: 'column21',
                        },
                        {
                          kind: 'constant',
                          type: 'String',
                          value: 'column22',
                        },
                        {
                          kind: 'constant',
                          type: 'String',
                          value: 'column23',
                        },
                      ],
                    },
                  },
                  outputName: null,
                },
                tableData: null,
                portId: null,
                id: 12352061,
                hash: '5afcaa2e037f8128b328daceee3386ea0deb1c2f',
                pbemappingartifacts: [],
                targetmappingartifacts: [],
                dependencies: [],
              },
              {
                columnMetadata: null,
                task: {
                  annotations: {
                    outputColumnAnnotations: {
                      column2: {
                        type: [
                          'String',
                        ],
                        _likely_types: [
                          [
                            'String',
                          ],
                          [
                            'Integer',
                          ],
                          [
                            'Phone',
                          ],
                          [
                            'SSN',
                          ],
                          [
                            'Map',
                          ],
                        ],
                      },
                      column3: {
                        type: [
                          'String',
                        ],
                        _likely_types: [
                          [
                            'String',
                          ],
                          [
                            'Integer',
                          ],
                          [
                            'Phone',
                          ],
                          [
                            'SSN',
                          ],
                          [
                            'Map',
                          ],
                        ],
                      },
                      column4: {
                        type: [
                          'String',
                        ],
                        _likely_types: [
                          [
                            'String',
                          ],
                          [
                            'Integer',
                          ],
                          [
                            'Phone',
                          ],
                          [
                            'SSN',
                          ],
                          [
                            'Map',
                          ],
                        ],
                      },
                      column5: {
                        type: [
                          'String',
                        ],
                        _likely_types: [
                          [
                            'String',
                          ],
                          [
                            'Integer',
                          ],
                          [
                            'Phone',
                          ],
                          [
                            'SSN',
                          ],
                          [
                            'Map',
                          ],
                        ],
                      },
                      column6: {
                        type: [
                          'String',
                        ],
                        _likely_types: [
                          [
                            'String',
                          ],
                          [
                            'Integer',
                          ],
                          [
                            'Phone',
                          ],
                          [
                            'SSN',
                          ],
                          [
                            'Map',
                          ],
                        ],
                      },
                      column7: {
                        type: [
                          'String',
                        ],
                        _likely_types: [
                          [
                            'String',
                          ],
                          [
                            'Integer',
                          ],
                          [
                            'Phone',
                          ],
                          [
                            'SSN',
                          ],
                          [
                            'Map',
                          ],
                        ],
                      },
                      column8: {
                        type: [
                          'String',
                        ],
                        _likely_types: [
                          [
                            'String',
                          ],
                          [
                            'Integer',
                          ],
                          [
                            'Phone',
                          ],
                          [
                            'SSN',
                          ],
                          [
                            'Map',
                          ],
                        ],
                      },
                      column9: {
                        type: [
                          'String',
                        ],
                        _likely_types: [
                          [
                            'String',
                          ],
                          [
                            'Integer',
                          ],
                          [
                            'Phone',
                          ],
                          [
                            'SSN',
                          ],
                          [
                            'Map',
                          ],
                        ],
                      },
                      column10: {
                        type: [
                          'String',
                        ],
                        _likely_types: [
                          [
                            'String',
                          ],
                          [
                            'Integer',
                          ],
                          [
                            'Phone',
                          ],
                          [
                            'SSN',
                          ],
                          [
                            'Map',
                          ],
                        ],
                      },
                      column11: {
                        type: [
                          'String',
                        ],
                        _likely_types: [
                          [
                            'String',
                          ],
                          [
                            'Integer',
                          ],
                          [
                            'Phone',
                          ],
                          [
                            'SSN',
                          ],
                          [
                            'Map',
                          ],
                        ],
                      },
                      column12: {
                        type: [
                          'String',
                        ],
                        _likely_types: [
                          [
                            'String',
                          ],
                          [
                            'Integer',
                          ],
                          [
                            'Phone',
                          ],
                          [
                            'SSN',
                          ],
                          [
                            'Map',
                          ],
                        ],
                      },
                      column13: {
                        type: [
                          'String',
                        ],
                        _likely_types: [
                          [
                            'String',
                          ],
                          [
                            'Integer',
                          ],
                          [
                            'Phone',
                          ],
                          [
                            'SSN',
                          ],
                          [
                            'Map',
                          ],
                        ],
                      },
                      column14: {
                        type: [
                          'String',
                        ],
                        _likely_types: [
                          [
                            'String',
                          ],
                          [
                            'Integer',
                          ],
                          [
                            'Phone',
                          ],
                          [
                            'SSN',
                          ],
                          [
                            'Map',
                          ],
                        ],
                      },
                      column15: {
                        type: [
                          'String',
                        ],
                        _likely_types: [
                          [
                            'String',
                          ],
                          [
                            'Integer',
                          ],
                          [
                            'Phone',
                          ],
                          [
                            'SSN',
                          ],
                          [
                            'Map',
                          ],
                        ],
                      },
                      column16: {
                        type: [
                          'String',
                        ],
                        _likely_types: [
                          [
                            'String',
                          ],
                          [
                            'Integer',
                          ],
                          [
                            'Phone',
                          ],
                          [
                            'SSN',
                          ],
                          [
                            'Map',
                          ],
                        ],
                      },
                      column17: {
                        type: [
                          'String',
                        ],
                        _likely_types: [
                          [
                            'String',
                          ],
                          [
                            'Integer',
                          ],
                          [
                            'Phone',
                          ],
                          [
                            'SSN',
                          ],
                          [
                            'Map',
                          ],
                        ],
                      },
                      column18: {
                        type: [
                          'String',
                        ],
                        _likely_types: [
                          [
                            'String',
                          ],
                          [
                            'Integer',
                          ],
                          [
                            'Phone',
                          ],
                          [
                            'SSN',
                          ],
                          [
                            'Map',
                          ],
                        ],
                      },
                      column19: {
                        type: [
                          'String',
                        ],
                        _likely_types: [
                          [
                            'String',
                          ],
                          [
                            'Integer',
                          ],
                          [
                            'Phone',
                          ],
                          [
                            'SSN',
                          ],
                          [
                            'Map',
                          ],
                        ],
                      },
                      column20: {
                        type: [
                          'String',
                        ],
                        _likely_types: [
                          [
                            'String',
                          ],
                          [
                            'Integer',
                          ],
                          [
                            'Phone',
                          ],
                          [
                            'SSN',
                          ],
                          [
                            'Map',
                          ],
                        ],
                      },
                      column21: {
                        type: [
                          'String',
                        ],
                        _likely_types: [
                          [
                            'String',
                          ],
                          [
                            'Integer',
                          ],
                          [
                            'Phone',
                          ],
                          [
                            'SSN',
                          ],
                          [
                            'Map',
                          ],
                        ],
                      },
                      column22: {
                        type: [
                          'String',
                        ],
                        _likely_types: [
                          [
                            'String',
                          ],
                          [
                            'Integer',
                          ],
                          [
                            'Phone',
                          ],
                          [
                            'SSN',
                          ],
                          [
                            'Map',
                          ],
                        ],
                      },
                      column23: {
                        type: [
                          'String',
                        ],
                        _likely_types: [
                          [
                            'String',
                          ],
                          [
                            'Integer',
                          ],
                          [
                            'Phone',
                          ],
                          [
                            'SSN',
                          ],
                          [
                            'Map',
                          ],
                        ],
                      },
                    },
                  },
                  kind: 'task',
                  type: 'Replace',
                  parameters: {
                    with: {
                      kind: 'constant',
                      type: 'String',
                      value: '"',
                    },
                    col: {
                      kind: 'array',
                      type: 'Array',
                      value: [
                        {
                          kind: 'column',
                          type: 'Wildcard',
                          value: '*',
                          annotations: {
                            includeLineage: false,
                            includeFileLineage: false,
                          },
                          relation: null,
                        },
                      ],
                    },
                    type: {
                      kind: 'bundle',
                      type: 'Bundle',
                      value: 'on',
                    },
                    on: {
                      kind: 'constant',
                      type: 'String',
                      value: '""',
                    },
                    global: {
                      kind: 'constant',
                      type: 'Bool',
                      value: true,
                    },
                  },
                  outputName: null,
                },
                tableData: null,
                portId: null,
                id: 12352064,
                hash: '65d2b64ebca31ec565e7bd7ab0e6d5aa79a201e4',
                pbemappingartifacts: [],
                targetmappingartifacts: [],
                dependencies: [],
              },
              {
                columnMetadata: null,
                task: {
                  annotations: {
                    outputColumnAnnotations: {
                      column2: {
                        type: [
                          'Emailaddress',
                        ],
                        _likely_types: [
                          [
                            'Emailaddress',
                          ],
                          [
                            'Url',
                          ],
                          [
                            'String',
                          ],
                          [
                            'Integer',
                          ],
                          [
                            'Phone',
                          ],
                        ],
                      },
                      column3: {
                        type: [
                          'String',
                        ],
                        _likely_types: [
                          [
                            'String',
                          ],
                          [
                            'Integer',
                          ],
                          [
                            'Phone',
                          ],
                          [
                            'SSN',
                          ],
                          [
                            'Map',
                          ],
                        ],
                      },
                      column4: {
                        type: [
                          'String',
                        ],
                        _likely_types: [
                          [
                            'String',
                          ],
                          [
                            'Integer',
                          ],
                          [
                            'Phone',
                          ],
                          [
                            'SSN',
                          ],
                          [
                            'Map',
                          ],
                        ],
                      },
                      column5: {
                        type: [
                          'Integer',
                        ],
                        _likely_types: [
                          [
                            'Integer',
                          ],
                          [
                            'Float',
                          ],
                          [
                            'String',
                          ],
                          [
                            'Phone',
                          ],
                          [
                            'SSN',
                          ],
                        ],
                      },
                      column6: {
                        type: [
                          'String',
                        ],
                        _likely_types: [
                          [
                            'String',
                          ],
                          [
                            'Integer',
                          ],
                          [
                            'Phone',
                          ],
                          [
                            'SSN',
                          ],
                          [
                            'Map',
                          ],
                        ],
                      },
                      column7: {
                        type: [
                          'String',
                        ],
                        _likely_types: [
                          [
                            'String',
                          ],
                          [
                            'Integer',
                          ],
                          [
                            'Phone',
                          ],
                          [
                            'SSN',
                          ],
                          [
                            'Map',
                          ],
                        ],
                      },
                      column8: {
                        type: [
                          'Integer',
                        ],
                        _likely_types: [
                          [
                            'Integer',
                          ],
                          [
                            'Float',
                          ],
                          [
                            'String',
                          ],
                          [
                            'Phone',
                          ],
                          [
                            'SSN',
                          ],
                        ],
                      },
                      column9: {
                        type: [
                          'String',
                        ],
                        _likely_types: [
                          [
                            'String',
                          ],
                          [
                            'Integer',
                          ],
                          [
                            'Phone',
                          ],
                          [
                            'SSN',
                          ],
                          [
                            'Map',
                          ],
                        ],
                      },
                      column10: {
                        type: [
                          'Datetime',
                          'mm-dd',
                          'mm*dd',
                        ],
                        _likely_types: [
                          [
                            'Datetime',
                            'mm-dd',
                            'mm*dd',
                          ],
                          [
                            'String',
                          ],
                          [
                            'Integer',
                          ],
                          [
                            'Phone',
                          ],
                          [
                            'SSN',
                          ],
                        ],
                      },
                      column11: {
                        type: [
                          'Datetime',
                          'yy-mm-dd',
                          'yyyy*mm*dd',
                        ],
                        _likely_types: [
                          [
                            'Datetime',
                            'yy-mm-dd',
                            'yyyy*mm*dd',
                          ],
                          [
                            'String',
                          ],
                          [
                            'Integer',
                          ],
                          [
                            'Phone',
                          ],
                          [
                            'SSN',
                          ],
                        ],
                      },
                      column12: {
                        type: [
                          'String',
                        ],
                        _likely_types: [
                          [
                            'String',
                          ],
                          [
                            'Integer',
                          ],
                          [
                            'Phone',
                          ],
                          [
                            'SSN',
                          ],
                          [
                            'Map',
                          ],
                        ],
                      },
                      column13: {
                        type: [
                          'String',
                        ],
                        _likely_types: [
                          [
                            'String',
                          ],
                          [
                            'Integer',
                          ],
                          [
                            'Phone',
                          ],
                          [
                            'SSN',
                          ],
                          [
                            'Map',
                          ],
                        ],
                      },
                      column14: {
                        type: [
                          'String',
                        ],
                        _likely_types: [
                          [
                            'String',
                          ],
                          [
                            'Url',
                          ],
                          [
                            'Integer',
                          ],
                          [
                            'Phone',
                          ],
                          [
                            'SSN',
                          ],
                        ],
                      },
                      column15: {
                        type: [
                          'String',
                        ],
                        _likely_types: [
                          [
                            'String',
                          ],
                          [
                            'Integer',
                          ],
                          [
                            'Phone',
                          ],
                          [
                            'SSN',
                          ],
                          [
                            'Map',
                          ],
                        ],
                      },
                      column16: {
                        type: [
                          'String',
                        ],
                        _likely_types: [
                          [
                            'String',
                          ],
                          [
                            'Integer',
                          ],
                          [
                            'Phone',
                          ],
                          [
                            'SSN',
                          ],
                          [
                            'Map',
                          ],
                        ],
                      },
                      column17: {
                        type: [
                          'String',
                        ],
                        _likely_types: [
                          [
                            'String',
                          ],
                          [
                            'Integer',
                          ],
                          [
                            'Phone',
                          ],
                          [
                            'SSN',
                          ],
                          [
                            'Map',
                          ],
                        ],
                      },
                      column18: {
                        type: [
                          'Integer',
                        ],
                        _likely_types: [
                          [
                            'Integer',
                          ],
                          [
                            'Float',
                          ],
                          [
                            'String',
                          ],
                          [
                            'Phone',
                          ],
                          [
                            'SSN',
                          ],
                        ],
                      },
                      column19: {
                        type: [
                          'String',
                        ],
                        _likely_types: [
                          [
                            'String',
                          ],
                          [
                            'Integer',
                          ],
                          [
                            'Phone',
                          ],
                          [
                            'SSN',
                          ],
                          [
                            'Map',
                          ],
                        ],
                      },
                      column20: {
                        type: [
                          'Datetime',
                          'yy-mm-dd',
                          'yyyy*mm*dd',
                        ],
                        _likely_types: [
                          [
                            'Datetime',
                            'yy-mm-dd',
                            'yyyy*mm*dd',
                          ],
                          [
                            'Datetime',
                            'yy-dd-mm',
                            'yyyy*dd*mm',
                          ],
                          [
                            'String',
                          ],
                          [
                            'Integer',
                          ],
                          [
                            'Phone',
                          ],
                        ],
                      },
                      column21: {
                        type: [
                          'String',
                        ],
                        _likely_types: [
                          [
                            'String',
                          ],
                          [
                            'Integer',
                          ],
                          [
                            'Phone',
                          ],
                          [
                            'SSN',
                          ],
                          [
                            'Map',
                          ],
                        ],
                      },
                      column22: {
                        type: [
                          'String',
                        ],
                        _likely_types: [
                          [
                            'String',
                          ],
                          [
                            'Integer',
                          ],
                          [
                            'Phone',
                          ],
                          [
                            'SSN',
                          ],
                          [
                            'Map',
                          ],
                        ],
                      },
                      column23: {
                        type: [
                          'String',
                        ],
                        _likely_types: [
                          [
                            'String',
                          ],
                          [
                            'Integer',
                          ],
                          [
                            'Bool',
                          ],
                          [
                            'Float',
                          ],
                          [
                            'Phone',
                          ],
                        ],
                      },
                    },
                  },
                  kind: 'task',
                  type: 'Replace',
                  parameters: {
                    with: {
                      kind: 'constant',
                      type: 'String',
                      value: '',
                    },
                    col: {
                      kind: 'array',
                      type: 'Array',
                      value: [
                        {
                          kind: 'column',
                          type: 'Wildcard',
                          value: '*',
                          annotations: {
                            includeLineage: false,
                            includeFileLineage: false,
                          },
                          relation: null,
                        },
                      ],
                    },
                    type: {
                      kind: 'bundle',
                      type: 'Bundle',
                      value: 'on',
                    },
                    on: {
                      kind: 'constant',
                      type: 'Pattern',
                      value: '{start}"|"{end}',
                    },
                    global: {
                      kind: 'constant',
                      type: 'Bool',
                      value: true,
                    },
                  },
                  outputName: null,
                },
                tableData: null,
                portId: null,
                id: 12352065,
                hash: 'a106141a3fad074fccf64806e74fccbfd9c9d811',
                pbemappingartifacts: [],
                targetmappingartifacts: [],
                dependencies: [],
              },
            ],
            dqScriptRules: [],
          },
        ],
        outputobjects: [
          {
            id: 403190,
            execution: 'dataflow',
            profiler: true,
            flowNodeId: 2066078,
            isAdhoc: true,
            ignoreRecipeErrors: true,
            checkSchemaDrift: false,
            publications: [
              {
                path: [
                  'eng-particle-234609',
                  'ecount',
                ],
                parameters: {
                  externalTableLocation: null,
                  isDeltaTable: 'false',
                  isExternalTable: 'false',
                },
                id: 469536,
                tableName: 'dup_order_detail',
                targetType: 'bigquery',
                action: 'createAndLoad',
                connectionId: null,
                runParameters: [],
              },
            ],
            writesettings: [],
            sqlscripts: [],
            outputobjectdataflowoptions: [
              {
                id: 5973565,
                key: 'autoscalingAlgorithm',
                value: 'THROUGHPUT_BASED',
              },
              {
                id: 5973570,
                key: 'hostProjectId',
                value: '',
              },
              {
                id: 5973563,
                key: 'machineType',
                value: 'n1-standard-1',
              },
              {
                id: 5973568,
                key: 'maxNumWorkers',
                value: '1000',
              },
              {
                id: 5973564,
                key: 'network',
                value: '',
              },
              {
                id: 5973567,
                key: 'numWorkers',
                value: '1',
              },
              {
                id: 5973561,
                key: 'region',
                value: 'asia-east1',
              },
              {
                id: 5973566,
                key: 'serviceAccount',
                value: '',
              },
              {
                id: 5973560,
                key: 'subnetwork',
                value: '',
              },
              {
                id: 5973569,
                key: 'usePublicIps',
                value: 'true',
              },
              {
                id: 5973562,
                key: 'zone',
                value: '',
              },
            ],
            outputobjectsparkoptions: [],
          },
        ],
        datasources: [
          {
            path: '/upload/52261876-4353-4d13-ba2e-a4e94296bcdc/ESD012R_20210101_0331.csv',
            bucket: 'tmp-dataprep-jobrun',
            userinfo: null,
            type: 'gs',
            host: null,
            hasDynamicBucket: false,
            hasDynamicUserInfo: false,
            hasDynamicHost: false,
            isDynamicOrConverted: false,
            id: 986381,
            dynamicPath: null,
            dynamicBucket: null,
            dynamicHost: null,
            dynamicUserInfo: null,
            connectionId: null,
            isSchematized: true,
            isDynamic: false,
            isConverted: false,
            disableTypeInference: false,
            hasStructuring: true,
            parsingScriptId: 2091081,
            storageLocation: {
              fullUri: 'gs://tmp-dataprep-jobrun/upload/52261876-4353-4d13-ba2e-a4e94296bcdc/ESD012R_20210101_0331.csv',
              id: 13915728,
              path: '/upload/52261876-4353-4d13-ba2e-a4e94296bcdc/ESD012R_20210101_0331.csv',
              size: 5794539,
              type: 'gs',
              bucket: 'tmp-dataprep-jobrun',
              blobHost: null,
              container: null,
              hash: 'df4387eb8571d9decd9a6bdec14ddecc10628dc9',
              host: null,
              userinfo: null,
            },
            runParameters: [],
          },
        ],
        webhookflowtasks: [],
      },
    ],
  },
  hash: 'PlquCE2IOi+FZ5YCq4IScladfdYK7qYe',
}
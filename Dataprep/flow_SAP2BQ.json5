{
  type: 'flow',
  kind: 'artifact',
  metadata: {
    trifactaVersion: '9.0.0+59.20220214003650.64c7855',
    exportedAt: '2022-03-20T03:42:46.772Z',
    exportedBy: 79454,
    uuid: 'ceaf0b40-a7ff-11ec-bbdb-2f7a11b1df36',
    comment: '',
    primaryFlowIds: [
      1036572,
    ],
    edition: 'Dataprep',
    lastMigration: '20220120144728',
  },
  data: {
    artifacts: [],
    connections: [],
    flows: [
      {
        settings: {
          optimize: 'default',
          optimizers: {
            columnPruning: 'default',
            filterPushdown: 'default',
            columnPruningOnSource: 'default',
            filterPushdownOnSource: 'default',
            joinPushdown: 'default',
            expressionPushdown: 'default',
            aggPushdown: 'default',
            unionPushdown: 'default',
            profilePushdown: 'default',
            samplePushdown: 'default',
            advancedPushdown: 'default',
            filesToBigQuery: 'default',
            fullPushdown: 'default',
          },
          dbOverrides: {},
        },
        id: 1036572,
        name: 'SAP2BQ',
        description: '',
        defaultOutputDir: null,
        fromExampleFlowHash: null,
        fromExampleFlowName: null,
        fromTemplateId: null,
        flownodes: [
          {
            id: 5571248,
            scriptId: 5025399,
            flowNodeId: null,
            wrangled: true,
            referenceId: null,
            sampleLoadLimit: null,
          },
          {
            id: 5571249,
            scriptId: 5025400,
            flowNodeId: null,
            wrangled: true,
            referenceId: null,
            sampleLoadLimit: null,
          },
          {
            id: 5571250,
            scriptId: 5025401,
            flowNodeId: null,
            wrangled: true,
            referenceId: null,
            sampleLoadLimit: null,
          },
          {
            id: 5571252,
            scriptId: 5023417,
            flowNodeId: null,
            wrangled: false,
            referenceId: null,
            sampleLoadLimit: null,
          },
        ],
        notes: [],
        flowgraphvertices: [
          {
            id: 6953020,
            objectType: 'flownode',
            objectId: 5571248,
            x: -258,
            y: 102,
            width: null,
            height: null,
          },
          {
            id: 6953021,
            objectType: 'flownode',
            objectId: 5571249,
            x: -7,
            y: 133,
            width: null,
            height: null,
          },
          {
            id: 6953022,
            objectType: 'flownode',
            objectId: 5571250,
            x: 42,
            y: -47,
            width: null,
            height: null,
          },
          {
            id: 6953025,
            objectType: 'flownode',
            objectId: 5571252,
            x: -292,
            y: -108,
            width: null,
            height: null,
          },
          {
            id: 6953024,
            objectType: 'outputobject',
            objectId: 825521,
            x: 226,
            y: 157,
            width: null,
            height: null,
          },
        ],
        flowedges: [
          {
            id: 4590464,
            inFlowNodeId: 5571248,
            inPortId: null,
            outFlowNodeId: 5571249,
            outPortId: null,
          },
          {
            id: 4590465,
            inFlowNodeId: 5571250,
            inPortId: null,
            outFlowNodeId: 5571248,
            outPortId: null,
          },
          {
            id: 4590467,
            inFlowNodeId: 5571252,
            inPortId: null,
            outFlowNodeId: 5571250,
            outPortId: null,
          },
        ],
        references: [],
        flowrunparameteroverrides: [],
        runparameters: [],
        recipes: [
          {
            id: 5025399,
            name: 'main transform',
            description: null,
            active: true,
            nextPortId: 1,
            steps: [
              {
                columnMetadata: {
                  email: {
                    id: '2ybobwt',
                  },
                  cellphone_number: {
                    id: '-12dfv4p',
                  },
                  cust_name: {
                    id: '2yd4v44',
                  },
                  cust_id: {
                    id: '33p5xww',
                  },
                  addr1: {
                    id: '2y8nssx',
                  },
                  order_total: {
                    id: '-bqv02k',
                  },
                  order_id: {
                    id: '1tr1lnx',
                  },
                  sale_channel: {
                    id: '9fieoy',
                  },
                  deposit_date: {
                    id: '4lno8je',
                  },
                  delivery_date: {
                    id: '25j2qli',
                  },
                  product_name_spec: {
                    id: '5gc8weo',
                  },
                  supplier: {
                    id: '37w6sgp',
                  },
                  category_group: {
                    id: '2kwubv3',
                  },
                  product_id: {
                    id: '3uketiq',
                  },
                  product_name: {
                    id: '4rveepy',
                  },
                  unit_price: {
                    id: '4if00t3',
                  },
                  quantity: {
                    id: '393uu04',
                  },
                  price: {
                    id: '2yjjyt4',
                  },
                  ecount_date: {
                    id: '486cmts',
                  },
                  payment_channel: {
                    id: '35sacl7',
                  },
                  deposit: {
                    id: '3en20yl',
                  },
                  purchase_category: {
                    id: '2kcyf8d',
                  },
                  purchase_fabrics: {
                    id: '27fz4qh',
                  },
                  purchase_collection: {
                    id: '247is0b',
                  },
                  purchase_spec: {
                    id: '3v5pjqi',
                  },
                  salesperson: {
                    id: '1gonuxg',
                  },
                  sap_docstatus: {
                    id: '2q6ojk2',
                  },
                  sap_canceled: {
                    id: '17ej3nb',
                  },
                  sap_deposit_date: {
                    id: '494wim5',
                  },
                  TRIFACTA__FILE_LINEAGE_INFO: {
                    id: '68royxc',
                  },
                },
                task: {
                  annotations: {
                    hidden: true,
                  },
                  kind: 'task',
                  type: 'Load',
                  parameters: {
                    format: {
                      annotations: {},
                      kind: 'func',
                      type: 'FormatBlob',
                      parameters: {},
                    },
                    location: {
                      kind: 'constant',
                      type: 'String',
                      value: 'portId://null',
                    },
                    enableLineage: {
                      kind: 'constant',
                      type: 'Bool',
                      value: true,
                    },
                    as: {
                      kind: 'array',
                      type: 'Array',
                      value: [
                        {
                          kind: 'constant',
                          type: 'String',
                          value: 'column1',
                        },
                      ],
                    },
                  },
                  outputName: 'original_datasource_591368',
                },
                tableData: null,
                portId: null,
                id: 31130789,
                hash: 'cb649ee99fe4b15cb27f66d7451cd2bad6ede315',
                pbemappingartifacts: [],
                targetmappingartifacts: [],
                udfscriptlines: [],
                dependencies: [],
              },
              {
                columnMetadata: {},
                task: {
                  annotations: {
                    outputColumnAnnotations: {
                      order_total: {
                        type: [
                          'Integer',
                        ],
                        _likely_types: [
                          [
                            'Integer',
                          ],
                          [
                            'Float',
                          ],
                          [
                            'String',
                          ],
                          [
                            'Phone',
                          ],
                          [
                            'SSN',
                          ],
                        ],
                      },
                      unit_price: {
                        type: [
                          'Float',
                        ],
                        _likely_types: [
                          [
                            'Float',
                          ],
                          [
                            'String',
                          ],
                          [
                            'Integer',
                          ],
                          [
                            'Phone',
                          ],
                          [
                            'SSN',
                          ],
                        ],
                      },
                      quantity: {
                        type: [
                          'Float',
                        ],
                        _likely_types: [
                          [
                            'Float',
                          ],
                          [
                            'String',
                          ],
                          [
                            'Integer',
                          ],
                          [
                            'Phone',
                          ],
                          [
                            'SSN',
                          ],
                        ],
                      },
                      price: {
                        type: [
                          'Integer',
                        ],
                        _likely_types: [
                          [
                            'Integer',
                          ],
                          [
                            'Float',
                          ],
                          [
                            'String',
                          ],
                          [
                            'Phone',
                          ],
                          [
                            'SSN',
                          ],
                        ],
                      },
                    },
                  },
                  kind: 'task',
                  type: 'ReplacePatterns',
                  parameters: {
                    with: {
                      kind: 'constant',
                      type: 'String',
                      value: '',
                    },
                    col: {
                      kind: 'array',
                      type: 'Array',
                      value: [
                        {
                          kind: 'column',
                          type: 'Column',
                          value: 'price',
                          relation: null,
                        },
                        {
                          kind: 'column',
                          type: 'Column',
                          value: 'unit_price',
                          relation: null,
                        },
                        {
                          kind: 'column',
                          type: 'Column',
                          value: 'order_total',
                          relation: null,
                        },
                        {
                          kind: 'column',
                          type: 'Column',
                          value: 'quantity',
                          relation: null,
                        },
                      ],
                    },
                    on: {
                      kind: 'constant',
                      type: 'Regexp',
                      value: ',',
                    },
                    ignoreCase: {
                      kind: 'constant',
                      type: 'Bool',
                      value: false,
                    },
                    global: {
                      kind: 'constant',
                      type: 'Bool',
                      value: true,
                    },
                  },
                  outputName: null,
                },
                tableData: null,
                portId: null,
                id: 31130790,
                hash: 'e59341ef6830a2106a1a3e3a98732af8a040d5d6',
                pbemappingartifacts: [],
                targetmappingartifacts: [],
                udfscriptlines: [],
                dependencies: [],
              },
              {
                columnMetadata: {},
                task: {
                  annotations: {},
                  kind: 'task',
                  type: 'SetType',
                  parameters: {
                    col: {
                      kind: 'array',
                      type: 'Array',
                      value: [
                        {
                          kind: 'column',
                          type: 'Column',
                          value: 'price',
                          relation: null,
                        },
                        {
                          kind: 'column',
                          type: 'Column',
                          value: 'unit_price',
                          relation: null,
                        },
                        {
                          kind: 'column',
                          type: 'Column',
                          value: 'order_total',
                          relation: null,
                        },
                        {
                          kind: 'column',
                          type: 'Column',
                          value: 'quantity',
                          relation: null,
                        },
                      ],
                    },
                    type: {
                      kind: 'bundle',
                      type: 'Bundle',
                      value: 'Float',
                    },
                  },
                  outputName: null,
                },
                tableData: null,
                portId: null,
                id: 31130791,
                hash: '6d60600a8a965b63c397ffeaf793cd20fcb40d3e',
                pbemappingartifacts: [],
                targetmappingartifacts: [],
                udfscriptlines: [],
                dependencies: [],
              },
              {
                columnMetadata: {},
                task: {
                  annotations: {
                    outputColumnAnnotations: {
                      sale_channel: {
                        type: [
                          'String',
                        ],
                        _likely_types: [
                          [
                            'String',
                          ],
                          [
                            'Integer',
                          ],
                          [
                            'Phone',
                          ],
                          [
                            'SSN',
                          ],
                          [
                            'Map',
                          ],
                        ],
                      },
                    },
                  },
                  kind: 'task',
                  type: 'TextFormat',
                  parameters: {
                    type: {
                      kind: 'bundle',
                      type: 'Bundle',
                      value: 'lowercase',
                    },
                    col: {
                      kind: 'array',
                      type: 'Array',
                      value: [
                        {
                          kind: 'column',
                          type: 'Column',
                          value: 'sale_channel',
                          relation: null,
                        },
                      ],
                    },
                  },
                  outputName: null,
                },
                tableData: null,
                portId: null,
                id: 31130792,
                hash: '64308b9adfd4a0f4112c86437e32b4f37b0ee1b5',
                pbemappingartifacts: [],
                targetmappingartifacts: [],
                udfscriptlines: [],
                dependencies: [],
              },
              {
                columnMetadata: {},
                task: {
                  annotations: {
                    outputColumnAnnotations: {
                      sale_channel: {
                        type: [
                          'String',
                        ],
                        _likely_types: [
                          [
                            'String',
                          ],
                          [
                            'Integer',
                          ],
                          [
                            'Phone',
                          ],
                          [
                            'SSN',
                          ],
                          [
                            'Map',
                          ],
                        ],
                      },
                    },
                  },
                  kind: 'task',
                  type: 'Set',
                  parameters: {
                    col: {
                      kind: 'array',
                      type: 'Array',
                      value: [
                        {
                          kind: 'column',
                          type: 'Column',
                          value: 'sale_channel',
                          relation: null,
                        },
                      ],
                    },
                    value: {
                      annotations: {},
                      kind: 'func',
                      type: 'Case',
                      parameters: {
                        predicateValuePairs: {
                          kind: 'array',
                          type: 'Array',
                          value: [
                            {
                              annotations: {},
                              kind: 'func',
                              type: 'Matches',
                              parameters: {
                                ignore_case: {
                                  kind: 'constant',
                                  type: 'Bool',
                                  value: false,
                                },
                                lhs: {
                                  kind: 'array',
                                  type: 'Array',
                                  value: [
                                    {
                                      kind: 'column',
                                      type: 'Column',
                                      value: 'sale_channel',
                                      relation: null,
                                    },
                                  ],
                                },
                                rhs: {
                                  kind: 'constant',
                                  type: 'Regexp',
                                  value: 'f網路台北內湖t新竹竹北',
                                },
                              },
                            },
                            {
                              kind: 'constant',
                              type: 'String',
                              value: '網路台北內湖',
                            },
                            {
                              kind: 'column',
                              type: 'Column',
                              value: 'sale_channel',
                              relation: null,
                            },
                          ],
                        },
                      },
                    },
                  },
                  outputName: null,
                },
                tableData: null,
                portId: null,
                id: 31130793,
                hash: '3082e8af40ba4c3fe37fea0d7b759ec94964ddbc',
                pbemappingartifacts: [],
                targetmappingartifacts: [],
                udfscriptlines: [],
                dependencies: [],
              },
              {
                columnMetadata: {
                  sale_channel_sort: {
                    id: '8mqcpti',
                  },
                },
                task: {
                  annotations: {
                    outputColumnAnnotations: {
                      sale_channel_sort: {
                        type: [
                          'Integer',
                        ],
                        _likely_types: [
                          [
                            'Integer',
                          ],
                          [
                            'Float',
                          ],
                          [
                            'String',
                          ],
                          [
                            'Phone',
                          ],
                          [
                            'SSN',
                          ],
                        ],
                      },
                    },
                  },
                  kind: 'task',
                  type: 'Derive',
                  parameters: {
                    type: {
                      kind: 'bundle',
                      type: 'Bundle',
                      value: 'single',
                    },
                    value: {
                      annotations: {},
                      kind: 'func',
                      type: 'Case',
                      parameters: {
                        predicateValuePairs: {
                          kind: 'array',
                          type: 'Array',
                          value: [
                            {
                              annotations: {
                                infix: true,
                                parenthetical: false,
                              },
                              kind: 'func',
                              type: 'Equal',
                              parameters: {
                                lhs: {
                                  kind: 'column',
                                  type: 'Column',
                                  value: 'sale_channel',
                                  relation: null,
                                },
                                rhs: {
                                  kind: 'constant',
                                  type: 'String',
                                  value: '內湖旗艦店',
                                },
                              },
                            },
                            {
                              kind: 'constant',
                              type: 'Integer',
                              value: 110,
                            },
                            {
                              annotations: {
                                infix: true,
                                parenthetical: false,
                              },
                              kind: 'func',
                              type: 'Equal',
                              parameters: {
                                lhs: {
                                  kind: 'column',
                                  type: 'Column',
                                  value: 'sale_channel',
                                  relation: null,
                                },
                                rhs: {
                                  kind: 'constant',
                                  type: 'String',
                                  value: '新竹竹北店',
                                },
                              },
                            },
                            {
                              kind: 'constant',
                              type: 'Integer',
                              value: 120,
                            },
                            {
                              annotations: {
                                infix: true,
                                parenthetical: false,
                              },
                              kind: 'func',
                              type: 'Equal',
                              parameters: {
                                lhs: {
                                  kind: 'column',
                                  type: 'Column',
                                  value: 'sale_channel',
                                  relation: null,
                                },
                                rhs: {
                                  kind: 'constant',
                                  type: 'String',
                                  value: '台中文心店',
                                },
                              },
                            },
                            {
                              kind: 'constant',
                              type: 'Integer',
                              value: 130,
                            },
                            {
                              annotations: {
                                infix: true,
                                parenthetical: false,
                              },
                              kind: 'func',
                              type: 'Equal',
                              parameters: {
                                lhs: {
                                  kind: 'column',
                                  type: 'Column',
                                  value: 'sale_channel',
                                  relation: null,
                                },
                                rhs: {
                                  kind: 'constant',
                                  type: 'String',
                                  value: '高雄巨蛋店',
                                },
                              },
                            },
                            {
                              kind: 'constant',
                              type: 'Integer',
                              value: 140,
                            },
                            {
                              annotations: {},
                              kind: 'func',
                              type: 'Matches',
                              parameters: {
                                ignore_case: {
                                  kind: 'constant',
                                  type: 'Bool',
                                  value: false,
                                },
                                lhs: {
                                  kind: 'array',
                                  type: 'Array',
                                  value: [
                                    {
                                      kind: 'column',
                                      type: 'Column',
                                      value: 'sale_channel',
                                      relation: null,
                                    },
                                  ],
                                },
                                rhs: {
                                  kind: 'constant',
                                  type: 'Regexp',
                                  value: '網路台北內湖',
                                },
                              },
                            },
                            {
                              kind: 'constant',
                              type: 'Integer',
                              value: 210,
                            },
                            {
                              annotations: {},
                              kind: 'func',
                              type: 'Matches',
                              parameters: {
                                ignore_case: {
                                  kind: 'constant',
                                  type: 'Bool',
                                  value: false,
                                },
                                lhs: {
                                  kind: 'array',
                                  type: 'Array',
                                  value: [
                                    {
                                      kind: 'column',
                                      type: 'Column',
                                      value: 'sale_channel',
                                      relation: null,
                                    },
                                  ],
                                },
                                rhs: {
                                  kind: 'constant',
                                  type: 'Regexp',
                                  value: '網路新竹竹北',
                                },
                              },
                            },
                            {
                              kind: 'constant',
                              type: 'Integer',
                              value: 220,
                            },
                            {
                              annotations: {},
                              kind: 'func',
                              type: 'Matches',
                              parameters: {
                                ignore_case: {
                                  kind: 'constant',
                                  type: 'Bool',
                                  value: false,
                                },
                                lhs: {
                                  kind: 'array',
                                  type: 'Array',
                                  value: [
                                    {
                                      kind: 'column',
                                      type: 'Column',
                                      value: 'sale_channel',
                                      relation: null,
                                    },
                                  ],
                                },
                                rhs: {
                                  kind: 'constant',
                                  type: 'Regexp',
                                  value: '網路台中文心',
                                },
                              },
                            },
                            {
                              kind: 'constant',
                              type: 'Integer',
                              value: 230,
                            },
                            {
                              annotations: {},
                              kind: 'func',
                              type: 'Matches',
                              parameters: {
                                ignore_case: {
                                  kind: 'constant',
                                  type: 'Bool',
                                  value: false,
                                },
                                lhs: {
                                  kind: 'array',
                                  type: 'Array',
                                  value: [
                                    {
                                      kind: 'column',
                                      type: 'Column',
                                      value: 'sale_channel',
                                      relation: null,
                                    },
                                  ],
                                },
                                rhs: {
                                  kind: 'constant',
                                  type: 'Regexp',
                                  value: '網路高雄巨蛋',
                                },
                              },
                            },
                            {
                              kind: 'constant',
                              type: 'Integer',
                              value: 240,
                            },
                            {
                              annotations: {},
                              kind: 'func',
                              type: 'Matches',
                              parameters: {
                                ignore_case: {
                                  kind: 'constant',
                                  type: 'Bool',
                                  value: false,
                                },
                                lhs: {
                                  kind: 'array',
                                  type: 'Array',
                                  value: [
                                    {
                                      kind: 'column',
                                      type: 'Column',
                                      value: 'sale_channel',
                                      relation: null,
                                    },
                                  ],
                                },
                                rhs: {
                                  kind: 'constant',
                                  type: 'Regexp',
                                  value: '網路',
                                },
                              },
                            },
                            {
                              kind: 'constant',
                              type: 'Integer',
                              value: 200,
                            },
                            {
                              kind: 'constant',
                              type: 'Integer',
                              value: 300,
                            },
                          ],
                        },
                      },
                    },
                    as: {
                      kind: 'constant',
                      type: 'String',
                      value: 'sale_channel_sort',
                    },
                  },
                  outputName: null,
                },
                tableData: null,
                portId: null,
                id: 31130794,
                hash: 'a8d5a4296ac8b019b7141cdfe3cab0b28cacfa16',
                pbemappingartifacts: [],
                targetmappingartifacts: [],
                udfscriptlines: [],
                dependencies: [],
              },
              {
                columnMetadata: {
                  channel_oo: {
                    id: '21kk7bg',
                  },
                },
                task: {
                  annotations: {
                    outputColumnAnnotations: {
                      channel_oo: {
                        type: [
                          'String',
                        ],
                        _likely_types: [
                          [
                            'String',
                          ],
                          [
                            'Integer',
                          ],
                          [
                            'Phone',
                          ],
                          [
                            'SSN',
                          ],
                          [
                            'Map',
                          ],
                        ],
                      },
                    },
                  },
                  kind: 'task',
                  type: 'Derive',
                  parameters: {
                    type: {
                      kind: 'bundle',
                      type: 'Bundle',
                      value: 'single',
                    },
                    value: {
                      annotations: {},
                      kind: 'func',
                      type: 'Case',
                      parameters: {
                        predicateValuePairs: {
                          kind: 'array',
                          type: 'Array',
                          value: [
                            {
                              annotations: {},
                              kind: 'func',
                              type: 'Matches',
                              parameters: {
                                ignore_case: {
                                  kind: 'constant',
                                  type: 'Bool',
                                  value: false,
                                },
                                lhs: {
                                  kind: 'array',
                                  type: 'Array',
                                  value: [
                                    {
                                      kind: 'column',
                                      type: 'Column',
                                      value: 'sale_channel',
                                      relation: null,
                                    },
                                  ],
                                },
                                rhs: {
                                  kind: 'constant',
                                  type: 'Regexp',
                                  value: '網路',
                                },
                              },
                            },
                            {
                              kind: 'constant',
                              type: 'String',
                              value: '線上',
                            },
                            {
                              kind: 'constant',
                              type: 'String',
                              value: '線下',
                            },
                          ],
                        },
                      },
                    },
                    as: {
                      kind: 'constant',
                      type: 'String',
                      value: 'channel_oo',
                    },
                  },
                  outputName: null,
                },
                tableData: null,
                portId: null,
                id: 31130795,
                hash: '529466e72f09bf6bd3183fdb36d269f510704801',
                pbemappingartifacts: [],
                targetmappingartifacts: [],
                udfscriptlines: [],
                dependencies: [],
              },
              {
                columnMetadata: {},
                task: {
                  annotations: {
                    outputColumnAnnotations: {
                      ecount_date: {
                        type: [
                          'Datetime',
                          'yy-mm-dd hh:mm:ss',
                          'yyyymmdd*HH:MM:SS.sssX',
                        ],
                        _likely_types: [
                          [
                            'Datetime',
                            'yy-mm-dd hh:mm:ss',
                            'yyyymmdd*HH:MM:SS.sssX',
                          ],
                          [
                            'String',
                          ],
                          [
                            'Integer',
                          ],
                          [
                            'Phone',
                          ],
                          [
                            'SSN',
                          ],
                        ],
                      },
                    },
                  },
                  kind: 'task',
                  type: 'ReplacePatterns',
                  parameters: {
                    with: {
                      kind: 'constant',
                      type: 'String',
                      value: '',
                    },
                    col: {
                      kind: 'array',
                      type: 'Array',
                      value: [
                        {
                          kind: 'column',
                          type: 'Column',
                          value: 'ecount_date',
                          relation: null,
                        },
                      ],
                    },
                    on: {
                      kind: 'constant',
                      type: 'Regexp',
                      value: '[\\.\\-]',
                    },
                    ignoreCase: {
                      kind: 'constant',
                      type: 'Bool',
                      value: false,
                    },
                    global: {
                      kind: 'constant',
                      type: 'Bool',
                      value: true,
                    },
                    as: {
                      kind: 'array',
                      type: 'Array',
                      value: [
                        {
                          kind: 'constant',
                          type: 'String',
                          value: 'ecount_date',
                        },
                      ],
                    },
                  },
                  outputName: null,
                },
                tableData: null,
                portId: null,
                id: 31136052,
                hash: '0c18106106d89331571fd92bd22b113f6cbda127',
                pbemappingartifacts: [],
                targetmappingartifacts: [],
                udfscriptlines: [],
                dependencies: [],
              },
              {
                columnMetadata: {
                  addr2: {
                    id: '-61ra510',
                  },
                },
                task: {
                  annotations: {
                    outputColumnAnnotations: {
                      addr2: {
                        type: [
                          'String',
                        ],
                        _likely_types: [
                          [
                            'String',
                          ],
                          [
                            'Integer',
                          ],
                          [
                            'Phone',
                          ],
                          [
                            'SSN',
                          ],
                          [
                            'Map',
                          ],
                        ],
                      },
                    },
                  },
                  kind: 'task',
                  type: 'ExtractPatterns',
                  parameters: {
                    col: {
                      kind: 'column',
                      type: 'Column',
                      value: 'addr1',
                      relation: null,
                    },
                    type: {
                      kind: 'bundle',
                      type: 'Bundle',
                      value: 'custom',
                    },
                    on: {
                      kind: 'constant',
                      type: 'Regexp',
                      value: '臺北市|台北市|台北|北市|南海島|釣魚臺|基隆市|新北市|宜蘭縣|宜蘭|連江縣|桃園市|新竹市|新竹縣|竹北市|新竹門市|新竹|桃園市|桃園|苗栗縣|苗栗市|臺中市|台中市|台中縣|彰化縣|彰化市|彰化|南投縣|南投市|嘉義市|嘉義縣|雲林縣|臺南市|台南市|高雄市|高雄|澎湖縣|金門縣|屏東縣|屏東市|臺東縣|台東縣|臺東市|台東市|花蓮縣|花蓮市|自取|新北|新莊|新店|板橋|淡水',
                    },
                    limit: {
                      kind: 'constant',
                      type: 'Integer',
                      value: 1,
                    },
                    ignoreCase: {
                      kind: 'constant',
                      type: 'Bool',
                      value: false,
                    },
                    as: {
                      kind: 'array',
                      type: 'Array',
                      value: [
                        {
                          kind: 'constant',
                          type: 'String',
                          value: 'addr2',
                        },
                      ],
                    },
                  },
                  outputName: null,
                },
                tableData: null,
                portId: null,
                id: 31130798,
                hash: 'f6bb40efec0119f613dc87a450f22801051a0da6',
                pbemappingartifacts: [],
                targetmappingartifacts: [],
                udfscriptlines: [],
                dependencies: [],
              },
              {
                columnMetadata: {
                  district: {
                    id: '-jjjdlmj',
                  },
                },
                task: {
                  annotations: {
                    outputColumnAnnotations: {
                      district: {
                        type: [
                          'String',
                        ],
                        _likely_types: [
                          [
                            'String',
                          ],
                          [
                            'Integer',
                          ],
                          [
                            'Phone',
                          ],
                          [
                            'SSN',
                          ],
                          [
                            'Map',
                          ],
                        ],
                      },
                    },
                  },
                  kind: 'task',
                  type: 'Derive',
                  parameters: {
                    type: {
                      kind: 'bundle',
                      type: 'Bundle',
                      value: 'single',
                    },
                    value: {
                      annotations: {},
                      kind: 'func',
                      type: 'Case',
                      parameters: {
                        predicateValuePairs: {
                          kind: 'array',
                          type: 'Array',
                          value: [
                            {
                              annotations: {},
                              kind: 'func',
                              type: 'Matches',
                              parameters: {
                                ignore_case: {
                                  kind: 'constant',
                                  type: 'Bool',
                                  value: false,
                                },
                                lhs: {
                                  kind: 'array',
                                  type: 'Array',
                                  value: [
                                    {
                                      kind: 'column',
                                      type: 'Column',
                                      value: 'addr2',
                                      relation: null,
                                    },
                                  ],
                                },
                                rhs: {
                                  kind: 'constant',
                                  type: 'Regexp',
                                  value: '^(台北市|台北|北市)',
                                },
                              },
                            },
                            {
                              kind: 'constant',
                              type: 'String',
                              value: '臺北市',
                            },
                            {
                              annotations: {},
                              kind: 'func',
                              type: 'Matches',
                              parameters: {
                                ignore_case: {
                                  kind: 'constant',
                                  type: 'Bool',
                                  value: false,
                                },
                                lhs: {
                                  kind: 'array',
                                  type: 'Array',
                                  value: [
                                    {
                                      kind: 'column',
                                      type: 'Column',
                                      value: 'addr2',
                                      relation: null,
                                    },
                                  ],
                                },
                                rhs: {
                                  kind: 'constant',
                                  type: 'Regexp',
                                  value: '^(新北|新莊|板橋|新店|淡水)',
                                },
                              },
                            },
                            {
                              kind: 'constant',
                              type: 'String',
                              value: '新北市',
                            },
                            {
                              annotations: {},
                              kind: 'func',
                              type: 'Matches',
                              parameters: {
                                ignore_case: {
                                  kind: 'constant',
                                  type: 'Bool',
                                  value: false,
                                },
                                lhs: {
                                  kind: 'array',
                                  type: 'Array',
                                  value: [
                                    {
                                      kind: 'column',
                                      type: 'Column',
                                      value: 'addr2',
                                      relation: null,
                                    },
                                  ],
                                },
                                rhs: {
                                  kind: 'constant',
                                  type: 'String',
                                  value: '宜蘭',
                                },
                              },
                            },
                            {
                              kind: 'constant',
                              type: 'String',
                              value: '宜蘭縣',
                            },
                            {
                              annotations: {
                                infix: true,
                                parenthetical: false,
                              },
                              kind: 'func',
                              type: 'Equal',
                              parameters: {
                                lhs: {
                                  kind: 'column',
                                  type: 'Column',
                                  value: 'addr2',
                                  relation: null,
                                },
                                rhs: {
                                  kind: 'constant',
                                  type: 'String',
                                  value: '桃園',
                                },
                              },
                            },
                            {
                              kind: 'constant',
                              type: 'String',
                              value: '桃園市',
                            },
                            {
                              annotations: {
                                infix: true,
                                parenthetical: false,
                              },
                              kind: 'func',
                              type: 'Or',
                              parameters: {
                                lhs: {
                                  annotations: {},
                                  kind: 'func',
                                  type: 'Matches',
                                  parameters: {
                                    ignore_case: {
                                      kind: 'constant',
                                      type: 'Bool',
                                      value: false,
                                    },
                                    lhs: {
                                      kind: 'array',
                                      type: 'Array',
                                      value: [
                                        {
                                          kind: 'column',
                                          type: 'Column',
                                          value: 'addr2',
                                          relation: null,
                                        },
                                      ],
                                    },
                                    rhs: {
                                      kind: 'constant',
                                      type: 'Regexp',
                                      value: '^(竹北市|新竹門市)',
                                    },
                                  },
                                },
                                rhs: {
                                  annotations: {},
                                  kind: 'func',
                                  type: 'Matches',
                                  parameters: {
                                    ignore_case: {
                                      kind: 'constant',
                                      type: 'Bool',
                                      value: false,
                                    },
                                    lhs: {
                                      kind: 'array',
                                      type: 'Array',
                                      value: [
                                        {
                                          kind: 'column',
                                          type: 'Column',
                                          value: 'addr2',
                                          relation: null,
                                        },
                                      ],
                                    },
                                    rhs: {
                                      kind: 'constant',
                                      type: 'Regexp',
                                      value: '^新竹$',
                                    },
                                  },
                                },
                              },
                            },
                            {
                              kind: 'constant',
                              type: 'String',
                              value: '新竹縣',
                            },
                            {
                              annotations: {
                                infix: true,
                                parenthetical: false,
                              },
                              kind: 'func',
                              type: 'Equal',
                              parameters: {
                                lhs: {
                                  kind: 'column',
                                  type: 'Column',
                                  value: 'addr2',
                                  relation: null,
                                },
                                rhs: {
                                  kind: 'constant',
                                  type: 'String',
                                  value: '苗栗市',
                                },
                              },
                            },
                            {
                              kind: 'constant',
                              type: 'String',
                              value: '苗栗縣',
                            },
                            {
                              annotations: {
                                infix: true,
                                parenthetical: false,
                              },
                              kind: 'func',
                              type: 'Equal',
                              parameters: {
                                lhs: {
                                  kind: 'column',
                                  type: 'Column',
                                  value: 'addr2',
                                  relation: null,
                                },
                                rhs: {
                                  kind: 'constant',
                                  type: 'String',
                                  value: '台中市',
                                },
                              },
                            },
                            {
                              kind: 'constant',
                              type: 'String',
                              value: '臺中市',
                            },
                            {
                              annotations: {},
                              kind: 'func',
                              type: 'Matches',
                              parameters: {
                                ignore_case: {
                                  kind: 'constant',
                                  type: 'Bool',
                                  value: false,
                                },
                                lhs: {
                                  kind: 'array',
                                  type: 'Array',
                                  value: [
                                    {
                                      kind: 'column',
                                      type: 'Column',
                                      value: 'addr2',
                                      relation: null,
                                    },
                                  ],
                                },
                                rhs: {
                                  kind: 'constant',
                                  type: 'String',
                                  value: '彰化',
                                },
                              },
                            },
                            {
                              kind: 'constant',
                              type: 'String',
                              value: '彰化縣',
                            },
                            {
                              annotations: {
                                infix: true,
                                parenthetical: false,
                              },
                              kind: 'func',
                              type: 'Equal',
                              parameters: {
                                lhs: {
                                  kind: 'column',
                                  type: 'Column',
                                  value: 'addr2',
                                  relation: null,
                                },
                                rhs: {
                                  kind: 'constant',
                                  type: 'String',
                                  value: '南投市',
                                },
                              },
                            },
                            {
                              kind: 'constant',
                              type: 'String',
                              value: '南投縣',
                            },
                            {
                              annotations: {
                                infix: true,
                                parenthetical: false,
                              },
                              kind: 'func',
                              type: 'Equal',
                              parameters: {
                                lhs: {
                                  kind: 'column',
                                  type: 'Column',
                                  value: 'addr2',
                                  relation: null,
                                },
                                rhs: {
                                  kind: 'constant',
                                  type: 'String',
                                  value: '台南市',
                                },
                              },
                            },
                            {
                              kind: 'constant',
                              type: 'String',
                              value: '臺南市',
                            },
                            {
                              annotations: {},
                              kind: 'func',
                              type: 'Matches',
                              parameters: {
                                ignore_case: {
                                  kind: 'constant',
                                  type: 'Bool',
                                  value: false,
                                },
                                lhs: {
                                  kind: 'array',
                                  type: 'Array',
                                  value: [
                                    {
                                      kind: 'column',
                                      type: 'Column',
                                      value: 'addr2',
                                      relation: null,
                                    },
                                  ],
                                },
                                rhs: {
                                  kind: 'constant',
                                  type: 'Regexp',
                                  value: '^高雄$',
                                },
                              },
                            },
                            {
                              kind: 'constant',
                              type: 'String',
                              value: '高雄市',
                            },
                            {
                              annotations: {
                                infix: true,
                                parenthetical: false,
                              },
                              kind: 'func',
                              type: 'Equal',
                              parameters: {
                                lhs: {
                                  kind: 'column',
                                  type: 'Column',
                                  value: 'addr2',
                                  relation: null,
                                },
                                rhs: {
                                  kind: 'constant',
                                  type: 'String',
                                  value: '屏東市',
                                },
                              },
                            },
                            {
                              kind: 'constant',
                              type: 'String',
                              value: '屏東縣',
                            },
                            {
                              annotations: {
                                infix: true,
                                parenthetical: false,
                              },
                              kind: 'func',
                              type: 'Equal',
                              parameters: {
                                lhs: {
                                  kind: 'column',
                                  type: 'Column',
                                  value: 'addr2',
                                  relation: null,
                                },
                                rhs: {
                                  kind: 'constant',
                                  type: 'String',
                                  value: '台東縣',
                                },
                              },
                            },
                            {
                              kind: 'constant',
                              type: 'String',
                              value: '臺東縣',
                            },
                            {
                              annotations: {
                                infix: true,
                                parenthetical: false,
                              },
                              kind: 'func',
                              type: 'Equal',
                              parameters: {
                                lhs: {
                                  kind: 'column',
                                  type: 'Column',
                                  value: 'addr2',
                                  relation: null,
                                },
                                rhs: {
                                  kind: 'constant',
                                  type: 'String',
                                  value: '台東市',
                                },
                              },
                            },
                            {
                              kind: 'constant',
                              type: 'String',
                              value: '臺東縣',
                            },
                            {
                              annotations: {
                                infix: true,
                                parenthetical: false,
                              },
                              kind: 'func',
                              type: 'Equal',
                              parameters: {
                                lhs: {
                                  kind: 'column',
                                  type: 'Column',
                                  value: 'addr2',
                                  relation: null,
                                },
                                rhs: {
                                  kind: 'constant',
                                  type: 'String',
                                  value: '臺東市',
                                },
                              },
                            },
                            {
                              kind: 'constant',
                              type: 'String',
                              value: '臺東縣',
                            },
                            {
                              annotations: {
                                infix: true,
                                parenthetical: false,
                              },
                              kind: 'func',
                              type: 'Equal',
                              parameters: {
                                lhs: {
                                  kind: 'column',
                                  type: 'Column',
                                  value: 'addr2',
                                  relation: null,
                                },
                                rhs: {
                                  kind: 'constant',
                                  type: 'String',
                                  value: '花蓮市',
                                },
                              },
                            },
                            {
                              kind: 'constant',
                              type: 'String',
                              value: '花蓮縣',
                            },
                            {
                              annotations: {
                                infix: true,
                                parenthetical: false,
                              },
                              kind: 'func',
                              type: 'And',
                              parameters: {
                                lhs: {
                                  annotations: {},
                                  kind: 'func',
                                  type: 'Matches',
                                  parameters: {
                                    ignore_case: {
                                      kind: 'constant',
                                      type: 'Bool',
                                      value: false,
                                    },
                                    lhs: {
                                      kind: 'array',
                                      type: 'Array',
                                      value: [
                                        {
                                          kind: 'column',
                                          type: 'Column',
                                          value: 'addr2',
                                          relation: null,
                                        },
                                      ],
                                    },
                                    rhs: {
                                      kind: 'constant',
                                      type: 'Regexp',
                                      value: '自取',
                                    },
                                  },
                                },
                                rhs: {
                                  annotations: {},
                                  kind: 'func',
                                  type: 'Matches',
                                  parameters: {
                                    ignore_case: {
                                      kind: 'constant',
                                      type: 'Bool',
                                      value: false,
                                    },
                                    lhs: {
                                      kind: 'array',
                                      type: 'Array',
                                      value: [
                                        {
                                          kind: 'column',
                                          type: 'Column',
                                          value: 'sale_channel',
                                          relation: null,
                                        },
                                      ],
                                    },
                                    rhs: {
                                      kind: 'constant',
                                      type: 'Regexp',
                                      value: '內湖',
                                    },
                                  },
                                },
                              },
                            },
                            {
                              kind: 'constant',
                              type: 'String',
                              value: '臺北市',
                            },
                            {
                              kind: 'column',
                              type: 'Column',
                              value: 'addr2',
                              relation: null,
                            },
                          ],
                        },
                      },
                    },
                    as: {
                      kind: 'constant',
                      type: 'String',
                      value: 'district',
                    },
                  },
                  outputName: null,
                },
                tableData: null,
                portId: null,
                id: 31130799,
                hash: 'ce818f6ef07599a2af8b64895e3a38d8e545e941',
                pbemappingartifacts: [],
                targetmappingartifacts: [],
                udfscriptlines: [],
                dependencies: [],
              },
              {
                columnMetadata: {
                  region: {
                    id: 'ypm4a1m',
                  },
                },
                task: {
                  annotations: {
                    outputColumnAnnotations: {
                      region: {
                        type: [
                          'String',
                        ],
                        _likely_types: [
                          [
                            'String',
                          ],
                          [
                            'Integer',
                          ],
                          [
                            'Phone',
                          ],
                          [
                            'SSN',
                          ],
                          [
                            'Map',
                          ],
                        ],
                      },
                    },
                  },
                  kind: 'task',
                  type: 'Derive',
                  parameters: {
                    type: {
                      kind: 'bundle',
                      type: 'Bundle',
                      value: 'single',
                    },
                    value: {
                      annotations: {},
                      kind: 'func',
                      type: 'Case',
                      parameters: {
                        predicateValuePairs: {
                          kind: 'array',
                          type: 'Array',
                          value: [
                            {
                              annotations: {},
                              kind: 'func',
                              type: 'Matches',
                              parameters: {
                                ignore_case: {
                                  kind: 'constant',
                                  type: 'Bool',
                                  value: false,
                                },
                                lhs: {
                                  kind: 'array',
                                  type: 'Array',
                                  value: [
                                    {
                                      kind: 'column',
                                      type: 'Column',
                                      value: 'addr2',
                                      relation: null,
                                    },
                                  ],
                                },
                                rhs: {
                                  kind: 'constant',
                                  type: 'Regexp',
                                  value: '臺北市|台北市|台北|北市|新北市|新北|新莊|新店|板橋|基隆市|宜蘭縣|宜蘭|淡水',
                                },
                              },
                            },
                            {
                              kind: 'constant',
                              type: 'String',
                              value: '北部',
                            },
                            {
                              annotations: {},
                              kind: 'func',
                              type: 'Matches',
                              parameters: {
                                ignore_case: {
                                  kind: 'constant',
                                  type: 'Bool',
                                  value: false,
                                },
                                lhs: {
                                  kind: 'array',
                                  type: 'Array',
                                  value: [
                                    {
                                      kind: 'column',
                                      type: 'Column',
                                      value: 'addr2',
                                      relation: null,
                                    },
                                  ],
                                },
                                rhs: {
                                  kind: 'constant',
                                  type: 'Regexp',
                                  value: '桃園市|桃園|新竹市|新竹縣|新竹|竹北市|苗栗縣|苗栗市',
                                },
                              },
                            },
                            {
                              kind: 'constant',
                              type: 'String',
                              value: '中北部',
                            },
                            {
                              annotations: {},
                              kind: 'func',
                              type: 'Matches',
                              parameters: {
                                ignore_case: {
                                  kind: 'constant',
                                  type: 'Bool',
                                  value: false,
                                },
                                lhs: {
                                  kind: 'array',
                                  type: 'Array',
                                  value: [
                                    {
                                      kind: 'column',
                                      type: 'Column',
                                      value: 'addr2',
                                      relation: null,
                                    },
                                  ],
                                },
                                rhs: {
                                  kind: 'constant',
                                  type: 'Regexp',
                                  value: '臺中市|台中市|彰化縣|彰化|南投縣|南投市|雲林縣',
                                },
                              },
                            },
                            {
                              kind: 'constant',
                              type: 'String',
                              value: '中部',
                            },
                            {
                              annotations: {},
                              kind: 'func',
                              type: 'Matches',
                              parameters: {
                                ignore_case: {
                                  kind: 'constant',
                                  type: 'Bool',
                                  value: false,
                                },
                                lhs: {
                                  kind: 'array',
                                  type: 'Array',
                                  value: [
                                    {
                                      kind: 'column',
                                      type: 'Column',
                                      value: 'addr2',
                                      relation: null,
                                    },
                                  ],
                                },
                                rhs: {
                                  kind: 'constant',
                                  type: 'Regexp',
                                  value: '嘉義縣|嘉義市|臺南市|台南市|高雄市|屏東縣|屏東|臺東縣|台東縣|臺東市|台東市',
                                },
                              },
                            },
                            {
                              kind: 'constant',
                              type: 'String',
                              value: '南部',
                            },
                            {
                              annotations: {
                                infix: true,
                                parenthetical: false,
                              },
                              kind: 'func',
                              type: 'Equal',
                              parameters: {
                                lhs: {
                                  kind: 'column',
                                  type: 'Column',
                                  value: 'addr2',
                                  relation: null,
                                },
                                rhs: {
                                  kind: 'constant',
                                  type: 'String',
                                  value: '花蓮縣',
                                },
                              },
                            },
                            {
                              kind: 'constant',
                              type: 'String',
                              value: '北部',
                            },
                            {
                              annotations: {
                                infix: true,
                                parenthetical: false,
                              },
                              kind: 'func',
                              type: 'Equal',
                              parameters: {
                                lhs: {
                                  kind: 'column',
                                  type: 'Column',
                                  value: 'addr2',
                                  relation: null,
                                },
                                rhs: {
                                  kind: 'constant',
                                  type: 'String',
                                  value: '花蓮市',
                                },
                              },
                            },
                            {
                              kind: 'constant',
                              type: 'String',
                              value: '北部',
                            },
                            {
                              annotations: {
                                infix: true,
                                parenthetical: false,
                              },
                              kind: 'func',
                              type: 'Equal',
                              parameters: {
                                lhs: {
                                  kind: 'column',
                                  type: 'Column',
                                  value: 'addr2',
                                  relation: null,
                                },
                                rhs: {
                                  kind: 'constant',
                                  type: 'String',
                                  value: '澎湖縣',
                                },
                              },
                            },
                            {
                              kind: 'constant',
                              type: 'String',
                              value: '北部',
                            },
                            {
                              annotations: {
                                infix: true,
                                parenthetical: false,
                              },
                              kind: 'func',
                              type: 'And',
                              parameters: {
                                lhs: {
                                  annotations: {},
                                  kind: 'func',
                                  type: 'Matches',
                                  parameters: {
                                    ignore_case: {
                                      kind: 'constant',
                                      type: 'Bool',
                                      value: false,
                                    },
                                    lhs: {
                                      kind: 'array',
                                      type: 'Array',
                                      value: [
                                        {
                                          kind: 'column',
                                          type: 'Column',
                                          value: 'addr2',
                                          relation: null,
                                        },
                                      ],
                                    },
                                    rhs: {
                                      kind: 'constant',
                                      type: 'Regexp',
                                      value: '自取',
                                    },
                                  },
                                },
                                rhs: {
                                  annotations: {},
                                  kind: 'func',
                                  type: 'Matches',
                                  parameters: {
                                    ignore_case: {
                                      kind: 'constant',
                                      type: 'Bool',
                                      value: false,
                                    },
                                    lhs: {
                                      kind: 'array',
                                      type: 'Array',
                                      value: [
                                        {
                                          kind: 'column',
                                          type: 'Column',
                                          value: 'sale_channel',
                                          relation: null,
                                        },
                                      ],
                                    },
                                    rhs: {
                                      kind: 'constant',
                                      type: 'Regexp',
                                      value: '內湖',
                                    },
                                  },
                                },
                              },
                            },
                            {
                              kind: 'constant',
                              type: 'String',
                              value: '北部',
                            },
                          ],
                        },
                      },
                    },
                    as: {
                      kind: 'constant',
                      type: 'String',
                      value: 'region',
                    },
                  },
                  outputName: null,
                },
                tableData: null,
                portId: null,
                id: 31130800,
                hash: '266171be4605ae49d45919b56384363bd59895ac',
                pbemappingartifacts: [],
                targetmappingartifacts: [],
                udfscriptlines: [],
                dependencies: [],
              },
              {
                columnMetadata: {
                  region_sort: {
                    id: '-9npacf9',
                  },
                },
                task: {
                  annotations: {
                    outputColumnAnnotations: {
                      region_sort: {
                        type: [
                          'Integer',
                        ],
                        _likely_types: [
                          [
                            'Integer',
                          ],
                          [
                            'Float',
                          ],
                          [
                            'String',
                          ],
                          [
                            'Phone',
                          ],
                          [
                            'SSN',
                          ],
                        ],
                      },
                    },
                  },
                  kind: 'task',
                  type: 'Derive',
                  parameters: {
                    type: {
                      kind: 'bundle',
                      type: 'Bundle',
                      value: 'single',
                    },
                    value: {
                      annotations: {},
                      kind: 'func',
                      type: 'Case',
                      parameters: {
                        predicateValuePairs: {
                          kind: 'array',
                          type: 'Array',
                          value: [
                            {
                              annotations: {
                                infix: true,
                                parenthetical: false,
                              },
                              kind: 'func',
                              type: 'Equal',
                              parameters: {
                                lhs: {
                                  kind: 'column',
                                  type: 'Column',
                                  value: 'region',
                                  relation: null,
                                },
                                rhs: {
                                  kind: 'constant',
                                  type: 'String',
                                  value: '北部',
                                },
                              },
                            },
                            {
                              kind: 'constant',
                              type: 'Integer',
                              value: 10,
                            },
                            {
                              annotations: {
                                infix: true,
                                parenthetical: false,
                              },
                              kind: 'func',
                              type: 'Equal',
                              parameters: {
                                lhs: {
                                  kind: 'column',
                                  type: 'Column',
                                  value: 'region',
                                  relation: null,
                                },
                                rhs: {
                                  kind: 'constant',
                                  type: 'String',
                                  value: '中北部',
                                },
                              },
                            },
                            {
                              kind: 'constant',
                              type: 'Integer',
                              value: 11,
                            },
                            {
                              annotations: {
                                infix: true,
                                parenthetical: false,
                              },
                              kind: 'func',
                              type: 'Equal',
                              parameters: {
                                lhs: {
                                  kind: 'column',
                                  type: 'Column',
                                  value: 'region',
                                  relation: null,
                                },
                                rhs: {
                                  kind: 'constant',
                                  type: 'String',
                                  value: '中部',
                                },
                              },
                            },
                            {
                              kind: 'constant',
                              type: 'Integer',
                              value: 20,
                            },
                            {
                              annotations: {
                                infix: true,
                                parenthetical: false,
                              },
                              kind: 'func',
                              type: 'Equal',
                              parameters: {
                                lhs: {
                                  kind: 'column',
                                  type: 'Column',
                                  value: 'region',
                                  relation: null,
                                },
                                rhs: {
                                  kind: 'constant',
                                  type: 'String',
                                  value: '南部',
                                },
                              },
                            },
                            {
                              kind: 'constant',
                              type: 'Integer',
                              value: 30,
                            },
                            {
                              kind: 'constant',
                              type: 'Integer',
                              value: 99,
                            },
                          ],
                        },
                      },
                    },
                    as: {
                      kind: 'constant',
                      type: 'String',
                      value: 'region_sort',
                    },
                  },
                  outputName: null,
                },
                tableData: null,
                portId: null,
                id: 31130801,
                hash: 'c6297ad31f6c7aea06115f148de116369a19d52b',
                pbemappingartifacts: [],
                targetmappingartifacts: [],
                udfscriptlines: [],
                dependencies: [],
              },
              {
                columnMetadata: {
                  category_group1: {
                    id: 'k3cjnh',
                  },
                },
                task: {
                  annotations: {
                    outputColumnAnnotations: {
                      category_group1: {
                        type: [
                          'String',
                        ],
                        _likely_types: [
                          [
                            'String',
                          ],
                          [
                            'Integer',
                          ],
                          [
                            'Phone',
                          ],
                          [
                            'SSN',
                          ],
                          [
                            'Map',
                          ],
                        ],
                      },
                    },
                  },
                  kind: 'task',
                  type: 'ExtractPatterns',
                  parameters: {
                    col: {
                      kind: 'column',
                      type: 'Column',
                      value: 'category_group',
                      relation: null,
                    },
                    type: {
                      kind: 'bundle',
                      type: 'Bundle',
                      value: 'custom',
                    },
                    on: {
                      kind: 'constant',
                      type: 'Regexp',
                      value: '[^ㆍ]+節',
                    },
                    ignoreCase: {
                      kind: 'constant',
                      type: 'Bool',
                      value: false,
                    },
                    as: {
                      kind: 'array',
                      type: 'Array',
                      value: [
                        {
                          kind: 'constant',
                          type: 'String',
                          value: 'category_group1',
                        },
                      ],
                    },
                  },
                  outputName: null,
                },
                tableData: null,
                portId: null,
                id: 31130802,
                hash: '5e18e1dd1bdae9d4f3ae21e586274bcce9854ba0',
                pbemappingartifacts: [],
                targetmappingartifacts: [],
                udfscriptlines: [],
                dependencies: [],
              },
              {
                columnMetadata: {},
                task: {
                  annotations: {
                    outputColumnAnnotations: {},
                  },
                  kind: 'task',
                  type: 'Rename',
                  parameters: {
                    type: {
                      kind: 'bundle',
                      type: 'Bundle',
                      value: 'manual',
                    },
                    mapping: {
                      kind: 'matrix',
                      type: 'Matrix',
                      value: [
                        {
                          kind: 'array',
                          type: 'Array',
                          value: [
                            {
                              kind: 'column',
                              type: 'Column',
                              value: 'category_group1',
                              relation: null,
                            },
                            {
                              kind: 'constant',
                              type: 'String',
                              value: 'category_campaign',
                            },
                          ],
                        },
                      ],
                    },
                  },
                  outputName: null,
                },
                tableData: null,
                portId: null,
                id: 31130803,
                hash: '5506d85e21adbeaa768f486a626aa2b18d507ee9',
                pbemappingartifacts: [],
                targetmappingartifacts: [],
                udfscriptlines: [],
                dependencies: [],
              },
              {
                columnMetadata: {
                  category_group1: {
                    id: 'k1idtuq',
                  },
                },
                task: {
                  annotations: {
                    outputColumnAnnotations: {
                      category_group1: {
                        type: [
                          'String',
                        ],
                        _likely_types: [
                          [
                            'String',
                          ],
                          [
                            'Integer',
                          ],
                          [
                            'Bool',
                          ],
                          [
                            'Float',
                          ],
                          [
                            'Phone',
                          ],
                        ],
                      },
                    },
                  },
                  kind: 'task',
                  type: 'ExtractPatterns',
                  parameters: {
                    col: {
                      kind: 'column',
                      type: 'Column',
                      value: 'category_group',
                      relation: null,
                    },
                    type: {
                      kind: 'bundle',
                      type: 'Bundle',
                      value: 'custom',
                    },
                    on: {
                      kind: 'constant',
                      type: 'Regexp',
                      value: '陶板|布料|皮革|塑料|大理石',
                    },
                    ignoreCase: {
                      kind: 'constant',
                      type: 'Bool',
                      value: false,
                    },
                    as: {
                      kind: 'array',
                      type: 'Array',
                      value: [
                        {
                          kind: 'constant',
                          type: 'String',
                          value: 'category_group1',
                        },
                      ],
                    },
                  },
                  outputName: null,
                },
                tableData: null,
                portId: null,
                id: 31130804,
                hash: 'a1ddd2a65745e1007a52e32b72201d973c00f899',
                pbemappingartifacts: [],
                targetmappingartifacts: [],
                udfscriptlines: [],
                dependencies: [],
              },
              {
                columnMetadata: {},
                task: {
                  annotations: {},
                  kind: 'task',
                  type: 'Rename',
                  parameters: {
                    type: {
                      kind: 'bundle',
                      type: 'Bundle',
                      value: 'manual',
                    },
                    mapping: {
                      kind: 'matrix',
                      type: 'Matrix',
                      value: [
                        {
                          kind: 'array',
                          type: 'Array',
                          value: [
                            {
                              kind: 'column',
                              type: 'Column',
                              value: 'category_group1',
                              relation: null,
                            },
                            {
                              kind: 'constant',
                              type: 'String',
                              value: 'category_material',
                            },
                          ],
                        },
                      ],
                    },
                  },
                  outputName: null,
                },
                tableData: null,
                portId: null,
                id: 31130805,
                hash: 'da992a4f389e07952c22ed787f26c903b5562307',
                pbemappingartifacts: [],
                targetmappingartifacts: [],
                udfscriptlines: [],
                dependencies: [],
              },
              {
                columnMetadata: {
                  category_group1: {
                    id: '-22gyzt3',
                  },
                },
                task: {
                  annotations: {
                    outputColumnAnnotations: {
                      category_group1: {
                        type: [
                          'String',
                        ],
                        _likely_types: [
                          [
                            'String',
                          ],
                          [
                            'Integer',
                          ],
                          [
                            'Phone',
                          ],
                          [
                            'SSN',
                          ],
                          [
                            'Map',
                          ],
                        ],
                      },
                    },
                  },
                  kind: 'task',
                  type: 'ExtractPatterns',
                  parameters: {
                    col: {
                      kind: 'column',
                      type: 'Column',
                      value: 'category_group',
                      relation: null,
                    },
                    type: {
                      kind: 'bundle',
                      type: 'Bundle',
                      value: 'custom',
                    },
                    on: {
                      kind: 'constant',
                      type: 'Regexp',
                      value: 'AT|CA|CC|CO|DG|MN|SD|ST|GB',
                    },
                    ignoreCase: {
                      kind: 'constant',
                      type: 'Bool',
                      value: false,
                    },
                    as: {
                      kind: 'array',
                      type: 'Array',
                      value: [
                        {
                          kind: 'constant',
                          type: 'String',
                          value: 'category_group1',
                        },
                      ],
                    },
                  },
                  outputName: null,
                },
                tableData: null,
                portId: null,
                id: 31130806,
                hash: '9f4b09ce6c4eaf4e97bc287400102d971180d53b',
                pbemappingartifacts: [],
                targetmappingartifacts: [],
                udfscriptlines: [],
                dependencies: [],
              },
              {
                columnMetadata: {},
                task: {
                  annotations: {},
                  kind: 'task',
                  type: 'Rename',
                  parameters: {
                    type: {
                      kind: 'bundle',
                      type: 'Bundle',
                      value: 'manual',
                    },
                    mapping: {
                      kind: 'matrix',
                      type: 'Matrix',
                      value: [
                        {
                          kind: 'array',
                          type: 'Array',
                          value: [
                            {
                              kind: 'column',
                              type: 'Column',
                              value: 'category_group1',
                              relation: null,
                            },
                            {
                              kind: 'constant',
                              type: 'String',
                              value: 'category_factory',
                            },
                          ],
                        },
                      ],
                    },
                  },
                  outputName: null,
                },
                tableData: null,
                portId: null,
                id: 31130807,
                hash: '54bdfbd885d72c4337854ee5e4ba0e5b13a7e1bc',
                pbemappingartifacts: [],
                targetmappingartifacts: [],
                udfscriptlines: [],
                dependencies: [],
              },
              {
                columnMetadata: {
                  category_group1: {
                    id: '-pgxrub',
                  },
                },
                task: {
                  annotations: {
                    outputColumnAnnotations: {
                      category_group1: {
                        type: [
                          'String',
                        ],
                        _likely_types: [
                          [
                            'String',
                          ],
                          [
                            'Integer',
                          ],
                          [
                            'Phone',
                          ],
                          [
                            'SSN',
                          ],
                          [
                            'Map',
                          ],
                        ],
                      },
                    },
                  },
                  kind: 'task',
                  type: 'ExtractPatterns',
                  parameters: {
                    col: {
                      kind: 'column',
                      type: 'Column',
                      value: 'category_group',
                      relation: null,
                    },
                    type: {
                      kind: 'bundle',
                      type: 'Bundle',
                      value: 'custom',
                    },
                    on: {
                      kind: 'constant',
                      type: 'Regexp',
                      value: '世紀中現代風|美式鄉村風格|法式鄉村風格|工業風格|美式|法式|北歐',
                    },
                    ignoreCase: {
                      kind: 'constant',
                      type: 'Bool',
                      value: false,
                    },
                    as: {
                      kind: 'array',
                      type: 'Array',
                      value: [
                        {
                          kind: 'constant',
                          type: 'String',
                          value: 'category_group1',
                        },
                      ],
                    },
                  },
                  outputName: null,
                },
                tableData: null,
                portId: null,
                id: 31130808,
                hash: '735eb32bf8fac6eeb2ca4d36220e5d70c161deef',
                pbemappingartifacts: [],
                targetmappingartifacts: [],
                udfscriptlines: [],
                dependencies: [],
              },
              {
                columnMetadata: {},
                task: {
                  annotations: {},
                  kind: 'task',
                  type: 'Rename',
                  parameters: {
                    type: {
                      kind: 'bundle',
                      type: 'Bundle',
                      value: 'manual',
                    },
                    mapping: {
                      kind: 'matrix',
                      type: 'Matrix',
                      value: [
                        {
                          kind: 'array',
                          type: 'Array',
                          value: [
                            {
                              kind: 'column',
                              type: 'Column',
                              value: 'category_group1',
                              relation: null,
                            },
                            {
                              kind: 'constant',
                              type: 'String',
                              value: 'category_style_tmp',
                            },
                          ],
                        },
                      ],
                    },
                  },
                  outputName: null,
                },
                tableData: null,
                portId: null,
                id: 31130809,
                hash: '658658e6659af4ad6da59de54c947350d808f3e1',
                pbemappingartifacts: [],
                targetmappingartifacts: [],
                udfscriptlines: [],
                dependencies: [],
              },
              {
                columnMetadata: {
                  category_style: {
                    id: '4ocdzax',
                  },
                },
                task: {
                  annotations: {
                    outputColumnAnnotations: {
                      category_style: {
                        type: [
                          'String',
                        ],
                        _likely_types: [
                          [
                            'String',
                          ],
                          [
                            'Integer',
                          ],
                          [
                            'Phone',
                          ],
                          [
                            'SSN',
                          ],
                          [
                            'Map',
                          ],
                        ],
                      },
                    },
                  },
                  kind: 'task',
                  type: 'Derive',
                  parameters: {
                    type: {
                      kind: 'bundle',
                      type: 'Bundle',
                      value: 'single',
                    },
                    value: {
                      annotations: {},
                      kind: 'func',
                      type: 'Case',
                      parameters: {
                        predicateValuePairs: {
                          kind: 'array',
                          type: 'Array',
                          value: [
                            {
                              annotations: {},
                              kind: 'func',
                              type: 'Matches',
                              parameters: {
                                ignore_case: {
                                  kind: 'constant',
                                  type: 'Bool',
                                  value: false,
                                },
                                lhs: {
                                  kind: 'array',
                                  type: 'Array',
                                  value: [
                                    {
                                      kind: 'column',
                                      type: 'Column',
                                      value: 'category_factory',
                                      relation: null,
                                    },
                                  ],
                                },
                                rhs: {
                                  kind: 'constant',
                                  type: 'Regexp',
                                  value: 'ST',
                                },
                              },
                            },
                            {
                              kind: 'constant',
                              type: 'String',
                              value: 'MCM',
                            },
                            {
                              annotations: {},
                              kind: 'func',
                              type: 'Not',
                              parameters: {
                                operand: {
                                  annotations: {},
                                  kind: 'func',
                                  type: 'IsNull',
                                  parameters: {
                                    col: {
                                      kind: 'column',
                                      type: 'Column',
                                      value: 'category_style_tmp',
                                      relation: null,
                                    },
                                  },
                                },
                              },
                            },
                            {
                              kind: 'column',
                              type: 'Column',
                              value: 'category_style_tmp',
                              relation: null,
                            },
                            {
                              annotations: {},
                              kind: 'func',
                              type: 'Null',
                              parameters: {},
                            },
                          ],
                        },
                      },
                    },
                    as: {
                      kind: 'constant',
                      type: 'String',
                      value: 'category_style',
                    },
                  },
                  outputName: null,
                },
                tableData: null,
                portId: null,
                id: 31130810,
                hash: '89f023a8ad43748a6f358378cd9c3de6b81f61e6',
                pbemappingartifacts: [],
                targetmappingartifacts: [],
                udfscriptlines: [],
                dependencies: [],
              },
              {
                columnMetadata: {
                  category_group1: {
                    id: 'cbcka0a',
                  },
                },
                task: {
                  annotations: {
                    outputColumnAnnotations: {
                      category_group1: {
                        type: [
                          'String',
                        ],
                        _likely_types: [
                          [
                            'String',
                          ],
                          [
                            'Integer',
                          ],
                          [
                            'Phone',
                          ],
                          [
                            'SSN',
                          ],
                          [
                            'Map',
                          ],
                        ],
                      },
                    },
                  },
                  kind: 'task',
                  type: 'ExtractPatterns',
                  parameters: {
                    col: {
                      kind: 'column',
                      type: 'Column',
                      value: 'category_group',
                      relation: null,
                    },
                    type: {
                      kind: 'bundle',
                      type: 'Bundle',
                      value: 'custom',
                    },
                    on: {
                      kind: 'constant',
                      type: 'Regexp',
                      value: '沙發\\/主人椅|腳凳|餐椅|板凳|吧椅|茶\\(邊\\)几|書桌|櫃架|床架|餐桌|寢具|家飾|燈飾|配件|鄉村風布套|辦公椅',
                    },
                    ignoreCase: {
                      kind: 'constant',
                      type: 'Bool',
                      value: false,
                    },
                    as: {
                      kind: 'array',
                      type: 'Array',
                      value: [
                        {
                          kind: 'constant',
                          type: 'String',
                          value: 'category_group1',
                        },
                      ],
                    },
                  },
                  outputName: null,
                },
                tableData: null,
                portId: null,
                id: 31130811,
                hash: 'ae8870456b7ef54f941613d96f2829e1b7b358b6',
                pbemappingartifacts: [],
                targetmappingartifacts: [],
                udfscriptlines: [],
                dependencies: [],
              },
              {
                columnMetadata: {},
                task: {
                  annotations: {},
                  kind: 'task',
                  type: 'Rename',
                  parameters: {
                    type: {
                      kind: 'bundle',
                      type: 'Bundle',
                      value: 'manual',
                    },
                    mapping: {
                      kind: 'matrix',
                      type: 'Matrix',
                      value: [
                        {
                          kind: 'array',
                          type: 'Array',
                          value: [
                            {
                              kind: 'column',
                              type: 'Column',
                              value: 'category_group1',
                              relation: null,
                            },
                            {
                              kind: 'constant',
                              type: 'String',
                              value: 'category_fun_tmp',
                            },
                          ],
                        },
                      ],
                    },
                  },
                  outputName: null,
                },
                tableData: null,
                portId: null,
                id: 31130812,
                hash: '5fd82ff8809007141a4de9ec18b379a45825145b',
                pbemappingartifacts: [],
                targetmappingartifacts: [],
                udfscriptlines: [],
                dependencies: [],
              },
              {
                columnMetadata: {
                  category_fun: {
                    id: '5cn5bib',
                  },
                },
                task: {
                  annotations: {
                    outputColumnAnnotations: {
                      category_fun: {
                        type: [
                          'String',
                        ],
                        _likely_types: [
                          [
                            'String',
                          ],
                          [
                            'Integer',
                          ],
                          [
                            'Phone',
                          ],
                          [
                            'SSN',
                          ],
                          [
                            'Map',
                          ],
                        ],
                      },
                    },
                  },
                  kind: 'task',
                  type: 'Derive',
                  parameters: {
                    type: {
                      kind: 'bundle',
                      type: 'Bundle',
                      value: 'single',
                    },
                    value: {
                      annotations: {},
                      kind: 'func',
                      type: 'Case',
                      parameters: {
                        predicateValuePairs: {
                          kind: 'array',
                          type: 'Array',
                          value: [
                            {
                              annotations: {
                                infix: true,
                                parenthetical: false,
                              },
                              kind: 'func',
                              type: 'And',
                              parameters: {
                                lhs: {
                                  annotations: {},
                                  kind: 'func',
                                  type: 'Matches',
                                  parameters: {
                                    ignore_case: {
                                      kind: 'constant',
                                      type: 'Bool',
                                      value: false,
                                    },
                                    lhs: {
                                      kind: 'array',
                                      type: 'Array',
                                      value: [
                                        {
                                          kind: 'column',
                                          type: 'Column',
                                          value: 'category_fun_tmp',
                                          relation: null,
                                        },
                                      ],
                                    },
                                    rhs: {
                                      kind: 'constant',
                                      type: 'String',
                                      value: '床架',
                                    },
                                  },
                                },
                                rhs: {
                                  annotations: {
                                    infix: true,
                                    parenthetical: false,
                                  },
                                  kind: 'func',
                                  type: 'And',
                                  parameters: {
                                    lhs: {
                                      annotations: {},
                                      kind: 'func',
                                      type: 'Not',
                                      parameters: {
                                        operand: {
                                          annotations: {},
                                          kind: 'func',
                                          type: 'Matches',
                                          parameters: {
                                            ignore_case: {
                                              kind: 'constant',
                                              type: 'Bool',
                                              value: false,
                                            },
                                            lhs: {
                                              kind: 'array',
                                              type: 'Array',
                                              value: [
                                                {
                                                  kind: 'column',
                                                  type: 'Column',
                                                  value: 'category_style',
                                                  relation: null,
                                                },
                                              ],
                                            },
                                            rhs: {
                                              kind: 'constant',
                                              type: 'String',
                                              value: 'MCM',
                                            },
                                          },
                                        },
                                      },
                                    },
                                    rhs: {
                                      annotations: {},
                                      kind: 'func',
                                      type: 'Not',
                                      parameters: {
                                        operand: {
                                          annotations: {},
                                          kind: 'func',
                                          type: 'Matches',
                                          parameters: {
                                            ignore_case: {
                                              kind: 'constant',
                                              type: 'Bool',
                                              value: false,
                                            },
                                            lhs: {
                                              kind: 'array',
                                              type: 'Array',
                                              value: [
                                                {
                                                  kind: 'column',
                                                  type: 'Column',
                                                  value: 'category_factory',
                                                  relation: null,
                                                },
                                              ],
                                            },
                                            rhs: {
                                              kind: 'constant',
                                              type: 'String',
                                              value: 'CC',
                                            },
                                          },
                                        },
                                      },
                                    },
                                  },
                                },
                              },
                            },
                            {
                              kind: 'constant',
                              type: 'String',
                              value: '床架',
                            },
                            {
                              annotations: {
                                infix: true,
                                parenthetical: false,
                              },
                              kind: 'func',
                              type: 'And',
                              parameters: {
                                lhs: {
                                  annotations: {},
                                  kind: 'func',
                                  type: 'Matches',
                                  parameters: {
                                    ignore_case: {
                                      kind: 'constant',
                                      type: 'Bool',
                                      value: false,
                                    },
                                    lhs: {
                                      kind: 'array',
                                      type: 'Array',
                                      value: [
                                        {
                                          kind: 'column',
                                          type: 'Column',
                                          value: 'category_fun_tmp',
                                          relation: null,
                                        },
                                      ],
                                    },
                                    rhs: {
                                      kind: 'constant',
                                      type: 'String',
                                      value: '櫃架',
                                    },
                                  },
                                },
                                rhs: {
                                  annotations: {
                                    infix: true,
                                    parenthetical: false,
                                  },
                                  kind: 'func',
                                  type: 'And',
                                  parameters: {
                                    lhs: {
                                      annotations: {},
                                      kind: 'func',
                                      type: 'Not',
                                      parameters: {
                                        operand: {
                                          annotations: {},
                                          kind: 'func',
                                          type: 'Matches',
                                          parameters: {
                                            ignore_case: {
                                              kind: 'constant',
                                              type: 'Bool',
                                              value: false,
                                            },
                                            lhs: {
                                              kind: 'array',
                                              type: 'Array',
                                              value: [
                                                {
                                                  kind: 'column',
                                                  type: 'Column',
                                                  value: 'category_style',
                                                  relation: null,
                                                },
                                              ],
                                            },
                                            rhs: {
                                              kind: 'constant',
                                              type: 'Regexp',
                                              value: 'MCM',
                                            },
                                          },
                                        },
                                      },
                                    },
                                    rhs: {
                                      annotations: {},
                                      kind: 'func',
                                      type: 'Not',
                                      parameters: {
                                        operand: {
                                          annotations: {},
                                          kind: 'func',
                                          type: 'Matches',
                                          parameters: {
                                            ignore_case: {
                                              kind: 'constant',
                                              type: 'Bool',
                                              value: false,
                                            },
                                            lhs: {
                                              kind: 'array',
                                              type: 'Array',
                                              value: [
                                                {
                                                  kind: 'column',
                                                  type: 'Column',
                                                  value: 'category_factory',
                                                  relation: null,
                                                },
                                              ],
                                            },
                                            rhs: {
                                              kind: 'constant',
                                              type: 'String',
                                              value: 'CC',
                                            },
                                          },
                                        },
                                      },
                                    },
                                  },
                                },
                              },
                            },
                            {
                              kind: 'constant',
                              type: 'String',
                              value: '櫃架',
                            },
                            {
                              annotations: {},
                              kind: 'func',
                              type: 'Not',
                              parameters: {
                                operand: {
                                  annotations: {},
                                  kind: 'func',
                                  type: 'Matches',
                                  parameters: {
                                    ignore_case: {
                                      kind: 'constant',
                                      type: 'Bool',
                                      value: false,
                                    },
                                    lhs: {
                                      kind: 'array',
                                      type: 'Array',
                                      value: [
                                        {
                                          kind: 'column',
                                          type: 'Column',
                                          value: 'category_fun_tmp',
                                          relation: null,
                                        },
                                      ],
                                    },
                                    rhs: {
                                      kind: 'constant',
                                      type: 'Regexp',
                                      value: '床架|櫃架',
                                    },
                                  },
                                },
                              },
                            },
                            {
                              kind: 'column',
                              type: 'Column',
                              value: 'category_fun_tmp',
                              relation: null,
                            },
                          ],
                        },
                      },
                    },
                    as: {
                      kind: 'constant',
                      type: 'String',
                      value: 'category_fun',
                    },
                  },
                  outputName: null,
                },
                tableData: null,
                portId: null,
                id: 31130813,
                hash: '26185d5b12cdd1935c46e2da2ad6227a3f5b7a70',
                pbemappingartifacts: [],
                targetmappingartifacts: [],
                udfscriptlines: [],
                dependencies: [],
              },
              {
                columnMetadata: {
                  category_mat: {
                    id: '-1ts1vnp',
                  },
                },
                task: {
                  annotations: {
                    outputColumnAnnotations: {
                      category_mat: {
                        type: [
                          'String',
                        ],
                        _likely_types: [
                          [
                            'String',
                          ],
                          [
                            'Integer',
                          ],
                          [
                            'Phone',
                          ],
                          [
                            'SSN',
                          ],
                          [
                            'Map',
                          ],
                        ],
                      },
                    },
                  },
                  kind: 'task',
                  type: 'Derive',
                  parameters: {
                    type: {
                      kind: 'bundle',
                      type: 'Bundle',
                      value: 'single',
                    },
                    value: {
                      annotations: {},
                      kind: 'func',
                      type: 'Case',
                      parameters: {
                        predicateValuePairs: {
                          kind: 'array',
                          type: 'Array',
                          value: [
                            {
                              annotations: {},
                              kind: 'func',
                              type: 'Matches',
                              parameters: {
                                ignore_case: {
                                  kind: 'constant',
                                  type: 'Bool',
                                  value: false,
                                },
                                lhs: {
                                  kind: 'array',
                                  type: 'Array',
                                  value: [
                                    {
                                      kind: 'column',
                                      type: 'Column',
                                      value: 'category_group',
                                      relation: null,
                                    },
                                  ],
                                },
                                rhs: {
                                  kind: 'constant',
                                  type: 'Regexp',
                                  value: '棉被',
                                },
                              },
                            },
                            {
                              kind: 'constant',
                              type: 'String',
                              value: '棉被',
                            },
                            {
                              annotations: {},
                              kind: 'func',
                              type: 'Matches',
                              parameters: {
                                ignore_case: {
                                  kind: 'constant',
                                  type: 'Bool',
                                  value: false,
                                },
                                lhs: {
                                  kind: 'array',
                                  type: 'Array',
                                  value: [
                                    {
                                      kind: 'column',
                                      type: 'Column',
                                      value: 'category_group',
                                      relation: null,
                                    },
                                  ],
                                },
                                rhs: {
                                  kind: 'constant',
                                  type: 'Regexp',
                                  value: '薄墊',
                                },
                              },
                            },
                            {
                              kind: 'constant',
                              type: 'String',
                              value: '薄墊',
                            },
                            {
                              annotations: {},
                              kind: 'func',
                              type: 'Matches',
                              parameters: {
                                ignore_case: {
                                  kind: 'constant',
                                  type: 'Bool',
                                  value: false,
                                },
                                lhs: {
                                  kind: 'array',
                                  type: 'Array',
                                  value: [
                                    {
                                      kind: 'column',
                                      type: 'Column',
                                      value: 'category_group',
                                      relation: null,
                                    },
                                  ],
                                },
                                rhs: {
                                  kind: 'constant',
                                  type: 'Regexp',
                                  value: '枕頭|枕套',
                                },
                              },
                            },
                            {
                              kind: 'constant',
                              type: 'String',
                              value: '枕頭',
                            },
                            {
                              annotations: {},
                              kind: 'func',
                              type: 'Matches',
                              parameters: {
                                ignore_case: {
                                  kind: 'constant',
                                  type: 'Bool',
                                  value: false,
                                },
                                lhs: {
                                  kind: 'array',
                                  type: 'Array',
                                  value: [
                                    {
                                      kind: 'column',
                                      type: 'Column',
                                      value: 'category_group',
                                      relation: null,
                                    },
                                  ],
                                },
                                rhs: {
                                  kind: 'constant',
                                  type: 'Regexp',
                                  value: '床墊|床套|保潔墊|床板',
                                },
                              },
                            },
                            {
                              kind: 'constant',
                              type: 'String',
                              value: '床墊',
                            },
                            {
                              annotations: {},
                              kind: 'func',
                              type: 'Null',
                              parameters: {},
                            },
                          ],
                        },
                      },
                    },
                    as: {
                      kind: 'constant',
                      type: 'String',
                      value: 'category_mat',
                    },
                  },
                  outputName: null,
                },
                tableData: null,
                portId: null,
                id: 31130814,
                hash: 'd65835e7785a6f1520d4360af543b9af7c8b8d61',
                pbemappingartifacts: [],
                targetmappingartifacts: [],
                udfscriptlines: [],
                dependencies: [],
              },
              {
                columnMetadata: {
                  category_region_style: {
                    id: '-16h1ykr',
                  },
                },
                task: {
                  annotations: {
                    outputColumnAnnotations: {
                      category_region_style: {
                        type: [
                          'String',
                        ],
                        _likely_types: [
                          [
                            'String',
                          ],
                          [
                            'Integer',
                          ],
                          [
                            'Phone',
                          ],
                          [
                            'SSN',
                          ],
                          [
                            'Map',
                          ],
                        ],
                      },
                    },
                  },
                  kind: 'task',
                  type: 'Derive',
                  parameters: {
                    type: {
                      kind: 'bundle',
                      type: 'Bundle',
                      value: 'single',
                    },
                    value: {
                      annotations: {},
                      kind: 'func',
                      type: 'Case',
                      parameters: {
                        predicateValuePairs: {
                          kind: 'array',
                          type: 'Array',
                          value: [
                            {
                              annotations: {
                                infix: true,
                                parenthetical: false,
                              },
                              kind: 'func',
                              type: 'And',
                              parameters: {
                                lhs: {
                                  annotations: {
                                    infix: true,
                                    parenthetical: true,
                                  },
                                  kind: 'func',
                                  type: 'Or',
                                  parameters: {
                                    lhs: {
                                      annotations: {},
                                      kind: 'func',
                                      type: 'Matches',
                                      parameters: {
                                        ignore_case: {
                                          kind: 'constant',
                                          type: 'Bool',
                                          value: false,
                                        },
                                        lhs: {
                                          kind: 'array',
                                          type: 'Array',
                                          value: [
                                            {
                                              kind: 'column',
                                              type: 'Column',
                                              value: 'category_factory',
                                              relation: null,
                                            },
                                          ],
                                        },
                                        rhs: {
                                          kind: 'constant',
                                          type: 'String',
                                          value: 'SD',
                                        },
                                      },
                                    },
                                    rhs: {
                                      annotations: {
                                        infix: true,
                                        parenthetical: true,
                                      },
                                      kind: 'func',
                                      type: 'And',
                                      parameters: {
                                        lhs: {
                                          annotations: {},
                                          kind: 'func',
                                          type: 'Matches',
                                          parameters: {
                                            ignore_case: {
                                              kind: 'constant',
                                              type: 'Bool',
                                              value: false,
                                            },
                                            lhs: {
                                              kind: 'array',
                                              type: 'Array',
                                              value: [
                                                {
                                                  kind: 'column',
                                                  type: 'Column',
                                                  value: 'category_factory',
                                                  relation: null,
                                                },
                                              ],
                                            },
                                            rhs: {
                                              kind: 'constant',
                                              type: 'String',
                                              value: 'CA',
                                            },
                                          },
                                        },
                                        rhs: {
                                          annotations: {},
                                          kind: 'func',
                                          type: 'Matches',
                                          parameters: {
                                            ignore_case: {
                                              kind: 'constant',
                                              type: 'Bool',
                                              value: false,
                                            },
                                            lhs: {
                                              kind: 'array',
                                              type: 'Array',
                                              value: [
                                                {
                                                  kind: 'column',
                                                  type: 'Column',
                                                  value: 'category_material',
                                                  relation: null,
                                                },
                                              ],
                                            },
                                            rhs: {
                                              kind: 'constant',
                                              type: 'String',
                                              value: '布料',
                                            },
                                          },
                                        },
                                      },
                                    },
                                  },
                                },
                                rhs: {
                                  annotations: {},
                                  kind: 'func',
                                  type: 'Not',
                                  parameters: {
                                    operand: {
                                      annotations: {},
                                      kind: 'func',
                                      type: 'Matches',
                                      parameters: {
                                        ignore_case: {
                                          kind: 'constant',
                                          type: 'Bool',
                                          value: false,
                                        },
                                        lhs: {
                                          kind: 'array',
                                          type: 'Array',
                                          value: [
                                            {
                                              kind: 'column',
                                              type: 'Column',
                                              value: 'category_fun',
                                              relation: null,
                                            },
                                          ],
                                        },
                                        rhs: {
                                          kind: 'constant',
                                          type: 'Regexp',
                                          value: '餐椅|餐桌|板凳|吧椅|茶\\(邊\\)几',
                                        },
                                      },
                                    },
                                  },
                                },
                              },
                            },
                            {
                              kind: 'constant',
                              type: 'String',
                              value: '北歐風沙發',
                            },
                            {
                              annotations: {},
                              kind: 'func',
                              type: 'Matches',
                              parameters: {
                                ignore_case: {
                                  kind: 'constant',
                                  type: 'Bool',
                                  value: false,
                                },
                                lhs: {
                                  kind: 'array',
                                  type: 'Array',
                                  value: [
                                    {
                                      kind: 'column',
                                      type: 'Column',
                                      value: 'category_factory',
                                      relation: null,
                                    },
                                  ],
                                },
                                rhs: {
                                  kind: 'constant',
                                  type: 'Regexp',
                                  value: 'MN',
                                },
                              },
                            },
                            {
                              kind: 'constant',
                              type: 'String',
                              value: '美式沙發',
                            },
                            {
                              annotations: {},
                              kind: 'func',
                              type: 'Matches',
                              parameters: {
                                ignore_case: {
                                  kind: 'constant',
                                  type: 'Bool',
                                  value: false,
                                },
                                lhs: {
                                  kind: 'array',
                                  type: 'Array',
                                  value: [
                                    {
                                      kind: 'column',
                                      type: 'Column',
                                      value: 'category_factory',
                                      relation: null,
                                    },
                                  ],
                                },
                                rhs: {
                                  kind: 'constant',
                                  type: 'Regexp',
                                  value: 'CC',
                                },
                              },
                            },
                            {
                              kind: 'constant',
                              type: 'String',
                              value: '法式鄉村',
                            },
                            {
                              annotations: {
                                infix: true,
                                parenthetical: false,
                              },
                              kind: 'func',
                              type: 'And',
                              parameters: {
                                lhs: {
                                  annotations: {},
                                  kind: 'func',
                                  type: 'Matches',
                                  parameters: {
                                    ignore_case: {
                                      kind: 'constant',
                                      type: 'Bool',
                                      value: false,
                                    },
                                    lhs: {
                                      kind: 'array',
                                      type: 'Array',
                                      value: [
                                        {
                                          kind: 'column',
                                          type: 'Column',
                                          value: 'category_fun',
                                          relation: null,
                                        },
                                      ],
                                    },
                                    rhs: {
                                      kind: 'constant',
                                      type: 'Regexp',
                                      value: '辦公椅|家飾|書桌|茶\\(邊\\)几',
                                    },
                                  },
                                },
                                rhs: {
                                  annotations: {
                                    infix: true,
                                    parenthetical: false,
                                  },
                                  kind: 'func',
                                  type: 'And',
                                  parameters: {
                                    lhs: {
                                      annotations: {},
                                      kind: 'func',
                                      type: 'Not',
                                      parameters: {
                                        operand: {
                                          annotations: {},
                                          kind: 'func',
                                          type: 'Matches',
                                          parameters: {
                                            ignore_case: {
                                              kind: 'constant',
                                              type: 'Bool',
                                              value: false,
                                            },
                                            lhs: {
                                              kind: 'array',
                                              type: 'Array',
                                              value: [
                                                {
                                                  kind: 'column',
                                                  type: 'Column',
                                                  value: 'category_style',
                                                  relation: null,
                                                },
                                              ],
                                            },
                                            rhs: {
                                              kind: 'constant',
                                              type: 'String',
                                              value: 'MCM',
                                            },
                                          },
                                        },
                                      },
                                    },
                                    rhs: {
                                      annotations: {
                                        infix: true,
                                        parenthetical: false,
                                      },
                                      kind: 'func',
                                      type: 'And',
                                      parameters: {
                                        lhs: {
                                          annotations: {},
                                          kind: 'func',
                                          type: 'Not',
                                          parameters: {
                                            operand: {
                                              annotations: {},
                                              kind: 'func',
                                              type: 'Matches',
                                              parameters: {
                                                ignore_case: {
                                                  kind: 'constant',
                                                  type: 'Bool',
                                                  value: false,
                                                },
                                                lhs: {
                                                  kind: 'array',
                                                  type: 'Array',
                                                  value: [
                                                    {
                                                      kind: 'column',
                                                      type: 'Column',
                                                      value: 'category_factory',
                                                      relation: null,
                                                    },
                                                  ],
                                                },
                                                rhs: {
                                                  kind: 'constant',
                                                  type: 'String',
                                                  value: 'CC',
                                                },
                                              },
                                            },
                                          },
                                        },
                                        rhs: {
                                          annotations: {},
                                          kind: 'func',
                                          type: 'Not',
                                          parameters: {
                                            operand: {
                                              annotations: {},
                                              kind: 'func',
                                              type: 'Matches',
                                              parameters: {
                                                ignore_case: {
                                                  kind: 'constant',
                                                  type: 'Bool',
                                                  value: false,
                                                },
                                                lhs: {
                                                  kind: 'array',
                                                  type: 'Array',
                                                  value: [
                                                    {
                                                      kind: 'column',
                                                      type: 'Column',
                                                      value: 'category_material',
                                                      relation: null,
                                                    },
                                                  ],
                                                },
                                                rhs: {
                                                  kind: 'constant',
                                                  type: 'String',
                                                  value: '大理石',
                                                },
                                              },
                                            },
                                          },
                                        },
                                      },
                                    },
                                  },
                                },
                              },
                            },
                            {
                              kind: 'constant',
                              type: 'String',
                              value: '其他北歐家具',
                            },
                            {
                              annotations: {},
                              kind: 'func',
                              type: 'Null',
                              parameters: {},
                            },
                          ],
                        },
                      },
                    },
                    as: {
                      kind: 'constant',
                      type: 'String',
                      value: 'category_region_style',
                    },
                  },
                  outputName: null,
                },
                tableData: null,
                portId: null,
                id: 31130815,
                hash: '8bf978971722d2daeff514a4480158235a1a8ed2',
                pbemappingartifacts: [],
                targetmappingartifacts: [],
                udfscriptlines: [],
                dependencies: [],
              },
              {
                columnMetadata: {
                  category_group_alice_tmp: {
                    id: '44w2oat',
                  },
                },
                task: {
                  annotations: {
                    outputColumnAnnotations: {
                      category_group_alice_tmp: {
                        type: [
                          'String',
                        ],
                        _likely_types: [
                          [
                            'String',
                          ],
                          [
                            'Integer',
                          ],
                          [
                            'Phone',
                          ],
                          [
                            'SSN',
                          ],
                          [
                            'Map',
                          ],
                        ],
                      },
                    },
                  },
                  kind: 'task',
                  type: 'Derive',
                  parameters: {
                    type: {
                      kind: 'bundle',
                      type: 'Bundle',
                      value: 'single',
                    },
                    value: {
                      annotations: {},
                      kind: 'func',
                      type: 'Case',
                      parameters: {
                        predicateValuePairs: {
                          kind: 'array',
                          type: 'Array',
                          value: [
                            {
                              annotations: {},
                              kind: 'func',
                              type: 'Matches',
                              parameters: {
                                ignore_case: {
                                  kind: 'constant',
                                  type: 'Bool',
                                  value: false,
                                },
                                lhs: {
                                  kind: 'array',
                                  type: 'Array',
                                  value: [
                                    {
                                      kind: 'column',
                                      type: 'Column',
                                      value: 'category_region_style',
                                      relation: null,
                                    },
                                  ],
                                },
                                rhs: {
                                  kind: 'constant',
                                  type: 'Regexp',
                                  value: '北歐風沙發|其他北歐家具|美式沙發|法式鄉村',
                                },
                              },
                            },
                            {
                              kind: 'column',
                              type: 'Column',
                              value: 'category_region_style',
                              relation: null,
                            },
                            {
                              annotations: {},
                              kind: 'func',
                              type: 'Matches',
                              parameters: {
                                ignore_case: {
                                  kind: 'constant',
                                  type: 'Bool',
                                  value: false,
                                },
                                lhs: {
                                  kind: 'array',
                                  type: 'Array',
                                  value: [
                                    {
                                      kind: 'column',
                                      type: 'Column',
                                      value: 'category_style',
                                      relation: null,
                                    },
                                  ],
                                },
                                rhs: {
                                  kind: 'constant',
                                  type: 'Regexp',
                                  value: 'MCM',
                                },
                              },
                            },
                            {
                              kind: 'constant',
                              type: 'String',
                              value: 'MCM',
                            },
                            {
                              annotations: {},
                              kind: 'func',
                              type: 'Matches',
                              parameters: {
                                ignore_case: {
                                  kind: 'constant',
                                  type: 'Bool',
                                  value: false,
                                },
                                lhs: {
                                  kind: 'array',
                                  type: 'Array',
                                  value: [
                                    {
                                      kind: 'column',
                                      type: 'Column',
                                      value: 'category_fun',
                                      relation: null,
                                    },
                                  ],
                                },
                                rhs: {
                                  kind: 'constant',
                                  type: 'Regexp',
                                  value: '床架|櫃架|燈飾',
                                },
                              },
                            },
                            {
                              kind: 'column',
                              type: 'Column',
                              value: 'category_fun',
                              relation: null,
                            },
                            {
                              annotations: {},
                              kind: 'func',
                              type: 'Matches',
                              parameters: {
                                ignore_case: {
                                  kind: 'constant',
                                  type: 'Bool',
                                  value: false,
                                },
                                lhs: {
                                  kind: 'array',
                                  type: 'Array',
                                  value: [
                                    {
                                      kind: 'column',
                                      type: 'Column',
                                      value: 'category_material',
                                      relation: null,
                                    },
                                  ],
                                },
                                rhs: {
                                  kind: 'constant',
                                  type: 'String',
                                  value: '大理石',
                                },
                              },
                            },
                            {
                              kind: 'constant',
                              type: 'String',
                              value: '大理石',
                            },
                            {
                              annotations: {
                                infix: true,
                                parenthetical: false,
                              },
                              kind: 'func',
                              type: 'And',
                              parameters: {
                                lhs: {
                                  annotations: {},
                                  kind: 'func',
                                  type: 'Matches',
                                  parameters: {
                                    ignore_case: {
                                      kind: 'constant',
                                      type: 'Bool',
                                      value: false,
                                    },
                                    lhs: {
                                      kind: 'array',
                                      type: 'Array',
                                      value: [
                                        {
                                          kind: 'column',
                                          type: 'Column',
                                          value: 'category_fun',
                                          relation: null,
                                        },
                                      ],
                                    },
                                    rhs: {
                                      kind: 'constant',
                                      type: 'String',
                                      value: '餐桌',
                                    },
                                  },
                                },
                                rhs: {
                                  annotations: {
                                    infix: true,
                                    parenthetical: false,
                                  },
                                  kind: 'func',
                                  type: 'And',
                                  parameters: {
                                    lhs: {
                                      annotations: {},
                                      kind: 'func',
                                      type: 'Not',
                                      parameters: {
                                        operand: {
                                          annotations: {},
                                          kind: 'func',
                                          type: 'Matches',
                                          parameters: {
                                            ignore_case: {
                                              kind: 'constant',
                                              type: 'Bool',
                                              value: false,
                                            },
                                            lhs: {
                                              kind: 'array',
                                              type: 'Array',
                                              value: [
                                                {
                                                  kind: 'column',
                                                  type: 'Column',
                                                  value: 'category_material',
                                                  relation: null,
                                                },
                                              ],
                                            },
                                            rhs: {
                                              kind: 'constant',
                                              type: 'String',
                                              value: '大理石',
                                            },
                                          },
                                        },
                                      },
                                    },
                                    rhs: {
                                      annotations: {
                                        infix: true,
                                        parenthetical: false,
                                      },
                                      kind: 'func',
                                      type: 'And',
                                      parameters: {
                                        lhs: {
                                          annotations: {},
                                          kind: 'func',
                                          type: 'Not',
                                          parameters: {
                                            operand: {
                                              annotations: {},
                                              kind: 'func',
                                              type: 'Matches',
                                              parameters: {
                                                ignore_case: {
                                                  kind: 'constant',
                                                  type: 'Bool',
                                                  value: false,
                                                },
                                                lhs: {
                                                  kind: 'array',
                                                  type: 'Array',
                                                  value: [
                                                    {
                                                      kind: 'column',
                                                      type: 'Column',
                                                      value: 'category_region_style',
                                                      relation: null,
                                                    },
                                                  ],
                                                },
                                                rhs: {
                                                  kind: 'constant',
                                                  type: 'Regexp',
                                                  value: '法式鄉村',
                                                },
                                              },
                                            },
                                          },
                                        },
                                        rhs: {
                                          annotations: {},
                                          kind: 'func',
                                          type: 'Not',
                                          parameters: {
                                            operand: {
                                              annotations: {},
                                              kind: 'func',
                                              type: 'Matches',
                                              parameters: {
                                                ignore_case: {
                                                  kind: 'constant',
                                                  type: 'Bool',
                                                  value: false,
                                                },
                                                lhs: {
                                                  kind: 'array',
                                                  type: 'Array',
                                                  value: [
                                                    {
                                                      kind: 'column',
                                                      type: 'Column',
                                                      value: 'category_style',
                                                      relation: null,
                                                    },
                                                  ],
                                                },
                                                rhs: {
                                                  kind: 'constant',
                                                  type: 'String',
                                                  value: 'MCM',
                                                },
                                              },
                                            },
                                          },
                                        },
                                      },
                                    },
                                  },
                                },
                              },
                            },
                            {
                              kind: 'constant',
                              type: 'String',
                              value: '餐桌',
                            },
                            {
                              annotations: {
                                infix: true,
                                parenthetical: false,
                              },
                              kind: 'func',
                              type: 'And',
                              parameters: {
                                lhs: {
                                  annotations: {},
                                  kind: 'func',
                                  type: 'Matches',
                                  parameters: {
                                    ignore_case: {
                                      kind: 'constant',
                                      type: 'Bool',
                                      value: false,
                                    },
                                    lhs: {
                                      kind: 'array',
                                      type: 'Array',
                                      value: [
                                        {
                                          kind: 'column',
                                          type: 'Column',
                                          value: 'category_fun',
                                          relation: null,
                                        },
                                      ],
                                    },
                                    rhs: {
                                      kind: 'constant',
                                      type: 'Regexp',
                                      value: '餐椅|板凳|吧椅',
                                    },
                                  },
                                },
                                rhs: {
                                  annotations: {
                                    infix: true,
                                    parenthetical: false,
                                  },
                                  kind: 'func',
                                  type: 'And',
                                  parameters: {
                                    lhs: {
                                      annotations: {},
                                      kind: 'func',
                                      type: 'Not',
                                      parameters: {
                                        operand: {
                                          annotations: {},
                                          kind: 'func',
                                          type: 'Matches',
                                          parameters: {
                                            ignore_case: {
                                              kind: 'constant',
                                              type: 'Bool',
                                              value: false,
                                            },
                                            lhs: {
                                              kind: 'array',
                                              type: 'Array',
                                              value: [
                                                {
                                                  kind: 'column',
                                                  type: 'Column',
                                                  value: 'category_material',
                                                  relation: null,
                                                },
                                              ],
                                            },
                                            rhs: {
                                              kind: 'constant',
                                              type: 'String',
                                              value: '大理石',
                                            },
                                          },
                                        },
                                      },
                                    },
                                    rhs: {
                                      annotations: {
                                        infix: true,
                                        parenthetical: false,
                                      },
                                      kind: 'func',
                                      type: 'And',
                                      parameters: {
                                        lhs: {
                                          annotations: {},
                                          kind: 'func',
                                          type: 'Not',
                                          parameters: {
                                            operand: {
                                              annotations: {},
                                              kind: 'func',
                                              type: 'Matches',
                                              parameters: {
                                                ignore_case: {
                                                  kind: 'constant',
                                                  type: 'Bool',
                                                  value: false,
                                                },
                                                lhs: {
                                                  kind: 'array',
                                                  type: 'Array',
                                                  value: [
                                                    {
                                                      kind: 'column',
                                                      type: 'Column',
                                                      value: 'category_region_style',
                                                      relation: null,
                                                    },
                                                  ],
                                                },
                                                rhs: {
                                                  kind: 'constant',
                                                  type: 'Regexp',
                                                  value: '法式鄉村',
                                                },
                                              },
                                            },
                                          },
                                        },
                                        rhs: {
                                          annotations: {
                                            infix: true,
                                            parenthetical: false,
                                          },
                                          kind: 'func',
                                          type: 'And',
                                          parameters: {
                                            lhs: {
                                              annotations: {},
                                              kind: 'func',
                                              type: 'Not',
                                              parameters: {
                                                operand: {
                                                  annotations: {},
                                                  kind: 'func',
                                                  type: 'Matches',
                                                  parameters: {
                                                    ignore_case: {
                                                      kind: 'constant',
                                                      type: 'Bool',
                                                      value: false,
                                                    },
                                                    lhs: {
                                                      kind: 'array',
                                                      type: 'Array',
                                                      value: [
                                                        {
                                                          kind: 'column',
                                                          type: 'Column',
                                                          value: 'category_style',
                                                          relation: null,
                                                        },
                                                      ],
                                                    },
                                                    rhs: {
                                                      kind: 'constant',
                                                      type: 'Regexp',
                                                      value: 'MCM',
                                                    },
                                                  },
                                                },
                                              },
                                            },
                                            rhs: {
                                              annotations: {},
                                              kind: 'func',
                                              type: 'Not',
                                              parameters: {
                                                operand: {
                                                  annotations: {},
                                                  kind: 'func',
                                                  type: 'Matches',
                                                  parameters: {
                                                    ignore_case: {
                                                      kind: 'constant',
                                                      type: 'Bool',
                                                      value: false,
                                                    },
                                                    lhs: {
                                                      kind: 'array',
                                                      type: 'Array',
                                                      value: [
                                                        {
                                                          kind: 'column',
                                                          type: 'Column',
                                                          value: 'category_fun',
                                                          relation: null,
                                                        },
                                                      ],
                                                    },
                                                    rhs: {
                                                      kind: 'constant',
                                                      type: 'String',
                                                      value: '辦公椅',
                                                    },
                                                  },
                                                },
                                              },
                                            },
                                          },
                                        },
                                      },
                                    },
                                  },
                                },
                              },
                            },
                            {
                              kind: 'constant',
                              type: 'String',
                              value: '餐椅/板凳/中島吧擡',
                            },
                            {
                              annotations: {
                                infix: true,
                                parenthetical: false,
                              },
                              kind: 'func',
                              type: 'And',
                              parameters: {
                                lhs: {
                                  annotations: {},
                                  kind: 'func',
                                  type: 'Matches',
                                  parameters: {
                                    ignore_case: {
                                      kind: 'constant',
                                      type: 'Bool',
                                      value: false,
                                    },
                                    lhs: {
                                      kind: 'array',
                                      type: 'Array',
                                      value: [
                                        {
                                          kind: 'column',
                                          type: 'Column',
                                          value: 'category_factory',
                                          relation: null,
                                        },
                                      ],
                                    },
                                    rhs: {
                                      kind: 'constant',
                                      type: 'String',
                                      value: 'CA',
                                    },
                                  },
                                },
                                rhs: {
                                  annotations: {},
                                  kind: 'func',
                                  type: 'Not',
                                  parameters: {
                                    operand: {
                                      annotations: {},
                                      kind: 'func',
                                      type: 'Matches',
                                      parameters: {
                                        ignore_case: {
                                          kind: 'constant',
                                          type: 'Bool',
                                          value: false,
                                        },
                                        lhs: {
                                          kind: 'array',
                                          type: 'Array',
                                          value: [
                                            {
                                              kind: 'column',
                                              type: 'Column',
                                              value: 'category_material',
                                              relation: null,
                                            },
                                          ],
                                        },
                                        rhs: {
                                          kind: 'constant',
                                          type: 'String',
                                          value: '布料',
                                        },
                                      },
                                    },
                                  },
                                },
                              },
                            },
                            {
                              kind: 'constant',
                              type: 'String',
                              value: '皮沙發',
                            },
                            {
                              annotations: {},
                              kind: 'func',
                              type: 'Matches',
                              parameters: {
                                ignore_case: {
                                  kind: 'constant',
                                  type: 'Bool',
                                  value: false,
                                },
                                lhs: {
                                  kind: 'array',
                                  type: 'Array',
                                  value: [
                                    {
                                      kind: 'column',
                                      type: 'Column',
                                      value: 'category_factory',
                                      relation: null,
                                    },
                                  ],
                                },
                                rhs: {
                                  kind: 'constant',
                                  type: 'String',
                                  value: 'GB',
                                },
                              },
                            },
                            {
                              kind: 'constant',
                              type: 'String',
                              value: '科技布沙發',
                            },
                            {
                              annotations: {},
                              kind: 'func',
                              type: 'Matches',
                              parameters: {
                                ignore_case: {
                                  kind: 'constant',
                                  type: 'Bool',
                                  value: false,
                                },
                                lhs: {
                                  kind: 'array',
                                  type: 'Array',
                                  value: [
                                    {
                                      kind: 'column',
                                      type: 'Column',
                                      value: 'category_mat',
                                      relation: null,
                                    },
                                  ],
                                },
                                rhs: {
                                  kind: 'constant',
                                  type: 'Regexp',
                                  value: '床墊|枕頭|棉被|薄墊',
                                },
                              },
                            },
                            {
                              kind: 'column',
                              type: 'Column',
                              value: 'category_mat',
                              relation: null,
                            },
                            {
                              annotations: {},
                              kind: 'func',
                              type: 'Null',
                              parameters: {},
                            },
                          ],
                        },
                      },
                    },
                    as: {
                      kind: 'constant',
                      type: 'String',
                      value: 'category_group_alice_tmp',
                    },
                  },
                  outputName: null,
                },
                tableData: null,
                portId: null,
                id: 31130816,
                hash: 'e941df29064013404f7cf88b919d2af638b3dbd4',
                pbemappingartifacts: [],
                targetmappingartifacts: [],
                udfscriptlines: [],
                dependencies: [],
              },
              {
                columnMetadata: {},
                task: {
                  annotations: {},
                  kind: 'task',
                  type: 'Rename',
                  parameters: {
                    type: {
                      kind: 'bundle',
                      type: 'Bundle',
                      value: 'manual',
                    },
                    mapping: {
                      kind: 'matrix',
                      type: 'Matrix',
                      value: [
                        {
                          kind: 'array',
                          type: 'Array',
                          value: [
                            {
                              kind: 'column',
                              type: 'Column',
                              value: 'category_group_alice_tmp',
                              relation: null,
                            },
                            {
                              kind: 'constant',
                              type: 'String',
                              value: 'category_group_alice',
                            },
                          ],
                        },
                      ],
                    },
                  },
                  outputName: null,
                },
                tableData: null,
                portId: null,
                id: 31130817,
                hash: '72beaef23a639bb07635f8358400be2721f523c3',
                pbemappingartifacts: [],
                targetmappingartifacts: [],
                udfscriptlines: [],
                dependencies: [],
              },
              {
                columnMetadata: {},
                task: {
                  annotations: {
                    transformSpecificData: null,
                    disabled: true,
                    task: {
                      annotations: {},
                      kind: 'task',
                      type: 'Filter',
                      parameters: {
                        action: {
                          kind: 'enumerable',
                          type: 'Enumerable',
                          value: 'Delete',
                        },
                        type: {
                          kind: 'bundle',
                          type: 'Bundle',
                          value: 'custom',
                        },
                        rowType: {
                          kind: 'bundle',
                          type: 'Bundle',
                          value: 'single',
                        },
                        row: {
                          annotations: {},
                          kind: 'func',
                          type: 'Matches',
                          parameters: {
                            ignore_case: {
                              kind: 'constant',
                              type: 'Bool',
                              value: false,
                            },
                            lhs: {
                              kind: 'array',
                              type: 'Array',
                              value: [
                                {
                                  kind: 'column',
                                  type: 'Column',
                                  value: 'email',
                                  relation: null,
                                },
                              ],
                            },
                            rhs: {
                              kind: 'constant',
                              type: 'Pattern',
                              value: '{yyyy}/{mm}/{dd}|合計',
                            },
                          },
                        },
                      },
                      outputName: null,
                    },
                    tableData: 'null',
                  },
                  kind: 'task',
                  type: 'Comment',
                  parameters: {
                    comment: {
                      kind: 'constant',
                      type: 'String',
                      value: 'Delete rows  where MATCHES([email], `{yyyy}/{mm}/{dd}|合計`, false)',
                    },
                  },
                  outputName: null,
                },
                tableData: null,
                portId: null,
                id: 31130818,
                hash: 'e8a40723af782d72a9637db55d6b2c789e852d5b',
                pbemappingartifacts: [],
                targetmappingartifacts: [],
                udfscriptlines: [],
                dependencies: [],
              },
              {
                columnMetadata: {
                  temp_order_date: {
                    id: '6kc7gby',
                  },
                },
                task: {
                  annotations: {
                    outputColumnAnnotations: {
                      temp_order_date: {
                        type: [
                          'Integer',
                        ],
                        _likely_types: [
                          [
                            'Integer',
                          ],
                          [
                            'Float',
                          ],
                          [
                            'String',
                          ],
                          [
                            'Phone',
                          ],
                          [
                            'SSN',
                          ],
                        ],
                      },
                    },
                  },
                  kind: 'task',
                  type: 'Derive',
                  parameters: {
                    type: {
                      kind: 'bundle',
                      type: 'Bundle',
                      value: 'single',
                    },
                    value: {
                      annotations: {},
                      kind: 'func',
                      type: 'Case',
                      parameters: {
                        predicateValuePairs: {
                          kind: 'array',
                          type: 'Array',
                          value: [
                            {
                              annotations: {},
                              kind: 'func',
                              type: 'Matches',
                              parameters: {
                                ignore_case: {
                                  kind: 'constant',
                                  type: 'Bool',
                                  value: true,
                                },
                                lhs: {
                                  kind: 'array',
                                  type: 'Array',
                                  value: [
                                    {
                                      kind: 'column',
                                      type: 'Column',
                                      value: 'order_id',
                                      relation: null,
                                    },
                                  ],
                                },
                                rhs: {
                                  kind: 'constant',
                                  type: 'Regexp',
                                  value: '^MO|^2018|^2019|^2020|^2021|^2022',
                                },
                              },
                            },
                            {
                              annotations: {},
                              kind: 'func',
                              type: 'Substring',
                              parameters: {
                                col: {
                                  kind: 'column',
                                  type: 'Column',
                                  value: 'order_id',
                                  relation: null,
                                },
                                start: {
                                  kind: 'constant',
                                  type: 'Integer',
                                  value: 2,
                                },
                                end: {
                                  kind: 'constant',
                                  type: 'Integer',
                                  value: 8,
                                },
                              },
                            },
                            {
                              annotations: {},
                              kind: 'func',
                              type: 'Substring',
                              parameters: {
                                col: {
                                  kind: 'column',
                                  type: 'Column',
                                  value: 'order_id',
                                  relation: null,
                                },
                                start: {
                                  kind: 'constant',
                                  type: 'Integer',
                                  value: 0,
                                },
                                end: {
                                  kind: 'constant',
                                  type: 'Integer',
                                  value: 6,
                                },
                              },
                            },
                          ],
                        },
                      },
                    },
                    as: {
                      kind: 'constant',
                      type: 'String',
                      value: 'temp_order_date',
                    },
                  },
                  outputName: null,
                },
                tableData: null,
                portId: null,
                id: 31130819,
                hash: '0f692cdd45e8ddbaf5dc802782e8e274824f4540',
                pbemappingartifacts: [],
                targetmappingartifacts: [],
                udfscriptlines: [],
                dependencies: [],
              },
              {
                columnMetadata: {},
                task: {
                  annotations: {
                    transformSpecificData: null,
                    disabled: true,
                    task: {
                      annotations: {
                        outputColumnAnnotations: {
                          order_id1: {
                            type: [
                              'Integer',
                            ],
                            _likely_types: [
                              [
                                'Integer',
                              ],
                              [
                                'Float',
                              ],
                              [
                                'String',
                              ],
                              [
                                'Phone',
                              ],
                              [
                                'SSN',
                              ],
                            ],
                          },
                        },
                      },
                      kind: 'task',
                      type: 'ExtractPositions',
                      parameters: {
                        col: {
                          kind: 'column',
                          type: 'Column',
                          value: 'order_id',
                          relation: null,
                        },
                        type: {
                          kind: 'bundle',
                          type: 'Bundle',
                          value: 'at',
                        },
                        start: {
                          kind: 'constant',
                          type: 'Integer',
                          value: 0,
                        },
                        end: {
                          kind: 'constant',
                          type: 'Integer',
                          value: 6,
                        },
                        as: {
                          kind: 'array',
                          type: 'Array',
                          value: [
                            {
                              kind: 'constant',
                              type: 'String',
                              value: 'order_id1',
                            },
                          ],
                        },
                      },
                      outputName: null,
                    },
                    tableData: 'null',
                  },
                  kind: 'task',
                  type: 'Comment',
                  parameters: {
                    comment: {
                      kind: 'constant',
                      type: 'String',
                      value: 'Extract characters between 0 to 6 from order_id',
                    },
                  },
                  outputName: null,
                },
                tableData: null,
                portId: null,
                id: 31130820,
                hash: '71a6c52d788dfdb0642b210d51a2c16e7cf898f6',
                pbemappingartifacts: [],
                targetmappingartifacts: [],
                udfscriptlines: [],
                dependencies: [],
              },
              {
                columnMetadata: {},
                task: {
                  annotations: {
                    outputColumnAnnotations: {
                      temp_order_date: {
                        type: [
                          'Datetime',
                          'yy-mm-dd',
                          'yyyymmdd',
                        ],
                        _likely_types: [
                          [
                            'Datetime',
                            'yy-mm-dd',
                            'yyyymmdd',
                          ],
                          [
                            'Integer',
                          ],
                          [
                            'String',
                          ],
                          [
                            'Float',
                          ],
                          [
                            'Phone',
                          ],
                        ],
                      },
                    },
                  },
                  kind: 'task',
                  type: 'TextFormat',
                  parameters: {
                    col: {
                      kind: 'array',
                      type: 'Array',
                      value: [
                        {
                          kind: 'column',
                          type: 'Column',
                          value: 'temp_order_date',
                          relation: null,
                        },
                      ],
                    },
                    type: {
                      kind: 'bundle',
                      type: 'Bundle',
                      value: 'prefix',
                    },
                    text: {
                      kind: 'constant',
                      type: 'String',
                      value: '20',
                    },
                  },
                  outputName: null,
                },
                tableData: null,
                portId: null,
                id: 31130821,
                hash: '61fcb512bcdea745fe7e3dedfd9d6ccdc4f4f8cf',
                pbemappingartifacts: [],
                targetmappingartifacts: [],
                udfscriptlines: [],
                dependencies: [],
              },
              {
                columnMetadata: {},
                task: {
                  annotations: {},
                  kind: 'task',
                  type: 'Rename',
                  parameters: {
                    type: {
                      kind: 'bundle',
                      type: 'Bundle',
                      value: 'manual',
                    },
                    mapping: {
                      kind: 'matrix',
                      type: 'Matrix',
                      value: [
                        {
                          kind: 'array',
                          type: 'Array',
                          value: [
                            {
                              kind: 'column',
                              type: 'Column',
                              value: 'temp_order_date',
                              relation: null,
                            },
                            {
                              kind: 'constant',
                              type: 'String',
                              value: 'order_date',
                            },
                          ],
                        },
                      ],
                    },
                  },
                  outputName: null,
                },
                tableData: null,
                portId: null,
                id: 31130822,
                hash: '71b7e83f4ebf8baff7c6b62711f94d9a29cce075',
                pbemappingartifacts: [],
                targetmappingartifacts: [],
                udfscriptlines: [],
                dependencies: [],
              },
              {
                columnMetadata: {},
                task: {
                  annotations: {
                    outputColumnAnnotations: {
                      delivery_date: {
                        type: [
                          'Datetime',
                          'yy-mm-dd hh:mm:ss',
                          'yyyymmdd*HH:MM:SS.sssX',
                        ],
                        _likely_types: [
                          [
                            'Datetime',
                            'yy-mm-dd hh:mm:ss',
                            'yyyymmdd*HH:MM:SS.sssX',
                          ],
                          [
                            'String',
                          ],
                          [
                            'Integer',
                          ],
                          [
                            'Phone',
                          ],
                          [
                            'SSN',
                          ],
                        ],
                      },
                    },
                  },
                  kind: 'task',
                  type: 'ReplacePatterns',
                  parameters: {
                    with: {
                      kind: 'constant',
                      type: 'String',
                      value: '',
                    },
                    col: {
                      kind: 'array',
                      type: 'Array',
                      value: [
                        {
                          kind: 'column',
                          type: 'Column',
                          value: 'delivery_date',
                          relation: null,
                        },
                      ],
                    },
                    on: {
                      kind: 'constant',
                      type: 'Regexp',
                      value: '[\\.\\-]',
                    },
                    ignoreCase: {
                      kind: 'constant',
                      type: 'Bool',
                      value: false,
                    },
                    global: {
                      kind: 'constant',
                      type: 'Bool',
                      value: true,
                    },
                    as: {
                      kind: 'array',
                      type: 'Array',
                      value: [
                        {
                          kind: 'constant',
                          type: 'String',
                          value: 'delivery_date',
                        },
                      ],
                    },
                  },
                  outputName: null,
                },
                tableData: null,
                portId: null,
                id: 31136759,
                hash: 'a1456d56800e471646d5d7e85df64b1b2630093f',
                pbemappingartifacts: [],
                targetmappingartifacts: [],
                udfscriptlines: [],
                dependencies: [],
              },
              {
                columnMetadata: {},
                task: {
                  annotations: {
                    outputColumnAnnotations: {
                      sap_deposit_date: {
                        type: [
                          'Datetime',
                          'yy-mm-dd hh:mm:ss',
                          'yyyymmdd*HH:MM:SS.sssX',
                        ],
                        _likely_types: [
                          [
                            'Datetime',
                            'yy-mm-dd hh:mm:ss',
                            'yyyymmdd*HH:MM:SS.sssX',
                          ],
                          [
                            'String',
                          ],
                          [
                            'Integer',
                          ],
                          [
                            'Phone',
                          ],
                          [
                            'SSN',
                          ],
                        ],
                      },
                    },
                  },
                  kind: 'task',
                  type: 'ReplacePatterns',
                  parameters: {
                    with: {
                      kind: 'constant',
                      type: 'String',
                      value: '',
                    },
                    col: {
                      kind: 'array',
                      type: 'Array',
                      value: [
                        {
                          kind: 'column',
                          type: 'Column',
                          value: 'sap_deposit_date',
                          relation: null,
                        },
                      ],
                    },
                    on: {
                      kind: 'constant',
                      type: 'Regexp',
                      value: '[\\.\\-]',
                    },
                    ignoreCase: {
                      kind: 'constant',
                      type: 'Bool',
                      value: false,
                    },
                    global: {
                      kind: 'constant',
                      type: 'Bool',
                      value: true,
                    },
                    as: {
                      kind: 'array',
                      type: 'Array',
                      value: [
                        {
                          kind: 'constant',
                          type: 'String',
                          value: 'sap_deposit_date',
                        },
                      ],
                    },
                  },
                  outputName: null,
                },
                tableData: null,
                portId: null,
                id: 31136786,
                hash: 'ebf6758e7f0103549d2e14bd601c702b033b649a',
                pbemappingartifacts: [],
                targetmappingartifacts: [],
                udfscriptlines: [],
                dependencies: [],
              },
              {
                columnMetadata: {},
                task: {
                  annotations: {},
                  kind: 'task',
                  type: 'DateFormat',
                  parameters: {
                    col: {
                      kind: 'array',
                      type: 'Array',
                      value: [
                        {
                          kind: 'column',
                          type: 'Column',
                          value: 'order_date',
                          relation: null,
                        },
                        {
                          kind: 'column',
                          type: 'Column',
                          value: 'delivery_date',
                          relation: null,
                        },
                        {
                          kind: 'column',
                          type: 'Column',
                          value: 'ecount_date',
                          relation: null,
                        },
                        {
                          kind: 'column',
                          type: 'Column',
                          value: 'sap_deposit_date',
                          relation: null,
                        },
                      ],
                    },
                    type: {
                      kind: 'bundle',
                      type: 'Bundle',
                      value: 'dashdate2',
                    },
                  },
                  outputName: null,
                },
                tableData: null,
                portId: null,
                id: 31137039,
                hash: '96e424b6df5ea2ddd46de7501e218ec84e961a3c',
                pbemappingartifacts: [],
                targetmappingartifacts: [],
                udfscriptlines: [],
                dependencies: [],
              },
              {
                columnMetadata: {},
                task: {
                  annotations: {
                    transformSpecificData: null,
                    disabled: true,
                    task: {
                      annotations: {},
                      kind: 'task',
                      type: 'SetType',
                      parameters: {
                        col: {
                          kind: 'array',
                          type: 'Array',
                          value: [
                            {
                              kind: 'column',
                              type: 'Column',
                              value: 'order_date',
                              relation: null,
                            },
                            {
                              kind: 'column',
                              type: 'Column',
                              value: 'delivery_date',
                              relation: null,
                            },
                            {
                              kind: 'column',
                              type: 'Column',
                              value: 'sap_deposit_date',
                              relation: null,
                            },
                          ],
                        },
                        type: {
                          kind: 'bundle',
                          type: 'Bundle',
                          value: 'Datetime',
                        },
                        datetimeType: {
                          kind: 'array',
                          type: 'Array',
                          value: [
                            {
                              kind: 'constant',
                              type: 'String',
                              value: 'Datetime',
                            },
                            {
                              kind: 'constant',
                              type: 'String',
                              value: 'yy-mm-dd',
                            },
                            {
                              kind: 'constant',
                              type: 'String',
                              value: 'yyyymmdd',
                            },
                          ],
                        },
                      },
                      outputName: null,
                    },
                    tableData: 'null',
                  },
                  kind: 'task',
                  type: 'Comment',
                  parameters: {
                    comment: {
                      kind: 'constant',
                      type: 'String',
                      value: 'Change 3 columns type to Datetime, yy-mm-dd, yyyymmdd',
                    },
                  },
                  outputName: null,
                },
                tableData: null,
                portId: null,
                id: 31137000,
                hash: 'd089382e999e56de0508c8251f90acc959b8e23c',
                pbemappingartifacts: [],
                targetmappingartifacts: [],
                udfscriptlines: [],
                dependencies: [],
              },
              {
                columnMetadata: {
                  sum_price: {
                    id: '-241tej4',
                  },
                },
                task: {
                  annotations: {
                    outputColumnAnnotations: {
                      sum_price: {
                        type: [
                          'Integer',
                        ],
                        _likely_types: [
                          [
                            'Integer',
                          ],
                          [
                            'Float',
                          ],
                          [
                            'String',
                          ],
                          [
                            'Phone',
                          ],
                          [
                            'SSN',
                          ],
                        ],
                      },
                    },
                  },
                  kind: 'task',
                  type: 'GroupBy',
                  parameters: {
                    type: {
                      kind: 'enumerable',
                      type: 'Enumerable',
                      value: 'flatAgg',
                    },
                    group: {
                      kind: 'array',
                      type: 'Array',
                      value: [
                        {
                          kind: 'column',
                          type: 'Column',
                          value: 'order_id',
                          relation: null,
                        },
                      ],
                    },
                    value: {
                      kind: 'array',
                      type: 'Array',
                      value: [
                        {
                          annotations: {},
                          kind: 'func',
                          type: 'Sum',
                          parameters: {
                            col: {
                              kind: 'column',
                              type: 'Column',
                              value: 'price',
                              relation: null,
                            },
                          },
                          as: [
                            'sum_price',
                          ],
                        },
                      ],
                    },
                    as: {
                      kind: 'array',
                      type: 'Array',
                      value: [
                        {
                          kind: 'constant',
                          type: 'String',
                          value: 'sum_price',
                        },
                      ],
                    },
                  },
                  outputName: null,
                },
                tableData: null,
                portId: null,
                id: 31130826,
                hash: '9a7dd2583b7476c856afacfe1db161ef34e26aec',
                pbemappingartifacts: [],
                targetmappingartifacts: [],
                udfscriptlines: [],
                dependencies: [],
              },
              {
                columnMetadata: {},
                task: {
                  annotations: {},
                  kind: 'task',
                  type: 'Rename',
                  parameters: {
                    type: {
                      kind: 'bundle',
                      type: 'Bundle',
                      value: 'manual',
                    },
                    mapping: {
                      kind: 'matrix',
                      type: 'Matrix',
                      value: [
                        {
                          kind: 'array',
                          type: 'Array',
                          value: [
                            {
                              kind: 'column',
                              type: 'Column',
                              value: 'sum_price',
                              relation: null,
                            },
                            {
                              kind: 'constant',
                              type: 'String',
                              value: 'sum_order_price',
                            },
                          ],
                        },
                      ],
                    },
                  },
                  outputName: null,
                },
                tableData: null,
                portId: null,
                id: 31130827,
                hash: 'ba1c6aaa1eadf8587efc5234c0215c9b81e3fd37',
                pbemappingartifacts: [],
                targetmappingartifacts: [],
                udfscriptlines: [],
                dependencies: [],
              },
              {
                columnMetadata: {
                  product_order_lead_time: {
                    id: '6wamsji',
                  },
                },
                task: {
                  annotations: {
                    outputColumnAnnotations: {
                      product_order_lead_time: {
                        type: [
                          'Integer',
                        ],
                        _likely_types: [
                          [
                            'Integer',
                          ],
                          [
                            'Float',
                          ],
                          [
                            'String',
                          ],
                          [
                            'Phone',
                          ],
                          [
                            'SSN',
                          ],
                        ],
                      },
                    },
                  },
                  kind: 'task',
                  type: 'Derive',
                  parameters: {
                    type: {
                      kind: 'bundle',
                      type: 'Bundle',
                      value: 'single',
                    },
                    value: {
                      annotations: {},
                      kind: 'func',
                      type: 'DateDif',
                      parameters: {
                        lhs: {
                          kind: 'column',
                          type: 'Column',
                          value: 'order_date',
                          relation: null,
                        },
                        rhs: {
                          kind: 'column',
                          type: 'Column',
                          value: 'delivery_date',
                          relation: null,
                        },
                        measure: {
                          kind: 'enumerable',
                          type: 'Enumerable',
                          value: 'day',
                        },
                      },
                    },
                    as: {
                      kind: 'constant',
                      type: 'String',
                      value: 'product_order_lead_time',
                    },
                  },
                  outputName: null,
                },
                tableData: null,
                portId: null,
                id: 31130828,
                hash: 'f26b768055f0a7b180a3d9888ba9b9c77a8688d4',
                pbemappingartifacts: [],
                targetmappingartifacts: [],
                udfscriptlines: [],
                dependencies: [],
              },
              {
                columnMetadata: {
                  corr_leadtime2qty: {
                    id: '-e9q7p4b',
                  },
                },
                task: {
                  annotations: {
                    outputColumnAnnotations: {
                      corr_leadtime2qty: {
                        type: [
                          'Float',
                        ],
                        _likely_types: [
                          [
                            'Float',
                          ],
                          [
                            'String',
                          ],
                          [
                            'Integer',
                          ],
                          [
                            'Phone',
                          ],
                          [
                            'SSN',
                          ],
                        ],
                      },
                    },
                  },
                  kind: 'task',
                  type: 'Derive',
                  parameters: {
                    type: {
                      kind: 'bundle',
                      type: 'Bundle',
                      value: 'multiple',
                    },
                    value: {
                      annotations: {},
                      kind: 'func',
                      type: 'Correl',
                      parameters: {
                        col: {
                          kind: 'column',
                          type: 'Column',
                          value: 'product_order_lead_time',
                          relation: null,
                        },
                        other: {
                          kind: 'column',
                          type: 'Column',
                          value: 'quantity',
                          relation: null,
                        },
                      },
                    },
                    group: {
                      kind: 'array',
                      type: 'Array',
                      value: [
                        {
                          kind: 'column',
                          type: 'Column',
                          value: 'product_name',
                          relation: null,
                        },
                      ],
                    },
                    as: {
                      kind: 'constant',
                      type: 'String',
                      value: 'corr_leadtime2qty',
                    },
                  },
                  outputName: null,
                },
                tableData: null,
                portId: null,
                id: 31130829,
                hash: 'e721409d55dcc6839bdb533c88616c9f8fe224d1',
                pbemappingartifacts: [],
                targetmappingartifacts: [],
                udfscriptlines: [],
                dependencies: [],
              },
              {
                columnMetadata: {
                  deposit1: {
                    id: '5ot06bw',
                  },
                },
                task: {
                  annotations: {
                    outputColumnAnnotations: {
                      deposit1: {
                        type: [
                          'String',
                        ],
                        _likely_types: [
                          [
                            'String',
                          ],
                          [
                            'Integer',
                          ],
                          [
                            'Bool',
                          ],
                          [
                            'Float',
                          ],
                          [
                            'Phone',
                          ],
                        ],
                      },
                    },
                  },
                  kind: 'task',
                  type: 'ExtractPatterns',
                  parameters: {
                    col: {
                      kind: 'column',
                      type: 'Column',
                      value: 'deposit',
                      relation: null,
                    },
                    type: {
                      kind: 'bundle',
                      type: 'Bundle',
                      value: 'custom',
                    },
                    on: {
                      kind: 'constant',
                      type: 'Regexp',
                      value: '.*',
                    },
                    start: {
                      kind: 'constant',
                      type: 'Regexp',
                      value: '取消[,， ]+',
                    },
                    end: {
                      kind: 'constant',
                      type: 'Regexp',
                      value: '[)）]',
                    },
                    ignoreCase: {
                      kind: 'constant',
                      type: 'Bool',
                      value: false,
                    },
                    as: {
                      kind: 'array',
                      type: 'Array',
                      value: [
                        {
                          kind: 'constant',
                          type: 'String',
                          value: 'deposit1',
                        },
                      ],
                    },
                  },
                  outputName: null,
                },
                tableData: null,
                portId: null,
                id: 31130830,
                hash: '33d25fbbe61903500ea176277b48dfa7d38813d5',
                pbemappingartifacts: [],
                targetmappingartifacts: [],
                udfscriptlines: [],
                dependencies: [],
              },
              {
                columnMetadata: {},
                task: {
                  annotations: {},
                  kind: 'task',
                  type: 'Rename',
                  parameters: {
                    type: {
                      kind: 'bundle',
                      type: 'Bundle',
                      value: 'manual',
                    },
                    mapping: {
                      kind: 'matrix',
                      type: 'Matrix',
                      value: [
                        {
                          kind: 'array',
                          type: 'Array',
                          value: [
                            {
                              kind: 'column',
                              type: 'Column',
                              value: 'deposit1',
                              relation: null,
                            },
                            {
                              kind: 'constant',
                              type: 'String',
                              value: 'tmp_cancel_cause',
                            },
                          ],
                        },
                      ],
                    },
                  },
                  outputName: null,
                },
                tableData: null,
                portId: null,
                id: 31130831,
                hash: '0bc8dd7d3f1f39ecfe6e66a578c58a1f6137f0c2',
                pbemappingartifacts: [],
                targetmappingartifacts: [],
                udfscriptlines: [],
                dependencies: [],
              },
              {
                columnMetadata: {
                  is_prod_cancel: {
                    id: '52e44g6',
                  },
                },
                task: {
                  annotations: {
                    outputColumnAnnotations: {
                      is_prod_cancel: {
                        type: [
                          'Integer',
                        ],
                        _likely_types: [
                          [
                            'Integer',
                          ],
                          [
                            'Float',
                          ],
                          [
                            'String',
                          ],
                          [
                            'Phone',
                          ],
                          [
                            'SSN',
                          ],
                        ],
                      },
                    },
                  },
                  kind: 'task',
                  type: 'Derive',
                  parameters: {
                    type: {
                      kind: 'bundle',
                      type: 'Bundle',
                      value: 'single',
                    },
                    value: {
                      annotations: {},
                      kind: 'func',
                      type: 'Case',
                      parameters: {
                        predicateValuePairs: {
                          kind: 'array',
                          type: 'Array',
                          value: [
                            {
                              annotations: {},
                              kind: 'func',
                              type: 'Matches',
                              parameters: {
                                ignore_case: {
                                  kind: 'constant',
                                  type: 'Bool',
                                  value: true,
                                },
                                lhs: {
                                  kind: 'array',
                                  type: 'Array',
                                  value: [
                                    {
                                      kind: 'column',
                                      type: 'Column',
                                      value: 'deposit',
                                      relation: null,
                                    },
                                  ],
                                },
                                rhs: {
                                  kind: 'constant',
                                  type: 'Regexp',
                                  value: '取消|-\\s*\\d+,?\\d+',
                                },
                              },
                            },
                            {
                              kind: 'constant',
                              type: 'Integer',
                              value: 1,
                            },
                            {
                              kind: 'constant',
                              type: 'Integer',
                              value: 0,
                            },
                          ],
                        },
                      },
                    },
                    as: {
                      kind: 'constant',
                      type: 'String',
                      value: 'is_prod_cancel',
                    },
                  },
                  outputName: null,
                },
                tableData: null,
                portId: null,
                id: 31130832,
                hash: 'eac097664a14f65de37b89f2a4f60dd98a395af2',
                pbemappingartifacts: [],
                targetmappingartifacts: [],
                udfscriptlines: [],
                dependencies: [],
              },
              {
                columnMetadata: {
                  prod_cancel_cause: {
                    id: '-8inl25h',
                  },
                },
                task: {
                  annotations: {
                    outputColumnAnnotations: {
                      prod_cancel_cause: {
                        type: [
                          'String',
                        ],
                        _likely_types: [
                          [
                            'String',
                          ],
                          [
                            'Integer',
                          ],
                          [
                            'Phone',
                          ],
                          [
                            'SSN',
                          ],
                          [
                            'Ipaddress',
                          ],
                        ],
                      },
                    },
                  },
                  kind: 'task',
                  type: 'Derive',
                  parameters: {
                    type: {
                      kind: 'bundle',
                      type: 'Bundle',
                      value: 'single',
                    },
                    value: {
                      annotations: {},
                      kind: 'func',
                      type: 'Case',
                      parameters: {
                        predicateValuePairs: {
                          kind: 'array',
                          type: 'Array',
                          value: [
                            {
                              annotations: {
                                infix: true,
                                parenthetical: false,
                              },
                              kind: 'func',
                              type: 'And',
                              parameters: {
                                lhs: {
                                  annotations: {
                                    infix: true,
                                    parenthetical: false,
                                  },
                                  kind: 'func',
                                  type: 'Equal',
                                  parameters: {
                                    lhs: {
                                      kind: 'column',
                                      type: 'Column',
                                      value: 'is_prod_cancel',
                                      relation: null,
                                    },
                                    rhs: {
                                      kind: 'constant',
                                      type: 'Integer',
                                      value: 1,
                                    },
                                  },
                                },
                                rhs: {
                                  annotations: {},
                                  kind: 'func',
                                  type: 'Not',
                                  parameters: {
                                    operand: {
                                      annotations: {},
                                      kind: 'func',
                                      type: 'IsNull',
                                      parameters: {
                                        col: {
                                          kind: 'column',
                                          type: 'Column',
                                          value: 'tmp_cancel_cause',
                                          relation: null,
                                        },
                                      },
                                    },
                                  },
                                },
                              },
                            },
                            {
                              kind: 'column',
                              type: 'Column',
                              value: 'tmp_cancel_cause',
                              relation: null,
                            },
                            {
                              annotations: {
                                infix: true,
                                parenthetical: false,
                              },
                              kind: 'func',
                              type: 'And',
                              parameters: {
                                lhs: {
                                  annotations: {
                                    infix: true,
                                    parenthetical: false,
                                  },
                                  kind: 'func',
                                  type: 'Equal',
                                  parameters: {
                                    lhs: {
                                      kind: 'column',
                                      type: 'Column',
                                      value: 'is_prod_cancel',
                                      relation: null,
                                    },
                                    rhs: {
                                      kind: 'constant',
                                      type: 'Integer',
                                      value: 1,
                                    },
                                  },
                                },
                                rhs: {
                                  annotations: {},
                                  kind: 'func',
                                  type: 'IsNull',
                                  parameters: {
                                    col: {
                                      kind: 'column',
                                      type: 'Column',
                                      value: 'tmp_cancel_cause',
                                      relation: null,
                                    },
                                  },
                                },
                              },
                            },
                            {
                              kind: 'constant',
                              type: 'String',
                              value: '其他',
                            },
                            {
                              annotations: {},
                              kind: 'func',
                              type: 'Null',
                              parameters: {},
                            },
                          ],
                        },
                      },
                    },
                    as: {
                      kind: 'constant',
                      type: 'String',
                      value: 'prod_cancel_cause',
                    },
                  },
                  outputName: null,
                },
                tableData: null,
                portId: null,
                id: 31130833,
                hash: '6f0da67a3952f5325908f643b272026f7a65edbe',
                pbemappingartifacts: [],
                targetmappingartifacts: [],
                udfscriptlines: [],
                dependencies: [],
              },
            ],
            dqScriptRules: [],
          },
          {
            id: 5025400,
            name: 'insertId',
            description: null,
            active: true,
            nextPortId: 1,
            steps: [
              {
                columnMetadata: {
                  email: {
                    id: 'aa314dz',
                  },
                  cellphone_number: {
                    id: 'betfcsx',
                  },
                  cust_name: {
                    id: 'alwfctq',
                  },
                  cust_id: {
                    id: 'alc1oyi',
                  },
                  addr1: {
                    id: 'aa00la3',
                  },
                  addr2: {
                    id: 'aa00la4',
                  },
                  order_total: {
                    id: 'a7fb9u6',
                  },
                  order_id: {
                    id: 'a8zir4n',
                  },
                  order_date: {
                    id: '9ztkoqw',
                  },
                  sale_channel: {
                    id: 'aft03ws',
                  },
                  region: {
                    id: '9yvlms3',
                  },
                  region_sort: {
                    id: '9i2itkq',
                  },
                  district: {
                    id: '8u1u59x',
                  },
                  channel_oo: {
                    id: 'abewklh',
                  },
                  sale_channel_sort: {
                    id: '8h3lcsz',
                  },
                  deposit_date: {
                    id: '8uxtrtw',
                  },
                  delivery_date: {
                    id: '8hqhowg',
                  },
                  product_order_lead_time: {
                    id: '909g7ce',
                  },
                  product_name_spec: {
                    id: '8s8jtbu',
                  },
                  supplier: {
                    id: '9o3jvyb',
                  },
                  category_group: {
                    id: '8jiy4ft',
                  },
                  category_mat: {
                    id: '8ruf2dq',
                  },
                  category_fun_tmp: {
                    id: '6y4fdol',
                  },
                  category_style_tmp: {
                    id: '85y1ci5',
                  },
                  category_factory: {
                    id: '8k07qys',
                  },
                  category_style: {
                    id: '8jrgwt9',
                  },
                  category_fun: {
                    id: '8ruex05',
                  },
                  category_material: {
                    id: '7b9krp7',
                  },
                  category_region_style: {
                    id: '846zu5c',
                  },
                  category_group_alice: {
                    id: '8lin5ee',
                  },
                  category_campaign: {
                    id: '6qotnn0',
                  },
                  product_id: {
                    id: '9sdy730',
                  },
                  product_name: {
                    id: '915jy0g',
                  },
                  unit_price: {
                    id: '8h7fce9',
                  },
                  quantity: {
                    id: '9pb7xhq',
                  },
                  corr_leadtime2qty: {
                    id: 'bsnrlbt',
                  },
                  price: {
                    id: 'aaawraa',
                  },
                  sum_order_price: {
                    id: '8pnbrv5',
                  },
                  ecount_date: {
                    id: '8u96qt6',
                  },
                  payment_channel: {
                    id: 'ah2y9yd',
                  },
                  deposit: {
                    id: '8x8tq13',
                  },
                  is_prod_cancel: {
                    id: '8uhxuys',
                  },
                  tmp_cancel_cause: {
                    id: 'c8szjsl',
                  },
                  prod_cancel_cause: {
                    id: 'aglc3g9',
                  },
                  purchase_category: {
                    id: 'btcli2v',
                  },
                  purchase_fabrics: {
                    id: 'aqkm8pv',
                  },
                  purchase_collection: {
                    id: 'adp40l1',
                  },
                  purchase_spec: {
                    id: '88c0g2c',
                  },
                  salesperson: {
                    id: 'a0tq2v2',
                  },
                  sap_docstatus: {
                    id: 'b1f7ju4',
                  },
                  sap_canceled: {
                    id: 'bds0sv5',
                  },
                  sap_deposit_date: {
                    id: 'at8fkmf',
                  },
                  TRIFACTA__FILE_LINEAGE_INFO: {
                    id: '9poj8u2',
                  },
                },
                task: {
                  annotations: {
                    hidden: true,
                  },
                  kind: 'task',
                  type: 'Load',
                  parameters: {
                    format: {
                      annotations: {},
                      kind: 'func',
                      type: 'FormatBlob',
                      parameters: {},
                    },
                    location: {
                      kind: 'constant',
                      type: 'String',
                      value: 'portId://null',
                    },
                    enableLineage: {
                      kind: 'constant',
                      type: 'Bool',
                      value: true,
                    },
                    as: {
                      kind: 'array',
                      type: 'Array',
                      value: [
                        {
                          kind: 'constant',
                          type: 'String',
                          value: 'column1',
                        },
                      ],
                    },
                  },
                  outputName: 'original_datasource_1470419',
                },
                tableData: null,
                portId: null,
                id: 31130834,
                hash: 'cb6e8bd627cb7df3f5654f7fdea039a0c7d0b0e5',
                pbemappingartifacts: [],
                targetmappingartifacts: [],
                udfscriptlines: [],
                dependencies: [],
              },
              {
                columnMetadata: {
                  order_seq: {
                    id: '-fvw2exn',
                  },
                },
                task: {
                  annotations: {
                    outputColumnAnnotations: {
                      order_seq: {
                        type: [
                          'Integer',
                        ],
                        _likely_types: [
                          [
                            'Integer',
                          ],
                          [
                            'Float',
                          ],
                          [
                            'String',
                          ],
                          [
                            'Phone',
                          ],
                          [
                            'SSN',
                          ],
                        ],
                      },
                    },
                  },
                  kind: 'task',
                  type: 'Derive',
                  parameters: {
                    type: {
                      kind: 'bundle',
                      type: 'Bundle',
                      value: 'multiple',
                    },
                    value: {
                      annotations: {},
                      kind: 'func',
                      type: 'RowNumber',
                      parameters: {},
                    },
                    order: {
                      kind: 'array',
                      type: 'Array',
                      value: [
                        {
                          kind: 'column',
                          type: 'Column',
                          value: 'product_id',
                          relation: null,
                        },
                      ],
                    },
                    group: {
                      kind: 'array',
                      type: 'Array',
                      value: [
                        {
                          kind: 'column',
                          type: 'Column',
                          value: 'order_id',
                          relation: null,
                        },
                      ],
                    },
                    as: {
                      kind: 'constant',
                      type: 'String',
                      value: 'order_seq',
                    },
                  },
                  outputName: null,
                },
                tableData: null,
                portId: null,
                id: 31130835,
                hash: 'd4b7465974706110503d6e558db84942120c3415',
                pbemappingartifacts: [],
                targetmappingartifacts: [],
                udfscriptlines: [],
                dependencies: [],
              },
              {
                columnMetadata: {
                  order_id1: {
                    id: '48w4pqi',
                  },
                },
                task: {
                  annotations: {
                    outputColumnAnnotations: {
                      order_id1: {
                        type: [
                          'Integer',
                        ],
                        _likely_types: [
                          [
                            'Integer',
                          ],
                          [
                            'Float',
                          ],
                          [
                            'String',
                          ],
                          [
                            'Phone',
                          ],
                          [
                            'SSN',
                          ],
                        ],
                      },
                    },
                  },
                  kind: 'task',
                  type: 'ExtractPatterns',
                  parameters: {
                    col: {
                      kind: 'column',
                      type: 'Column',
                      value: 'order_id',
                      relation: null,
                    },
                    type: {
                      kind: 'bundle',
                      type: 'Bundle',
                      value: 'custom',
                    },
                    on: {
                      kind: 'constant',
                      type: 'Regexp',
                      value: '.*',
                    },
                    ignoreCase: {
                      kind: 'constant',
                      type: 'Bool',
                      value: false,
                    },
                    as: {
                      kind: 'array',
                      type: 'Array',
                      value: [
                        {
                          kind: 'constant',
                          type: 'String',
                          value: 'order_id1',
                        },
                      ],
                    },
                  },
                  outputName: null,
                },
                tableData: null,
                portId: null,
                id: 31233555,
                hash: '82ab749e611c740ea53fba8a87ae9ab759b18dc7',
                pbemappingartifacts: [],
                targetmappingartifacts: [],
                udfscriptlines: [],
                dependencies: [],
              },
              {
                columnMetadata: {},
                task: {
                  annotations: {},
                  kind: 'task',
                  type: 'SetType',
                  parameters: {
                    col: {
                      kind: 'array',
                      type: 'Array',
                      value: [
                        {
                          kind: 'column',
                          type: 'Column',
                          value: 'order_id1',
                          relation: null,
                        },
                      ],
                    },
                    type: {
                      kind: 'bundle',
                      type: 'Bundle',
                      value: 'String',
                    },
                  },
                  outputName: null,
                },
                tableData: null,
                portId: null,
                id: 31233544,
                hash: 'befe53f491ec53d383cfb5a589acf4e7078a7d97',
                pbemappingartifacts: [],
                targetmappingartifacts: [],
                udfscriptlines: [],
                dependencies: [],
              },
              {
                columnMetadata: {},
                task: {
                  annotations: {},
                  kind: 'task',
                  type: 'Rename',
                  parameters: {
                    type: {
                      kind: 'bundle',
                      type: 'Bundle',
                      value: 'manual',
                    },
                    mapping: {
                      kind: 'matrix',
                      type: 'Matrix',
                      value: [
                        {
                          kind: 'array',
                          type: 'Array',
                          value: [
                            {
                              kind: 'column',
                              type: 'Column',
                              value: 'order_id1',
                              relation: null,
                            },
                            {
                              kind: 'constant',
                              type: 'String',
                              value: 'insertId',
                            },
                          ],
                        },
                      ],
                    },
                  },
                  outputName: null,
                },
                tableData: null,
                portId: null,
                id: 31233552,
                hash: '9fc2b29a588deac2f1f3529a2439729b62460a12',
                pbemappingartifacts: [],
                targetmappingartifacts: [],
                udfscriptlines: [],
                dependencies: [],
              },
              {
                columnMetadata: {},
                task: {
                  annotations: {
                    transformSpecificData: null,
                    disabled: true,
                    task: {
                      annotations: {
                        outputColumnAnnotations: {
                          insertId: {
                            type: [
                              'String',
                            ],
                            _likely_types: [
                              [
                                'String',
                              ],
                              [
                                'Integer',
                              ],
                              [
                                'Phone',
                              ],
                              [
                                'SSN',
                              ],
                              [
                                'Map',
                              ],
                            ],
                          },
                        },
                      },
                      kind: 'task',
                      type: 'Merge',
                      parameters: {
                        col: {
                          kind: 'array',
                          type: 'Array',
                          value: [
                            {
                              kind: 'column',
                              type: 'Column',
                              value: 'order_id',
                              relation: null,
                            },
                            {
                              kind: 'column',
                              type: 'Column',
                              value: 'order_seq',
                              relation: null,
                            },
                          ],
                        },
                        with: {
                          kind: 'constant',
                          type: 'String',
                          value: '_',
                        },
                        as: {
                          kind: 'constant',
                          type: 'String',
                          value: 'insertId',
                        },
                      },
                      outputName: null,
                    },
                    tableData: 'null',
                  },
                  kind: 'task',
                  type: 'Comment',
                  parameters: {
                    comment: {
                      kind: 'constant',
                      type: 'String',
                      value: "Concatenate order_id, order_seq separated by '_'",
                    },
                  },
                  outputName: null,
                },
                tableData: null,
                portId: null,
                id: 31233549,
                hash: '09fa0616e99c18aba3cb0fe89fa73045c9b5c739',
                pbemappingartifacts: [],
                targetmappingartifacts: [],
                udfscriptlines: [],
                dependencies: [],
              },
              {
                columnMetadata: {
                  processing_dt: {
                    id: '-8gsctix',
                  },
                },
                task: {
                  annotations: {
                    outputColumnAnnotations: {
                      processing_dt: {
                        type: [
                          'Datetime',
                          'yy-mm-dd hh:mm:ss',
                          'yyyy*mm*dd*HH:MM:SS',
                        ],
                      },
                    },
                  },
                  kind: 'task',
                  type: 'Derive',
                  parameters: {
                    type: {
                      kind: 'bundle',
                      type: 'Bundle',
                      value: 'single',
                    },
                    value: {
                      annotations: {},
                      kind: 'func',
                      type: 'Now',
                      parameters: {
                        timezone: {
                          kind: 'constant',
                          type: 'String',
                          value: 'Asia/Taipei',
                        },
                      },
                    },
                    as: {
                      kind: 'constant',
                      type: 'String',
                      value: 'processing_dt',
                    },
                  },
                  outputName: null,
                },
                tableData: null,
                portId: null,
                id: 31130837,
                hash: '1a13646890dca5a262d04a412d9a7c1211afba3f',
                pbemappingartifacts: [],
                targetmappingartifacts: [],
                udfscriptlines: [],
                dependencies: [],
              },
            ],
            dqScriptRules: [],
          },
          {
            id: 5025401,
            name: 'column preproc',
            description: null,
            active: true,
            nextPortId: 1,
            steps: [
              {
                columnMetadata: {
                  column2: {
                    id: '2zog9ol',
                  },
                  column3: {
                    id: '2zog9om',
                  },
                  column4: {
                    id: '2zog9on',
                  },
                  column5: {
                    id: '2zog9oo',
                  },
                  column6: {
                    id: '2zog9op',
                  },
                  column7: {
                    id: '2zog9oq',
                  },
                  column8: {
                    id: '2zog9or',
                  },
                  column9: {
                    id: '2zog9os',
                  },
                  column10: {
                    id: '20we6r8',
                  },
                  column11: {
                    id: '20we6r9',
                  },
                  column12: {
                    id: '20we6ra',
                  },
                  column13: {
                    id: '20we6rb',
                  },
                  column14: {
                    id: '20we6rc',
                  },
                  column15: {
                    id: '20we6rd',
                  },
                  column16: {
                    id: '20we6re',
                  },
                  column17: {
                    id: '20we6rf',
                  },
                  column18: {
                    id: '20we6rg',
                  },
                  column19: {
                    id: '20we6rh',
                  },
                  column20: {
                    id: '20we6s5',
                  },
                  column21: {
                    id: '20we6s6',
                  },
                  column22: {
                    id: '20we6s7',
                  },
                  column23: {
                    id: '20we6s8',
                  },
                  column24: {
                    id: '20we6s9',
                  },
                  column25: {
                    id: '20we6sa',
                  },
                  column26: {
                    id: '20we6sb',
                  },
                  column27: {
                    id: '20we6sc',
                  },
                  column28: {
                    id: '20we6sd',
                  },
                  column29: {
                    id: '20we6se',
                  },
                  column30: {
                    id: '20we6t2',
                  },
                  TRIFACTA__FILE_LINEAGE_INFO: {
                    id: '68royxc',
                  },
                },
                task: {
                  annotations: {
                    hidden: true,
                  },
                  kind: 'task',
                  type: 'Load',
                  parameters: {
                    format: {
                      annotations: {},
                      kind: 'func',
                      type: 'FormatBlob',
                      parameters: {},
                    },
                    location: {
                      kind: 'constant',
                      type: 'String',
                      value: 'portId://null',
                    },
                    enableLineage: {
                      kind: 'constant',
                      type: 'Bool',
                      value: true,
                    },
                    as: {
                      kind: 'array',
                      type: 'Array',
                      value: [
                        {
                          kind: 'constant',
                          type: 'String',
                          value: 'column1',
                        },
                      ],
                    },
                  },
                  outputName: 'original_datasource_591368',
                },
                tableData: null,
                portId: null,
                id: 31130838,
                hash: 'cb649ee99fe4b15cb27f66d7451cd2bad6ede315',
                pbemappingartifacts: [],
                targetmappingartifacts: [],
                udfscriptlines: [],
                dependencies: [],
              },
              {
                columnMetadata: {
                  TRIFACTA__LINEAGE_INFO: {
                    id: '-2aulw2x',
                  },
                },
                task: {
                  annotations: {},
                  kind: 'task',
                  type: 'Delete',
                  parameters: {
                    row: {
                      annotations: {
                        infix: true,
                        parenthetical: false,
                      },
                      kind: 'func',
                      type: 'Equal',
                      parameters: {
                        lhs: {
                          annotations: {},
                          kind: 'func',
                          type: 'SourceRowNumber',
                          parameters: {},
                        },
                        rhs: {
                          kind: 'constant',
                          type: 'Integer',
                          value: 1,
                        },
                      },
                    },
                  },
                  outputName: null,
                },
                tableData: null,
                portId: null,
                id: 31130839,
                hash: 'b918ef709b1dba48d13fc12ff20d9041e6aa7569',
                pbemappingartifacts: [],
                targetmappingartifacts: [],
                udfscriptlines: [],
                dependencies: [],
              },
              {
                columnMetadata: {},
                task: {
                  annotations: {
                    outputColumnAnnotations: {
                      column2: {
                        type: [
                          'Emailaddress',
                        ],
                        _likely_types: [
                          [
                            'Emailaddress',
                          ],
                          [
                            'Url',
                          ],
                          [
                            'String',
                          ],
                          [
                            'Integer',
                          ],
                          [
                            'Phone',
                          ],
                        ],
                      },
                      column3: {
                        type: [
                          'String',
                        ],
                        _likely_types: [
                          [
                            'String',
                          ],
                          [
                            'Integer',
                          ],
                          [
                            'Phone',
                          ],
                          [
                            'SSN',
                          ],
                          [
                            'Map',
                          ],
                        ],
                      },
                      column4: {
                        type: [
                          'String',
                        ],
                        _likely_types: [
                          [
                            'String',
                          ],
                          [
                            'Integer',
                          ],
                          [
                            'Phone',
                          ],
                          [
                            'SSN',
                          ],
                          [
                            'Map',
                          ],
                        ],
                      },
                      column5: {
                        type: [
                          'Integer',
                        ],
                        _likely_types: [
                          [
                            'Integer',
                          ],
                          [
                            'Float',
                          ],
                          [
                            'String',
                          ],
                          [
                            'Phone',
                          ],
                          [
                            'SSN',
                          ],
                        ],
                      },
                      column6: {
                        type: [
                          'String',
                        ],
                        _likely_types: [
                          [
                            'String',
                          ],
                          [
                            'Integer',
                          ],
                          [
                            'Phone',
                          ],
                          [
                            'SSN',
                          ],
                          [
                            'Map',
                          ],
                        ],
                      },
                      column7: {
                        type: [
                          'String',
                        ],
                        _likely_types: [
                          [
                            'String',
                          ],
                          [
                            'Integer',
                          ],
                          [
                            'Phone',
                          ],
                          [
                            'SSN',
                          ],
                          [
                            'Map',
                          ],
                        ],
                      },
                      column8: {
                        type: [
                          'Integer',
                        ],
                        _likely_types: [
                          [
                            'Integer',
                          ],
                          [
                            'Float',
                          ],
                          [
                            'String',
                          ],
                          [
                            'Phone',
                          ],
                          [
                            'SSN',
                          ],
                        ],
                      },
                      column9: {
                        type: [
                          'String',
                        ],
                        _likely_types: [
                          [
                            'String',
                          ],
                          [
                            'Integer',
                          ],
                          [
                            'Phone',
                          ],
                          [
                            'SSN',
                          ],
                          [
                            'Map',
                          ],
                        ],
                      },
                      column10: {
                        type: [
                          'String',
                        ],
                        _likely_types: [
                          [
                            'String',
                          ],
                          [
                            'Datetime',
                            'mm-dd',
                            'mm*dd',
                          ],
                          [
                            'Integer',
                          ],
                          [
                            'Phone',
                          ],
                          [
                            'SSN',
                          ],
                        ],
                      },
                      column11: {
                        type: [
                          'Datetime',
                          'yy-mm-dd',
                          'yyyy*mm*dd',
                        ],
                        _likely_types: [
                          [
                            'Datetime',
                            'yy-mm-dd',
                            'yyyy*mm*dd',
                          ],
                          [
                            'String',
                          ],
                          [
                            'Integer',
                          ],
                          [
                            'Phone',
                          ],
                          [
                            'SSN',
                          ],
                        ],
                      },
                      column12: {
                        type: [
                          'String',
                        ],
                        _likely_types: [
                          [
                            'String',
                          ],
                          [
                            'Integer',
                          ],
                          [
                            'Phone',
                          ],
                          [
                            'SSN',
                          ],
                          [
                            'Map',
                          ],
                        ],
                      },
                      column13: {
                        type: [
                          'String',
                        ],
                        _likely_types: [
                          [
                            'String',
                          ],
                          [
                            'State',
                          ],
                          [
                            'Integer',
                          ],
                          [
                            'Phone',
                          ],
                          [
                            'SSN',
                          ],
                        ],
                      },
                      column14: {
                        type: [
                          'String',
                        ],
                        _likely_types: [
                          [
                            'String',
                          ],
                          [
                            'Integer',
                          ],
                          [
                            'Phone',
                          ],
                          [
                            'SSN',
                          ],
                          [
                            'Map',
                          ],
                        ],
                      },
                      column15: {
                        type: [
                          'String',
                        ],
                        _likely_types: [
                          [
                            'String',
                          ],
                          [
                            'Integer',
                          ],
                          [
                            'Phone',
                          ],
                          [
                            'SSN',
                          ],
                          [
                            'Map',
                          ],
                        ],
                      },
                      column16: {
                        type: [
                          'String',
                        ],
                        _likely_types: [
                          [
                            'String',
                          ],
                          [
                            'Integer',
                          ],
                          [
                            'Phone',
                          ],
                          [
                            'SSN',
                          ],
                          [
                            'Map',
                          ],
                        ],
                      },
                      column17: {
                        type: [
                          'String',
                        ],
                        _likely_types: [
                          [
                            'String',
                          ],
                          [
                            'Integer',
                          ],
                          [
                            'Phone',
                          ],
                          [
                            'SSN',
                          ],
                          [
                            'Map',
                          ],
                        ],
                      },
                      column18: {
                        type: [
                          'Integer',
                        ],
                        _likely_types: [
                          [
                            'Integer',
                          ],
                          [
                            'Float',
                          ],
                          [
                            'String',
                          ],
                          [
                            'Phone',
                          ],
                          [
                            'SSN',
                          ],
                        ],
                      },
                      column19: {
                        type: [
                          'String',
                        ],
                        _likely_types: [
                          [
                            'String',
                          ],
                          [
                            'Integer',
                          ],
                          [
                            'Phone',
                          ],
                          [
                            'SSN',
                          ],
                          [
                            'Map',
                          ],
                        ],
                      },
                      column20: {
                        type: [
                          'Datetime',
                          'yy-mm-dd',
                          'yyyy*mm*dd',
                        ],
                        _likely_types: [
                          [
                            'Datetime',
                            'yy-mm-dd',
                            'yyyy*mm*dd',
                          ],
                          [
                            'Datetime',
                            'yy-dd-mm',
                            'yyyy*dd*mm',
                          ],
                          [
                            'String',
                          ],
                          [
                            'Integer',
                          ],
                          [
                            'Phone',
                          ],
                        ],
                      },
                      column21: {
                        type: [
                          'String',
                        ],
                        _likely_types: [
                          [
                            'String',
                          ],
                          [
                            'Integer',
                          ],
                          [
                            'Phone',
                          ],
                          [
                            'SSN',
                          ],
                          [
                            'Map',
                          ],
                        ],
                      },
                      column22: {
                        type: [
                          'Integer',
                        ],
                        _likely_types: [
                          [
                            'Integer',
                          ],
                          [
                            'String',
                          ],
                          [
                            'Float',
                          ],
                          [
                            'Phone',
                          ],
                          [
                            'SSN',
                          ],
                        ],
                      },
                      column23: {
                        type: [
                          'String',
                        ],
                        _likely_types: [
                          [
                            'String',
                          ],
                          [
                            'Integer',
                          ],
                          [
                            'Phone',
                          ],
                          [
                            'SSN',
                          ],
                          [
                            'Map',
                          ],
                        ],
                      },
                      column24: {
                        type: [
                          'String',
                        ],
                        _likely_types: [
                          [
                            'String',
                          ],
                          [
                            'Integer',
                          ],
                          [
                            'Phone',
                          ],
                          [
                            'SSN',
                          ],
                          [
                            'Map',
                          ],
                        ],
                      },
                      column25: {
                        type: [
                          'String',
                        ],
                        _likely_types: [
                          [
                            'String',
                          ],
                          [
                            'Integer',
                          ],
                          [
                            'Phone',
                          ],
                          [
                            'SSN',
                          ],
                          [
                            'Map',
                          ],
                        ],
                      },
                      column26: {
                        type: [
                          'String',
                        ],
                        _likely_types: [
                          [
                            'String',
                          ],
                          [
                            'Integer',
                          ],
                          [
                            'Phone',
                          ],
                          [
                            'SSN',
                          ],
                          [
                            'Map',
                          ],
                        ],
                      },
                      column27: {
                        type: [
                          'String',
                        ],
                        _likely_types: [
                          [
                            'String',
                          ],
                          [
                            'Integer',
                          ],
                          [
                            'Phone',
                          ],
                          [
                            'SSN',
                          ],
                          [
                            'Map',
                          ],
                        ],
                      },
                    },
                  },
                  kind: 'task',
                  type: 'TextFormat',
                  parameters: {
                    col: {
                      kind: 'array',
                      type: 'Array',
                      value: [
                        {
                          kind: 'column',
                          type: 'Column',
                          value: 'column2',
                          relation: null,
                        },
                        {
                          kind: 'column',
                          type: 'Column',
                          value: 'column3',
                          relation: null,
                        },
                        {
                          kind: 'column',
                          type: 'Column',
                          value: 'column4',
                          relation: null,
                        },
                        {
                          kind: 'column',
                          type: 'Column',
                          value: 'column5',
                          relation: null,
                        },
                        {
                          kind: 'column',
                          type: 'Column',
                          value: 'column6',
                          relation: null,
                        },
                        {
                          kind: 'column',
                          type: 'Column',
                          value: 'column7',
                          relation: null,
                        },
                        {
                          kind: 'column',
                          type: 'Column',
                          value: 'column8',
                          relation: null,
                        },
                        {
                          kind: 'column',
                          type: 'Column',
                          value: 'column9',
                          relation: null,
                        },
                        {
                          kind: 'column',
                          type: 'Column',
                          value: 'column10',
                          relation: null,
                        },
                        {
                          kind: 'column',
                          type: 'Column',
                          value: 'column11',
                          relation: null,
                        },
                        {
                          kind: 'column',
                          type: 'Column',
                          value: 'column12',
                          relation: null,
                        },
                        {
                          kind: 'column',
                          type: 'Column',
                          value: 'column13',
                          relation: null,
                        },
                        {
                          kind: 'column',
                          type: 'Column',
                          value: 'column14',
                          relation: null,
                        },
                        {
                          kind: 'column',
                          type: 'Column',
                          value: 'column15',
                          relation: null,
                        },
                        {
                          kind: 'column',
                          type: 'Column',
                          value: 'column16',
                          relation: null,
                        },
                        {
                          kind: 'column',
                          type: 'Column',
                          value: 'column17',
                          relation: null,
                        },
                        {
                          kind: 'column',
                          type: 'Column',
                          value: 'column18',
                          relation: null,
                        },
                        {
                          kind: 'column',
                          type: 'Column',
                          value: 'column19',
                          relation: null,
                        },
                        {
                          kind: 'column',
                          type: 'Column',
                          value: 'column20',
                          relation: null,
                        },
                        {
                          kind: 'column',
                          type: 'Column',
                          value: 'column21',
                          relation: null,
                        },
                        {
                          kind: 'column',
                          type: 'Column',
                          value: 'column22',
                          relation: null,
                        },
                        {
                          kind: 'column',
                          type: 'Column',
                          value: 'column23',
                          relation: null,
                        },
                        {
                          kind: 'column',
                          type: 'Column',
                          value: 'column24',
                          relation: null,
                        },
                        {
                          kind: 'column',
                          type: 'Column',
                          value: 'column25',
                          relation: null,
                        },
                        {
                          kind: 'column',
                          type: 'Column',
                          value: 'column26',
                          relation: null,
                        },
                        {
                          kind: 'column',
                          type: 'Column',
                          value: 'column27',
                          relation: null,
                        },
                      ],
                    },
                    type: {
                      kind: 'bundle',
                      type: 'Bundle',
                      value: 'trimquotes',
                    },
                  },
                  outputName: null,
                },
                tableData: null,
                portId: null,
                id: 31130840,
                hash: '093105e4ac781377d03162a46b0efa1696622107',
                pbemappingartifacts: [],
                targetmappingartifacts: [],
                udfscriptlines: [],
                dependencies: [],
              },
              {
                columnMetadata: {},
                task: {
                  annotations: {
                    outputColumnAnnotations: {
                      column2: {
                        type: [
                          'Emailaddress',
                        ],
                        _likely_types: [
                          [
                            'Emailaddress',
                          ],
                          [
                            'Url',
                          ],
                          [
                            'String',
                          ],
                          [
                            'Integer',
                          ],
                          [
                            'Phone',
                          ],
                        ],
                      },
                      column3: {
                        type: [
                          'String',
                        ],
                        _likely_types: [
                          [
                            'String',
                          ],
                          [
                            'Integer',
                          ],
                          [
                            'Phone',
                          ],
                          [
                            'SSN',
                          ],
                          [
                            'Map',
                          ],
                        ],
                      },
                      column4: {
                        type: [
                          'String',
                        ],
                        _likely_types: [
                          [
                            'String',
                          ],
                          [
                            'Integer',
                          ],
                          [
                            'Phone',
                          ],
                          [
                            'SSN',
                          ],
                          [
                            'Map',
                          ],
                        ],
                      },
                      column5: {
                        type: [
                          'Integer',
                        ],
                        _likely_types: [
                          [
                            'Integer',
                          ],
                          [
                            'Float',
                          ],
                          [
                            'String',
                          ],
                          [
                            'Phone',
                          ],
                          [
                            'SSN',
                          ],
                        ],
                      },
                      column6: {
                        type: [
                          'String',
                        ],
                        _likely_types: [
                          [
                            'String',
                          ],
                          [
                            'Integer',
                          ],
                          [
                            'Phone',
                          ],
                          [
                            'SSN',
                          ],
                          [
                            'Map',
                          ],
                        ],
                      },
                      column7: {
                        type: [
                          'Integer',
                        ],
                        _likely_types: [
                          [
                            'Integer',
                          ],
                          [
                            'Float',
                          ],
                          [
                            'String',
                          ],
                          [
                            'Phone',
                          ],
                          [
                            'SSN',
                          ],
                        ],
                      },
                      column8: {
                        type: [
                          'Integer',
                        ],
                        _likely_types: [
                          [
                            'Integer',
                          ],
                          [
                            'Float',
                          ],
                          [
                            'String',
                          ],
                          [
                            'Phone',
                          ],
                          [
                            'SSN',
                          ],
                        ],
                      },
                      column9: {
                        type: [
                          'String',
                        ],
                        _likely_types: [
                          [
                            'String',
                          ],
                          [
                            'Integer',
                          ],
                          [
                            'Phone',
                          ],
                          [
                            'SSN',
                          ],
                          [
                            'Map',
                          ],
                        ],
                      },
                      column10: {
                        type: [
                          'Datetime',
                          'mm-dd',
                          'mm*dd',
                        ],
                        _likely_types: [
                          [
                            'Datetime',
                            'mm-dd',
                            'mm*dd',
                          ],
                          [
                            'Datetime',
                            'dd-mm',
                            'dd*mm',
                          ],
                          [
                            'String',
                          ],
                          [
                            'Integer',
                          ],
                          [
                            'Phone',
                          ],
                        ],
                      },
                      column11: {
                        type: [
                          'Datetime',
                          'yy-mm-dd',
                          'yyyy*mm*dd',
                        ],
                        _likely_types: [
                          [
                            'Datetime',
                            'yy-mm-dd',
                            'yyyy*mm*dd',
                          ],
                          [
                            'String',
                          ],
                          [
                            'Integer',
                          ],
                          [
                            'Phone',
                          ],
                          [
                            'SSN',
                          ],
                        ],
                      },
                      column12: {
                        type: [
                          'String',
                        ],
                        _likely_types: [
                          [
                            'String',
                          ],
                          [
                            'Integer',
                          ],
                          [
                            'Phone',
                          ],
                          [
                            'SSN',
                          ],
                          [
                            'Map',
                          ],
                        ],
                      },
                      column13: {
                        type: [
                          'String',
                        ],
                        _likely_types: [
                          [
                            'String',
                          ],
                          [
                            'Integer',
                          ],
                          [
                            'Phone',
                          ],
                          [
                            'SSN',
                          ],
                          [
                            'Map',
                          ],
                        ],
                      },
                      column14: {
                        type: [
                          'String',
                        ],
                        _likely_types: [
                          [
                            'String',
                          ],
                          [
                            'Url',
                          ],
                          [
                            'Integer',
                          ],
                          [
                            'Phone',
                          ],
                          [
                            'SSN',
                          ],
                        ],
                      },
                      column15: {
                        type: [
                          'String',
                        ],
                        _likely_types: [
                          [
                            'String',
                          ],
                          [
                            'Integer',
                          ],
                          [
                            'Phone',
                          ],
                          [
                            'SSN',
                          ],
                          [
                            'Map',
                          ],
                        ],
                      },
                      column16: {
                        type: [
                          'String',
                        ],
                        _likely_types: [
                          [
                            'String',
                          ],
                          [
                            'Integer',
                          ],
                          [
                            'Phone',
                          ],
                          [
                            'SSN',
                          ],
                          [
                            'Map',
                          ],
                        ],
                      },
                      column17: {
                        type: [
                          'Integer',
                        ],
                        _likely_types: [
                          [
                            'Integer',
                          ],
                          [
                            'Float',
                          ],
                          [
                            'String',
                          ],
                          [
                            'Phone',
                          ],
                          [
                            'SSN',
                          ],
                        ],
                      },
                      column18: {
                        type: [
                          'Integer',
                        ],
                        _likely_types: [
                          [
                            'Integer',
                          ],
                          [
                            'Float',
                          ],
                          [
                            'String',
                          ],
                          [
                            'Phone',
                          ],
                          [
                            'SSN',
                          ],
                        ],
                      },
                      column19: {
                        type: [
                          'Integer',
                        ],
                        _likely_types: [
                          [
                            'Integer',
                          ],
                          [
                            'Float',
                          ],
                          [
                            'String',
                          ],
                          [
                            'Phone',
                          ],
                          [
                            'SSN',
                          ],
                        ],
                      },
                      column20: {
                        type: [
                          'Datetime',
                          'yy-mm-dd',
                          'yyyy*mm*dd',
                        ],
                        _likely_types: [
                          [
                            'Datetime',
                            'yy-mm-dd',
                            'yyyy*mm*dd',
                          ],
                          [
                            'Datetime',
                            'yy-dd-mm',
                            'yyyy*dd*mm',
                          ],
                          [
                            'String',
                          ],
                          [
                            'Integer',
                          ],
                          [
                            'Phone',
                          ],
                        ],
                      },
                      column21: {
                        type: [
                          'String',
                        ],
                        _likely_types: [
                          [
                            'String',
                          ],
                          [
                            'Integer',
                          ],
                          [
                            'Phone',
                          ],
                          [
                            'SSN',
                          ],
                          [
                            'Map',
                          ],
                        ],
                      },
                      column22: {
                        type: [
                          'Integer',
                        ],
                        _likely_types: [
                          [
                            'Integer',
                          ],
                          [
                            'String',
                          ],
                          [
                            'Float',
                          ],
                          [
                            'Phone',
                          ],
                          [
                            'SSN',
                          ],
                        ],
                      },
                      column23: {
                        type: [
                          'String',
                        ],
                        _likely_types: [
                          [
                            'String',
                          ],
                          [
                            'Integer',
                          ],
                          [
                            'Phone',
                          ],
                          [
                            'SSN',
                          ],
                          [
                            'Map',
                          ],
                        ],
                      },
                      column24: {
                        type: [
                          'String',
                        ],
                        _likely_types: [
                          [
                            'String',
                          ],
                          [
                            'Integer',
                          ],
                          [
                            'Phone',
                          ],
                          [
                            'SSN',
                          ],
                          [
                            'Map',
                          ],
                        ],
                      },
                      column25: {
                        type: [
                          'String',
                        ],
                        _likely_types: [
                          [
                            'String',
                          ],
                          [
                            'Integer',
                          ],
                          [
                            'Phone',
                          ],
                          [
                            'SSN',
                          ],
                          [
                            'Map',
                          ],
                        ],
                      },
                      column26: {
                        type: [
                          'String',
                        ],
                        _likely_types: [
                          [
                            'String',
                          ],
                          [
                            'Integer',
                          ],
                          [
                            'Phone',
                          ],
                          [
                            'SSN',
                          ],
                          [
                            'Map',
                          ],
                        ],
                      },
                    },
                  },
                  kind: 'task',
                  type: 'ReplacePatterns',
                  parameters: {
                    with: {
                      kind: 'constant',
                      type: 'String',
                      value: '',
                    },
                    col: {
                      kind: 'array',
                      type: 'Array',
                      value: [
                        {
                          kind: 'column',
                          type: 'Column',
                          value: 'column2',
                          relation: null,
                        },
                        {
                          kind: 'column',
                          type: 'Column',
                          value: 'column3',
                          relation: null,
                        },
                        {
                          kind: 'column',
                          type: 'Column',
                          value: 'column4',
                          relation: null,
                        },
                        {
                          kind: 'column',
                          type: 'Column',
                          value: 'column5',
                          relation: null,
                        },
                        {
                          kind: 'column',
                          type: 'Column',
                          value: 'column6',
                          relation: null,
                        },
                        {
                          kind: 'column',
                          type: 'Column',
                          value: 'column7',
                          relation: null,
                        },
                        {
                          kind: 'column',
                          type: 'Column',
                          value: 'column8',
                          relation: null,
                        },
                        {
                          kind: 'column',
                          type: 'Column',
                          value: 'column9',
                          relation: null,
                        },
                        {
                          kind: 'column',
                          type: 'Column',
                          value: 'column10',
                          relation: null,
                        },
                        {
                          kind: 'column',
                          type: 'Column',
                          value: 'column11',
                          relation: null,
                        },
                        {
                          kind: 'column',
                          type: 'Column',
                          value: 'column12',
                          relation: null,
                        },
                        {
                          kind: 'column',
                          type: 'Column',
                          value: 'column13',
                          relation: null,
                        },
                        {
                          kind: 'column',
                          type: 'Column',
                          value: 'column14',
                          relation: null,
                        },
                        {
                          kind: 'column',
                          type: 'Column',
                          value: 'column15',
                          relation: null,
                        },
                        {
                          kind: 'column',
                          type: 'Column',
                          value: 'column16',
                          relation: null,
                        },
                        {
                          kind: 'column',
                          type: 'Column',
                          value: 'column17',
                          relation: null,
                        },
                        {
                          kind: 'column',
                          type: 'Column',
                          value: 'column18',
                          relation: null,
                        },
                        {
                          kind: 'column',
                          type: 'Column',
                          value: 'column19',
                          relation: null,
                        },
                        {
                          kind: 'column',
                          type: 'Column',
                          value: 'column20',
                          relation: null,
                        },
                        {
                          kind: 'column',
                          type: 'Column',
                          value: 'column21',
                          relation: null,
                        },
                        {
                          kind: 'column',
                          type: 'Column',
                          value: 'column22',
                          relation: null,
                        },
                        {
                          kind: 'column',
                          type: 'Column',
                          value: 'column23',
                          relation: null,
                        },
                        {
                          kind: 'column',
                          type: 'Column',
                          value: 'column24',
                          relation: null,
                        },
                        {
                          kind: 'column',
                          type: 'Column',
                          value: 'column25',
                          relation: null,
                        },
                        {
                          kind: 'column',
                          type: 'Column',
                          value: 'column26',
                          relation: null,
                        },
                      ],
                    },
                    on: {
                      kind: 'constant',
                      type: 'Regexp',
                      value: '^\\t|\\t$',
                    },
                    ignoreCase: {
                      kind: 'constant',
                      type: 'Bool',
                      value: false,
                    },
                    global: {
                      kind: 'constant',
                      type: 'Bool',
                      value: true,
                    },
                  },
                  outputName: null,
                },
                tableData: null,
                portId: null,
                id: 31130841,
                hash: '5016ac8ff49bf0c8590d07613cd8c9c71c777dc6',
                pbemappingartifacts: [],
                targetmappingartifacts: [],
                udfscriptlines: [],
                dependencies: [],
              },
              {
                columnMetadata: {},
                task: {
                  annotations: {
                    outputColumnAnnotations: {},
                  },
                  kind: 'task',
                  type: 'Rename',
                  parameters: {
                    type: {
                      kind: 'bundle',
                      type: 'Bundle',
                      value: 'manual',
                    },
                    mapping: {
                      kind: 'matrix',
                      type: 'Matrix',
                      value: [
                        {
                          kind: 'array',
                          type: 'Array',
                          value: [
                            {
                              kind: 'column',
                              type: 'Column',
                              value: 'column2',
                              relation: null,
                            },
                            {
                              kind: 'constant',
                              type: 'String',
                              value: 'email',
                            },
                          ],
                        },
                      ],
                    },
                  },
                  outputName: null,
                },
                tableData: null,
                portId: null,
                id: 31130842,
                hash: '76bb75732a33183b273e5015101201096d1025ce',
                pbemappingartifacts: [],
                targetmappingartifacts: [],
                udfscriptlines: [],
                dependencies: [],
              },
              {
                columnMetadata: {},
                task: {
                  annotations: {
                    outputColumnAnnotations: {},
                  },
                  kind: 'task',
                  type: 'Rename',
                  parameters: {
                    type: {
                      kind: 'bundle',
                      type: 'Bundle',
                      value: 'manual',
                    },
                    mapping: {
                      kind: 'matrix',
                      type: 'Matrix',
                      value: [
                        {
                          kind: 'array',
                          type: 'Array',
                          value: [
                            {
                              kind: 'column',
                              type: 'Column',
                              value: 'column3',
                              relation: null,
                            },
                            {
                              kind: 'constant',
                              type: 'String',
                              value: 'cellphone_number',
                            },
                          ],
                        },
                      ],
                    },
                  },
                  outputName: null,
                },
                tableData: null,
                portId: null,
                id: 31130843,
                hash: '2bf59367242c3d0fe0872339ab02cc8e90209d8d',
                pbemappingartifacts: [],
                targetmappingartifacts: [],
                udfscriptlines: [],
                dependencies: [],
              },
              {
                columnMetadata: {},
                task: {
                  annotations: {
                    outputColumnAnnotations: {},
                  },
                  kind: 'task',
                  type: 'Rename',
                  parameters: {
                    type: {
                      kind: 'bundle',
                      type: 'Bundle',
                      value: 'manual',
                    },
                    mapping: {
                      kind: 'matrix',
                      type: 'Matrix',
                      value: [
                        {
                          kind: 'array',
                          type: 'Array',
                          value: [
                            {
                              kind: 'column',
                              type: 'Column',
                              value: 'column4',
                              relation: null,
                            },
                            {
                              kind: 'constant',
                              type: 'String',
                              value: 'cust_name',
                            },
                          ],
                        },
                      ],
                    },
                  },
                  outputName: null,
                },
                tableData: null,
                portId: null,
                id: 31130844,
                hash: '25c33e6728fb606aab7251ec6d2178573abe72e2',
                pbemappingartifacts: [],
                targetmappingartifacts: [],
                udfscriptlines: [],
                dependencies: [],
              },
              {
                columnMetadata: {},
                task: {
                  annotations: {
                    outputColumnAnnotations: {},
                  },
                  kind: 'task',
                  type: 'Rename',
                  parameters: {
                    type: {
                      kind: 'bundle',
                      type: 'Bundle',
                      value: 'manual',
                    },
                    mapping: {
                      kind: 'matrix',
                      type: 'Matrix',
                      value: [
                        {
                          kind: 'array',
                          type: 'Array',
                          value: [
                            {
                              kind: 'column',
                              type: 'Column',
                              value: 'column5',
                              relation: null,
                            },
                            {
                              kind: 'constant',
                              type: 'String',
                              value: 'cust_id',
                            },
                          ],
                        },
                      ],
                    },
                  },
                  outputName: null,
                },
                tableData: null,
                portId: null,
                id: 31130845,
                hash: '1daf2562ff85d39bdff0ee1770a6d701a755ab1f',
                pbemappingartifacts: [],
                targetmappingartifacts: [],
                udfscriptlines: [],
                dependencies: [],
              },
              {
                columnMetadata: {
                  cust_id1: {
                    id: '-1hwlc7e',
                  },
                  cust_id2: {
                    id: '-1hwlc7d',
                  },
                },
                task: {
                  annotations: {
                    outputColumnAnnotations: {
                      cust_id1: {
                        type: [
                          'Integer',
                        ],
                        _likely_types: [
                          [
                            'Integer',
                          ],
                          [
                            'Float',
                          ],
                          [
                            'String',
                          ],
                          [
                            'Phone',
                          ],
                          [
                            'SSN',
                          ],
                        ],
                      },
                      cust_id2: {
                        type: [
                          'String',
                        ],
                        _likely_types: [
                          [
                            'String',
                          ],
                          [
                            'Integer',
                          ],
                          [
                            'Bool',
                          ],
                          [
                            'Float',
                          ],
                          [
                            'Phone',
                          ],
                        ],
                      },
                    },
                  },
                  kind: 'task',
                  type: 'SplitPatterns',
                  parameters: {
                    col: {
                      kind: 'column',
                      type: 'Column',
                      value: 'cust_id',
                      relation: null,
                    },
                    type: {
                      kind: 'bundle',
                      type: 'Bundle',
                      value: 'between',
                    },
                    start: {
                      kind: 'constant',
                      type: 'Regexp',
                      value: '[\\/-]',
                    },
                    includeStart: {
                      kind: 'constant',
                      type: 'Bool',
                      value: true,
                    },
                    includeEnd: {
                      kind: 'constant',
                      type: 'Bool',
                      value: false,
                    },
                    ignoreCase: {
                      kind: 'constant',
                      type: 'Bool',
                      value: false,
                    },
                    as: {
                      kind: 'array',
                      type: 'Array',
                      value: [
                        {
                          kind: 'constant',
                          type: 'String',
                          value: 'cust_id1',
                        },
                        {
                          kind: 'constant',
                          type: 'String',
                          value: 'cust_id2',
                        },
                      ],
                    },
                  },
                  outputName: null,
                },
                tableData: null,
                portId: null,
                id: 31130846,
                hash: 'c2e50d34d0bb25597e7146ed457950d0743944aa',
                pbemappingartifacts: [],
                targetmappingartifacts: [],
                udfscriptlines: [],
                dependencies: [],
              },
              {
                columnMetadata: {},
                task: {
                  annotations: {},
                  kind: 'task',
                  type: 'Rename',
                  parameters: {
                    type: {
                      kind: 'bundle',
                      type: 'Bundle',
                      value: 'manual',
                    },
                    mapping: {
                      kind: 'matrix',
                      type: 'Matrix',
                      value: [
                        {
                          kind: 'array',
                          type: 'Array',
                          value: [
                            {
                              kind: 'column',
                              type: 'Column',
                              value: 'cust_id1',
                              relation: null,
                            },
                            {
                              kind: 'constant',
                              type: 'String',
                              value: 'cust_id',
                            },
                          ],
                        },
                      ],
                    },
                  },
                  outputName: null,
                },
                tableData: null,
                portId: null,
                id: 31130847,
                hash: '3638bd0947c3ded9b4f8d57cef223544957c673a',
                pbemappingartifacts: [],
                targetmappingartifacts: [],
                udfscriptlines: [],
                dependencies: [],
              },
              {
                columnMetadata: {},
                task: {
                  annotations: {},
                  kind: 'task',
                  type: 'SetType',
                  parameters: {
                    col: {
                      kind: 'array',
                      type: 'Array',
                      value: [
                        {
                          kind: 'column',
                          type: 'Column',
                          value: 'cust_id',
                          relation: null,
                        },
                      ],
                    },
                    type: {
                      kind: 'bundle',
                      type: 'Bundle',
                      value: 'String',
                    },
                  },
                  outputName: null,
                },
                tableData: null,
                portId: null,
                id: 31130848,
                hash: 'a801c0b4e6c0abfabde75a66f045288228824802',
                pbemappingartifacts: [],
                targetmappingartifacts: [],
                udfscriptlines: [],
                dependencies: [],
              },
              {
                columnMetadata: {},
                task: {
                  annotations: {},
                  kind: 'task',
                  type: 'Drop',
                  parameters: {
                    action: {
                      kind: 'enumerable',
                      type: 'Enumerable',
                      value: 'Drop',
                    },
                    col: {
                      kind: 'array',
                      type: 'Array',
                      value: [
                        {
                          kind: 'column',
                          type: 'Column',
                          value: 'cust_id2',
                          relation: null,
                        },
                      ],
                    },
                  },
                  outputName: null,
                },
                tableData: null,
                portId: null,
                id: 31130849,
                hash: '97374b1908a8a09f258116493f03b32543611dd2',
                pbemappingartifacts: [],
                targetmappingartifacts: [],
                udfscriptlines: [],
                dependencies: [],
              },
              {
                columnMetadata: {},
                task: {
                  annotations: {
                    outputColumnAnnotations: {},
                  },
                  kind: 'task',
                  type: 'Rename',
                  parameters: {
                    type: {
                      kind: 'bundle',
                      type: 'Bundle',
                      value: 'manual',
                    },
                    mapping: {
                      kind: 'matrix',
                      type: 'Matrix',
                      value: [
                        {
                          kind: 'array',
                          type: 'Array',
                          value: [
                            {
                              kind: 'column',
                              type: 'Column',
                              value: 'column6',
                              relation: null,
                            },
                            {
                              kind: 'constant',
                              type: 'String',
                              value: 'addr1',
                            },
                          ],
                        },
                      ],
                    },
                  },
                  outputName: null,
                },
                tableData: null,
                portId: null,
                id: 31130850,
                hash: '9e63d291d9cf7b3f925f74252ce3d34a88adf346',
                pbemappingartifacts: [],
                targetmappingartifacts: [],
                udfscriptlines: [],
                dependencies: [],
              },
              {
                columnMetadata: {},
                task: {
                  annotations: {},
                  kind: 'task',
                  type: 'SetType',
                  parameters: {
                    col: {
                      kind: 'array',
                      type: 'Array',
                      value: [
                        {
                          kind: 'column',
                          type: 'Column',
                          value: 'addr1',
                          relation: null,
                        },
                      ],
                    },
                    type: {
                      kind: 'bundle',
                      type: 'Bundle',
                      value: 'String',
                    },
                  },
                  outputName: null,
                },
                tableData: null,
                portId: null,
                id: 31130851,
                hash: '0de90dcd537c6f8ea80a9713620aa304ac7fe48a',
                pbemappingartifacts: [],
                targetmappingartifacts: [],
                udfscriptlines: [],
                dependencies: [],
              },
              {
                columnMetadata: {},
                task: {
                  annotations: {
                    outputColumnAnnotations: {},
                  },
                  kind: 'task',
                  type: 'Rename',
                  parameters: {
                    type: {
                      kind: 'bundle',
                      type: 'Bundle',
                      value: 'manual',
                    },
                    mapping: {
                      kind: 'matrix',
                      type: 'Matrix',
                      value: [
                        {
                          kind: 'array',
                          type: 'Array',
                          value: [
                            {
                              kind: 'column',
                              type: 'Column',
                              value: 'column7',
                              relation: null,
                            },
                            {
                              kind: 'constant',
                              type: 'String',
                              value: 'order_total',
                            },
                          ],
                        },
                      ],
                    },
                  },
                  outputName: null,
                },
                tableData: null,
                portId: null,
                id: 31130852,
                hash: '65dcf4031a902eef440af60bff97ee5d874658c8',
                pbemappingartifacts: [],
                targetmappingartifacts: [],
                udfscriptlines: [],
                dependencies: [],
              },
              {
                columnMetadata: {},
                task: {
                  annotations: {
                    outputColumnAnnotations: {},
                  },
                  kind: 'task',
                  type: 'Rename',
                  parameters: {
                    type: {
                      kind: 'bundle',
                      type: 'Bundle',
                      value: 'manual',
                    },
                    mapping: {
                      kind: 'matrix',
                      type: 'Matrix',
                      value: [
                        {
                          kind: 'array',
                          type: 'Array',
                          value: [
                            {
                              kind: 'column',
                              type: 'Column',
                              value: 'column8',
                              relation: null,
                            },
                            {
                              kind: 'constant',
                              type: 'String',
                              value: 'order_id',
                            },
                          ],
                        },
                      ],
                    },
                  },
                  outputName: null,
                },
                tableData: null,
                portId: null,
                id: 31130853,
                hash: '6e383e88dc6616d3d49a795d3cd0917a8ea34222',
                pbemappingartifacts: [],
                targetmappingartifacts: [],
                udfscriptlines: [],
                dependencies: [],
              },
              {
                columnMetadata: {},
                task: {
                  annotations: {},
                  kind: 'task',
                  type: 'SetType',
                  parameters: {
                    col: {
                      kind: 'array',
                      type: 'Array',
                      value: [
                        {
                          kind: 'column',
                          type: 'Column',
                          value: 'order_id',
                          relation: null,
                        },
                      ],
                    },
                    type: {
                      kind: 'bundle',
                      type: 'Bundle',
                      value: 'String',
                    },
                  },
                  outputName: null,
                },
                tableData: null,
                portId: null,
                id: 31130854,
                hash: '14ecbd47046a1e2b00cac7d1b00a89d63fd0f4f8',
                pbemappingartifacts: [],
                targetmappingartifacts: [],
                udfscriptlines: [],
                dependencies: [],
              },
              {
                columnMetadata: {},
                task: {
                  annotations: {
                    outputColumnAnnotations: {},
                  },
                  kind: 'task',
                  type: 'Rename',
                  parameters: {
                    type: {
                      kind: 'bundle',
                      type: 'Bundle',
                      value: 'manual',
                    },
                    mapping: {
                      kind: 'matrix',
                      type: 'Matrix',
                      value: [
                        {
                          kind: 'array',
                          type: 'Array',
                          value: [
                            {
                              kind: 'column',
                              type: 'Column',
                              value: 'column9',
                              relation: null,
                            },
                            {
                              kind: 'constant',
                              type: 'String',
                              value: 'sale_channel',
                            },
                          ],
                        },
                      ],
                    },
                  },
                  outputName: null,
                },
                tableData: null,
                portId: null,
                id: 31130855,
                hash: '36fa3e902cf50f9dc0dfa682178941446d1a6aee',
                pbemappingartifacts: [],
                targetmappingartifacts: [],
                udfscriptlines: [],
                dependencies: [],
              },
              {
                columnMetadata: {},
                task: {
                  annotations: {
                    outputColumnAnnotations: {
                      sale_channel: {
                        type: [
                          'String',
                        ],
                        _likely_types: [
                          [
                            'String',
                          ],
                          [
                            'Integer',
                          ],
                          [
                            'Phone',
                          ],
                          [
                            'SSN',
                          ],
                          [
                            'Map',
                          ],
                        ],
                      },
                    },
                  },
                  kind: 'task',
                  type: 'ReplacePositions',
                  parameters: {
                    with: {
                      kind: 'constant',
                      type: 'String',
                      value: '',
                    },
                    col: {
                      kind: 'array',
                      type: 'Array',
                      value: [
                        {
                          kind: 'column',
                          type: 'Column',
                          value: 'sale_channel',
                          relation: null,
                        },
                      ],
                    },
                    start: {
                      kind: 'constant',
                      type: 'Integer',
                      value: 0,
                    },
                    end: {
                      kind: 'constant',
                      type: 'Integer',
                      value: 4,
                    },
                    as: {
                      kind: 'array',
                      type: 'Array',
                      value: [
                        {
                          kind: 'constant',
                          type: 'String',
                          value: 'sale_channel',
                        },
                      ],
                    },
                  },
                  outputName: null,
                },
                tableData: null,
                portId: null,
                id: 31130856,
                hash: '449beebc1e51bd2bb0c973af31c2a8f1b36924ac',
                pbemappingartifacts: [],
                targetmappingartifacts: [],
                udfscriptlines: [],
                dependencies: [],
              },
              {
                columnMetadata: {},
                task: {
                  annotations: {
                    outputColumnAnnotations: {},
                  },
                  kind: 'task',
                  type: 'SetType',
                  parameters: {
                    col: {
                      kind: 'array',
                      type: 'Array',
                      value: [
                        {
                          kind: 'column',
                          type: 'Column',
                          value: 'sale_channel',
                          relation: null,
                        },
                      ],
                    },
                    type: {
                      kind: 'bundle',
                      type: 'Bundle',
                      value: 'String',
                    },
                  },
                  outputName: null,
                },
                tableData: null,
                portId: null,
                id: 31130857,
                hash: '1869a13f033de61597a9bd97a64946d4b85bda18',
                pbemappingartifacts: [],
                targetmappingartifacts: [],
                udfscriptlines: [],
                dependencies: [],
              },
              {
                columnMetadata: {},
                task: {
                  annotations: {
                    outputColumnAnnotations: {},
                  },
                  kind: 'task',
                  type: 'Rename',
                  parameters: {
                    type: {
                      kind: 'bundle',
                      type: 'Bundle',
                      value: 'manual',
                    },
                    mapping: {
                      kind: 'matrix',
                      type: 'Matrix',
                      value: [
                        {
                          kind: 'array',
                          type: 'Array',
                          value: [
                            {
                              kind: 'column',
                              type: 'Column',
                              value: 'column10',
                              relation: null,
                            },
                            {
                              kind: 'constant',
                              type: 'String',
                              value: 'deposit_date',
                            },
                          ],
                        },
                      ],
                    },
                  },
                  outputName: null,
                },
                tableData: null,
                portId: null,
                id: 31130858,
                hash: 'c4776dff300b5f80835ebeeef430c8bfaff43c60',
                pbemappingartifacts: [],
                targetmappingartifacts: [],
                udfscriptlines: [],
                dependencies: [],
              },
              {
                columnMetadata: {},
                task: {
                  annotations: {},
                  kind: 'task',
                  type: 'SetType',
                  parameters: {
                    col: {
                      kind: 'array',
                      type: 'Array',
                      value: [
                        {
                          kind: 'column',
                          type: 'Column',
                          value: 'deposit_date',
                          relation: null,
                        },
                      ],
                    },
                    type: {
                      kind: 'bundle',
                      type: 'Bundle',
                      value: 'String',
                    },
                  },
                  outputName: null,
                },
                tableData: null,
                portId: null,
                id: 31130859,
                hash: '5a9e2875b3f88799023f8ef7b040f59d261ea4eb',
                pbemappingartifacts: [],
                targetmappingartifacts: [],
                udfscriptlines: [],
                dependencies: [],
              },
              {
                columnMetadata: {},
                task: {
                  annotations: {
                    outputColumnAnnotations: {},
                  },
                  kind: 'task',
                  type: 'Rename',
                  parameters: {
                    type: {
                      kind: 'bundle',
                      type: 'Bundle',
                      value: 'manual',
                    },
                    mapping: {
                      kind: 'matrix',
                      type: 'Matrix',
                      value: [
                        {
                          kind: 'array',
                          type: 'Array',
                          value: [
                            {
                              kind: 'column',
                              type: 'Column',
                              value: 'column11',
                              relation: null,
                            },
                            {
                              kind: 'constant',
                              type: 'String',
                              value: 'delivery_date',
                            },
                          ],
                        },
                      ],
                    },
                  },
                  outputName: null,
                },
                tableData: null,
                portId: null,
                id: 31130860,
                hash: '13bd6a22b598ba78d39ffc907713a0d40a4d2877',
                pbemappingartifacts: [],
                targetmappingartifacts: [],
                udfscriptlines: [],
                dependencies: [],
              },
              {
                columnMetadata: {},
                task: {
                  annotations: {},
                  kind: 'task',
                  type: 'SetType',
                  parameters: {
                    col: {
                      kind: 'array',
                      type: 'Array',
                      value: [
                        {
                          kind: 'column',
                          type: 'Column',
                          value: 'delivery_date',
                          relation: null,
                        },
                      ],
                    },
                    type: {
                      kind: 'bundle',
                      type: 'Bundle',
                      value: 'String',
                    },
                  },
                  outputName: null,
                },
                tableData: null,
                portId: null,
                id: 31130861,
                hash: '4423b8d9a443086fdffb19b889a7abbec9e75512',
                pbemappingartifacts: [],
                targetmappingartifacts: [],
                udfscriptlines: [],
                dependencies: [],
              },
              {
                columnMetadata: {},
                task: {
                  annotations: {
                    outputColumnAnnotations: {},
                  },
                  kind: 'task',
                  type: 'Rename',
                  parameters: {
                    type: {
                      kind: 'bundle',
                      type: 'Bundle',
                      value: 'manual',
                    },
                    mapping: {
                      kind: 'matrix',
                      type: 'Matrix',
                      value: [
                        {
                          kind: 'array',
                          type: 'Array',
                          value: [
                            {
                              kind: 'column',
                              type: 'Column',
                              value: 'column12',
                              relation: null,
                            },
                            {
                              kind: 'constant',
                              type: 'String',
                              value: 'product_name_spec',
                            },
                          ],
                        },
                      ],
                    },
                  },
                  outputName: null,
                },
                tableData: null,
                portId: null,
                id: 31130862,
                hash: '76f55a43af1dbd53337987ae624062557df5841c',
                pbemappingartifacts: [],
                targetmappingartifacts: [],
                udfscriptlines: [],
                dependencies: [],
              },
              {
                columnMetadata: {},
                task: {
                  annotations: {},
                  kind: 'task',
                  type: 'SetType',
                  parameters: {
                    col: {
                      kind: 'array',
                      type: 'Array',
                      value: [
                        {
                          kind: 'column',
                          type: 'Column',
                          value: 'product_name_spec',
                          relation: null,
                        },
                      ],
                    },
                    type: {
                      kind: 'bundle',
                      type: 'Bundle',
                      value: 'String',
                    },
                  },
                  outputName: null,
                },
                tableData: null,
                portId: null,
                id: 31130863,
                hash: '9ceb21741c8b50355301070792e4f6e2a87f2d40',
                pbemappingartifacts: [],
                targetmappingartifacts: [],
                udfscriptlines: [],
                dependencies: [],
              },
              {
                columnMetadata: {},
                task: {
                  annotations: {
                    outputColumnAnnotations: {},
                  },
                  kind: 'task',
                  type: 'Rename',
                  parameters: {
                    type: {
                      kind: 'bundle',
                      type: 'Bundle',
                      value: 'manual',
                    },
                    mapping: {
                      kind: 'matrix',
                      type: 'Matrix',
                      value: [
                        {
                          kind: 'array',
                          type: 'Array',
                          value: [
                            {
                              kind: 'column',
                              type: 'Column',
                              value: 'column13',
                              relation: null,
                            },
                            {
                              kind: 'constant',
                              type: 'String',
                              value: 'supplier',
                            },
                          ],
                        },
                      ],
                    },
                  },
                  outputName: null,
                },
                tableData: null,
                portId: null,
                id: 31130864,
                hash: '0fd2f808ba758f52e8eda67a56c8c525938c27a3',
                pbemappingartifacts: [],
                targetmappingartifacts: [],
                udfscriptlines: [],
                dependencies: [],
              },
              {
                columnMetadata: {},
                task: {
                  annotations: {
                    outputColumnAnnotations: {},
                  },
                  kind: 'task',
                  type: 'Rename',
                  parameters: {
                    type: {
                      kind: 'bundle',
                      type: 'Bundle',
                      value: 'manual',
                    },
                    mapping: {
                      kind: 'matrix',
                      type: 'Matrix',
                      value: [
                        {
                          kind: 'array',
                          type: 'Array',
                          value: [
                            {
                              kind: 'column',
                              type: 'Column',
                              value: 'column14',
                              relation: null,
                            },
                            {
                              kind: 'constant',
                              type: 'String',
                              value: 'category_group',
                            },
                          ],
                        },
                      ],
                    },
                  },
                  outputName: null,
                },
                tableData: null,
                portId: null,
                id: 31130865,
                hash: 'e40b31ffbb92e45accd5d87989657660b9af014b',
                pbemappingartifacts: [],
                targetmappingartifacts: [],
                udfscriptlines: [],
                dependencies: [],
              },
              {
                columnMetadata: {},
                task: {
                  annotations: {
                    outputColumnAnnotations: {
                      category_group: {
                        type: [
                          'String',
                        ],
                        _likely_types: [
                          [
                            'String',
                          ],
                          [
                            'Integer',
                          ],
                          [
                            'Phone',
                          ],
                          [
                            'SSN',
                          ],
                          [
                            'Map',
                          ],
                        ],
                      },
                    },
                  },
                  kind: 'task',
                  type: 'ReplacePatterns',
                  parameters: {
                    with: {
                      kind: 'constant',
                      type: 'String',
                      value: 'ㆍ',
                    },
                    col: {
                      kind: 'array',
                      type: 'Array',
                      value: [
                        {
                          kind: 'column',
                          type: 'Column',
                          value: 'category_group',
                          relation: null,
                        },
                      ],
                    },
                    on: {
                      kind: 'constant',
                      type: 'String',
                      value: 'ㆍ',
                    },
                    ignoreCase: {
                      kind: 'constant',
                      type: 'Bool',
                      value: false,
                    },
                    global: {
                      kind: 'constant',
                      type: 'Bool',
                      value: true,
                    },
                    as: {
                      kind: 'array',
                      type: 'Array',
                      value: [
                        {
                          kind: 'constant',
                          type: 'String',
                          value: 'category_group',
                        },
                      ],
                    },
                  },
                  outputName: null,
                },
                tableData: null,
                portId: null,
                id: 31130866,
                hash: '924f81cc53d21cce01bed7e00a8fdf319b5a2fce',
                pbemappingartifacts: [],
                targetmappingartifacts: [],
                udfscriptlines: [],
                dependencies: [],
              },
              {
                columnMetadata: {},
                task: {
                  annotations: {
                    outputColumnAnnotations: {},
                  },
                  kind: 'task',
                  type: 'Rename',
                  parameters: {
                    type: {
                      kind: 'bundle',
                      type: 'Bundle',
                      value: 'manual',
                    },
                    mapping: {
                      kind: 'matrix',
                      type: 'Matrix',
                      value: [
                        {
                          kind: 'array',
                          type: 'Array',
                          value: [
                            {
                              kind: 'column',
                              type: 'Column',
                              value: 'column15',
                              relation: null,
                            },
                            {
                              kind: 'constant',
                              type: 'String',
                              value: 'product_id',
                            },
                          ],
                        },
                      ],
                    },
                  },
                  outputName: null,
                },
                tableData: null,
                portId: null,
                id: 31130867,
                hash: '829963f828f9ec2e36157dfc5d479257c72f729a',
                pbemappingartifacts: [],
                targetmappingartifacts: [],
                udfscriptlines: [],
                dependencies: [],
              },
              {
                columnMetadata: {},
                task: {
                  annotations: {
                    outputColumnAnnotations: {},
                  },
                  kind: 'task',
                  type: 'Rename',
                  parameters: {
                    type: {
                      kind: 'bundle',
                      type: 'Bundle',
                      value: 'manual',
                    },
                    mapping: {
                      kind: 'matrix',
                      type: 'Matrix',
                      value: [
                        {
                          kind: 'array',
                          type: 'Array',
                          value: [
                            {
                              kind: 'column',
                              type: 'Column',
                              value: 'column16',
                              relation: null,
                            },
                            {
                              kind: 'constant',
                              type: 'String',
                              value: 'product_name',
                            },
                          ],
                        },
                      ],
                    },
                  },
                  outputName: null,
                },
                tableData: null,
                portId: null,
                id: 31130868,
                hash: '4455f51fde3a7177efc4d36df2d901f0080d4347',
                pbemappingartifacts: [],
                targetmappingartifacts: [],
                udfscriptlines: [],
                dependencies: [],
              },
              {
                columnMetadata: {},
                task: {
                  annotations: {
                    outputColumnAnnotations: {},
                  },
                  kind: 'task',
                  type: 'Rename',
                  parameters: {
                    type: {
                      kind: 'bundle',
                      type: 'Bundle',
                      value: 'manual',
                    },
                    mapping: {
                      kind: 'matrix',
                      type: 'Matrix',
                      value: [
                        {
                          kind: 'array',
                          type: 'Array',
                          value: [
                            {
                              kind: 'column',
                              type: 'Column',
                              value: 'column17',
                              relation: null,
                            },
                            {
                              kind: 'constant',
                              type: 'String',
                              value: 'unit_price',
                            },
                          ],
                        },
                      ],
                    },
                  },
                  outputName: null,
                },
                tableData: null,
                portId: null,
                id: 31130869,
                hash: 'af8893d5bfde482a15a090f3e544479452a8f4ac',
                pbemappingartifacts: [],
                targetmappingartifacts: [],
                udfscriptlines: [],
                dependencies: [],
              },
              {
                columnMetadata: {},
                task: {
                  annotations: {
                    outputColumnAnnotations: {},
                  },
                  kind: 'task',
                  type: 'Rename',
                  parameters: {
                    type: {
                      kind: 'bundle',
                      type: 'Bundle',
                      value: 'manual',
                    },
                    mapping: {
                      kind: 'matrix',
                      type: 'Matrix',
                      value: [
                        {
                          kind: 'array',
                          type: 'Array',
                          value: [
                            {
                              kind: 'column',
                              type: 'Column',
                              value: 'column18',
                              relation: null,
                            },
                            {
                              kind: 'constant',
                              type: 'String',
                              value: 'quantity',
                            },
                          ],
                        },
                      ],
                    },
                  },
                  outputName: null,
                },
                tableData: null,
                portId: null,
                id: 31130870,
                hash: 'bb3e88bb1e344a9bdfd9e0f5b222bec2669c9ea9',
                pbemappingartifacts: [],
                targetmappingartifacts: [],
                udfscriptlines: [],
                dependencies: [],
              },
              {
                columnMetadata: {},
                task: {
                  annotations: {
                    outputColumnAnnotations: {},
                  },
                  kind: 'task',
                  type: 'SetType',
                  parameters: {
                    col: {
                      kind: 'array',
                      type: 'Array',
                      value: [
                        {
                          kind: 'column',
                          type: 'Column',
                          value: 'quantity',
                          relation: null,
                        },
                      ],
                    },
                    type: {
                      kind: 'bundle',
                      type: 'Bundle',
                      value: 'Integer',
                    },
                  },
                  outputName: null,
                },
                tableData: null,
                portId: null,
                id: 31130871,
                hash: 'cb6ce8c06a017d843ef5e21ddf4ed9730df72c85',
                pbemappingartifacts: [],
                targetmappingartifacts: [],
                udfscriptlines: [],
                dependencies: [],
              },
              {
                columnMetadata: {},
                task: {
                  annotations: {
                    outputColumnAnnotations: {},
                  },
                  kind: 'task',
                  type: 'Rename',
                  parameters: {
                    type: {
                      kind: 'bundle',
                      type: 'Bundle',
                      value: 'manual',
                    },
                    mapping: {
                      kind: 'matrix',
                      type: 'Matrix',
                      value: [
                        {
                          kind: 'array',
                          type: 'Array',
                          value: [
                            {
                              kind: 'column',
                              type: 'Column',
                              value: 'column19',
                              relation: null,
                            },
                            {
                              kind: 'constant',
                              type: 'String',
                              value: 'price',
                            },
                          ],
                        },
                      ],
                    },
                  },
                  outputName: null,
                },
                tableData: null,
                portId: null,
                id: 31130872,
                hash: 'f81985d799522a82e71e9910a62d737e9357472c',
                pbemappingartifacts: [],
                targetmappingartifacts: [],
                udfscriptlines: [],
                dependencies: [],
              },
              {
                columnMetadata: {},
                task: {
                  annotations: {
                    outputColumnAnnotations: {},
                  },
                  kind: 'task',
                  type: 'Rename',
                  parameters: {
                    type: {
                      kind: 'bundle',
                      type: 'Bundle',
                      value: 'manual',
                    },
                    mapping: {
                      kind: 'matrix',
                      type: 'Matrix',
                      value: [
                        {
                          kind: 'array',
                          type: 'Array',
                          value: [
                            {
                              kind: 'column',
                              type: 'Column',
                              value: 'column20',
                              relation: null,
                            },
                            {
                              kind: 'constant',
                              type: 'String',
                              value: 'ecount_date',
                            },
                          ],
                        },
                      ],
                    },
                  },
                  outputName: null,
                },
                tableData: null,
                portId: null,
                id: 31130873,
                hash: 'df3e9e75d87d709b66657dd08e73f34822542e06',
                pbemappingartifacts: [],
                targetmappingartifacts: [],
                udfscriptlines: [],
                dependencies: [],
              },
              {
                columnMetadata: {},
                task: {
                  annotations: {
                    outputColumnAnnotations: {},
                  },
                  kind: 'task',
                  type: 'Rename',
                  parameters: {
                    type: {
                      kind: 'bundle',
                      type: 'Bundle',
                      value: 'manual',
                    },
                    mapping: {
                      kind: 'matrix',
                      type: 'Matrix',
                      value: [
                        {
                          kind: 'array',
                          type: 'Array',
                          value: [
                            {
                              kind: 'column',
                              type: 'Column',
                              value: 'column21',
                              relation: null,
                            },
                            {
                              kind: 'constant',
                              type: 'String',
                              value: 'payment_channel',
                            },
                          ],
                        },
                      ],
                    },
                  },
                  outputName: null,
                },
                tableData: null,
                portId: null,
                id: 31130874,
                hash: 'ce30a69e0dda20097f88ca30127541f27bd6f92b',
                pbemappingartifacts: [],
                targetmappingartifacts: [],
                udfscriptlines: [],
                dependencies: [],
              },
              {
                columnMetadata: {},
                task: {
                  annotations: {
                    outputColumnAnnotations: {},
                  },
                  kind: 'task',
                  type: 'Rename',
                  parameters: {
                    type: {
                      kind: 'bundle',
                      type: 'Bundle',
                      value: 'manual',
                    },
                    mapping: {
                      kind: 'matrix',
                      type: 'Matrix',
                      value: [
                        {
                          kind: 'array',
                          type: 'Array',
                          value: [
                            {
                              kind: 'column',
                              type: 'Column',
                              value: 'column22',
                              relation: null,
                            },
                            {
                              kind: 'constant',
                              type: 'String',
                              value: 'deposit',
                            },
                          ],
                        },
                      ],
                    },
                  },
                  outputName: null,
                },
                tableData: null,
                portId: null,
                id: 31130875,
                hash: '2b398c266dbf6a0cfa3ed75b0709f10ecded8271',
                pbemappingartifacts: [],
                targetmappingartifacts: [],
                udfscriptlines: [],
                dependencies: [],
              },
              {
                columnMetadata: {},
                task: {
                  annotations: {},
                  kind: 'task',
                  type: 'SetType',
                  parameters: {
                    col: {
                      kind: 'array',
                      type: 'Array',
                      value: [
                        {
                          kind: 'column',
                          type: 'Column',
                          value: 'deposit',
                          relation: null,
                        },
                      ],
                    },
                    type: {
                      kind: 'bundle',
                      type: 'Bundle',
                      value: 'String',
                    },
                  },
                  outputName: null,
                },
                tableData: null,
                portId: null,
                id: 31130876,
                hash: '18c9ae2c1fb353e13463adcef41501e592e5d1fd',
                pbemappingartifacts: [],
                targetmappingartifacts: [],
                udfscriptlines: [],
                dependencies: [],
              },
              {
                columnMetadata: {},
                task: {
                  annotations: {},
                  kind: 'task',
                  type: 'Rename',
                  parameters: {
                    type: {
                      kind: 'bundle',
                      type: 'Bundle',
                      value: 'manual',
                    },
                    mapping: {
                      kind: 'matrix',
                      type: 'Matrix',
                      value: [
                        {
                          kind: 'array',
                          type: 'Array',
                          value: [
                            {
                              kind: 'column',
                              type: 'Column',
                              value: 'column23',
                              relation: null,
                            },
                            {
                              kind: 'constant',
                              type: 'String',
                              value: 'purchase_category',
                            },
                          ],
                        },
                        {
                          kind: 'array',
                          type: 'Array',
                          value: [
                            {
                              kind: 'column',
                              type: 'Column',
                              value: 'column24',
                              relation: null,
                            },
                            {
                              kind: 'constant',
                              type: 'String',
                              value: 'purchase_fabrics',
                            },
                          ],
                        },
                        {
                          kind: 'array',
                          type: 'Array',
                          value: [
                            {
                              kind: 'column',
                              type: 'Column',
                              value: 'column25',
                              relation: null,
                            },
                            {
                              kind: 'constant',
                              type: 'String',
                              value: 'purchase_collection',
                            },
                          ],
                        },
                        {
                          kind: 'array',
                          type: 'Array',
                          value: [
                            {
                              kind: 'column',
                              type: 'Column',
                              value: 'column26',
                              relation: null,
                            },
                            {
                              kind: 'constant',
                              type: 'String',
                              value: 'purchase_spec',
                            },
                          ],
                        },
                        {
                          kind: 'array',
                          type: 'Array',
                          value: [
                            {
                              kind: 'column',
                              type: 'Column',
                              value: 'column27',
                              relation: null,
                            },
                            {
                              kind: 'constant',
                              type: 'String',
                              value: 'salesperson',
                            },
                          ],
                        },
                      ],
                    },
                  },
                  outputName: null,
                },
                tableData: null,
                portId: null,
                id: 31130877,
                hash: 'c81f4c79c314bf2e07c3e235e0455a16f9fd4fe9',
                pbemappingartifacts: [],
                targetmappingartifacts: [],
                udfscriptlines: [],
                dependencies: [],
              },
              {
                columnMetadata: {},
                task: {
                  annotations: {},
                  kind: 'task',
                  type: 'Rename',
                  parameters: {
                    type: {
                      kind: 'bundle',
                      type: 'Bundle',
                      value: 'manual',
                    },
                    mapping: {
                      kind: 'matrix',
                      type: 'Matrix',
                      value: [
                        {
                          kind: 'array',
                          type: 'Array',
                          value: [
                            {
                              kind: 'column',
                              type: 'Column',
                              value: 'column28',
                              relation: null,
                            },
                            {
                              kind: 'constant',
                              type: 'String',
                              value: 'sap_docstatus',
                            },
                          ],
                        },
                      ],
                    },
                  },
                  outputName: null,
                },
                tableData: null,
                portId: null,
                id: 31130878,
                hash: 'ad734546f7890dbd11f62115935d58036b48adb3',
                pbemappingartifacts: [],
                targetmappingartifacts: [],
                udfscriptlines: [],
                dependencies: [],
              },
              {
                columnMetadata: {},
                task: {
                  annotations: {},
                  kind: 'task',
                  type: 'Rename',
                  parameters: {
                    type: {
                      kind: 'bundle',
                      type: 'Bundle',
                      value: 'manual',
                    },
                    mapping: {
                      kind: 'matrix',
                      type: 'Matrix',
                      value: [
                        {
                          kind: 'array',
                          type: 'Array',
                          value: [
                            {
                              kind: 'column',
                              type: 'Column',
                              value: 'column29',
                              relation: null,
                            },
                            {
                              kind: 'constant',
                              type: 'String',
                              value: 'sap_canceled',
                            },
                          ],
                        },
                      ],
                    },
                  },
                  outputName: null,
                },
                tableData: null,
                portId: null,
                id: 31130879,
                hash: '306c64b912cb796e425b73413cf7a9ad5131dd5e',
                pbemappingartifacts: [],
                targetmappingartifacts: [],
                udfscriptlines: [],
                dependencies: [],
              },
              {
                columnMetadata: {},
                task: {
                  annotations: {},
                  kind: 'task',
                  type: 'SetType',
                  parameters: {
                    col: {
                      kind: 'array',
                      type: 'Array',
                      value: [
                        {
                          kind: 'column',
                          type: 'Column',
                          value: 'sap_canceled',
                          relation: null,
                        },
                      ],
                    },
                    type: {
                      kind: 'bundle',
                      type: 'Bundle',
                      value: 'String',
                    },
                  },
                  outputName: null,
                },
                tableData: null,
                portId: null,
                id: 31130880,
                hash: '78e704245065504511b9f51808867a17454659a6',
                pbemappingartifacts: [],
                targetmappingartifacts: [],
                udfscriptlines: [],
                dependencies: [],
              },
              {
                columnMetadata: {},
                task: {
                  annotations: {},
                  kind: 'task',
                  type: 'Rename',
                  parameters: {
                    type: {
                      kind: 'bundle',
                      type: 'Bundle',
                      value: 'manual',
                    },
                    mapping: {
                      kind: 'matrix',
                      type: 'Matrix',
                      value: [
                        {
                          kind: 'array',
                          type: 'Array',
                          value: [
                            {
                              kind: 'column',
                              type: 'Column',
                              value: 'column30',
                              relation: null,
                            },
                            {
                              kind: 'constant',
                              type: 'String',
                              value: 'sap_deposit_date',
                            },
                          ],
                        },
                      ],
                    },
                  },
                  outputName: null,
                },
                tableData: null,
                portId: null,
                id: 31130881,
                hash: 'b19234a6b4c7ffdc129f6edfbc0511b26bc49edc',
                pbemappingartifacts: [],
                targetmappingartifacts: [],
                udfscriptlines: [],
                dependencies: [],
              },
              {
                columnMetadata: {},
                task: {
                  annotations: {},
                  kind: 'task',
                  type: 'Delete',
                  parameters: {
                    row: {
                      annotations: {},
                      kind: 'func',
                      type: 'Equal',
                      parameters: {
                        lhs: {
                          annotations: {},
                          kind: 'func',
                          type: 'SourceRowNumber',
                          parameters: {},
                        },
                        rhs: {
                          kind: 'constant',
                          type: 'Integer',
                          value: 2,
                        },
                      },
                    },
                  },
                  outputName: null,
                },
                tableData: null,
                portId: null,
                id: 31130882,
                hash: 'bbbda1788e3e67fdbb1d1681451bf01ec3305b10',
                pbemappingartifacts: [],
                targetmappingartifacts: [],
                udfscriptlines: [],
                dependencies: [],
              },
              {
                columnMetadata: {},
                task: {
                  annotations: {},
                  kind: 'task',
                  type: 'Filter',
                  parameters: {
                    action: {
                      kind: 'enumerable',
                      type: 'Enumerable',
                      value: 'Delete',
                    },
                    row: {
                      annotations: {},
                      kind: 'func',
                      type: 'IsMissing',
                      parameters: {
                        col: {
                          kind: 'array',
                          type: 'Array',
                          value: [
                            {
                              kind: 'column',
                              type: 'Column',
                              value: 'order_id',
                              relation: null,
                            },
                          ],
                        },
                      },
                    },
                    type: {
                      kind: 'bundle',
                      type: 'Bundle',
                      value: 'custom',
                    },
                    rowType: {
                      kind: 'bundle',
                      type: 'Bundle',
                      value: 'single',
                    },
                  },
                  outputName: null,
                },
                tableData: null,
                portId: null,
                id: 31130883,
                hash: '604b3099449a623dc9fe20090186be752c7f41d7',
                pbemappingartifacts: [],
                targetmappingartifacts: [],
                udfscriptlines: [],
                dependencies: [],
              },
            ],
            dqScriptRules: [],
          },
          {
            id: 5023417,
            name: 'sap2bq.csv',
            description: null,
            active: true,
            nextPortId: 1,
            steps: [
              {
                columnMetadata: null,
                task: {
                  annotations: {
                    hidden: true,
                  },
                  kind: 'task',
                  type: 'Load',
                  parameters: {
                    format: {
                      annotations: {},
                      kind: 'func',
                      type: 'FormatBlob',
                      parameters: {},
                    },
                    location: {
                      kind: 'constant',
                      type: 'String',
                      value: 'id://1892507',
                    },
                    enableLineage: {
                      kind: 'constant',
                      type: 'Bool',
                      value: true,
                    },
                    as: {
                      kind: 'array',
                      type: 'Array',
                      value: [
                        {
                          kind: 'constant',
                          type: 'String',
                          value: 'column1',
                        },
                      ],
                    },
                  },
                  outputName: 'original_datasource_1892507',
                },
                tableData: null,
                portId: null,
                id: 31117774,
                hash: '7a7570d065e4925c3b5d5edb8a6bd56b30597f79',
                pbemappingartifacts: [],
                targetmappingartifacts: [],
                udfscriptlines: [],
                dependencies: [],
              },
              {
                columnMetadata: null,
                task: {
                  annotations: {
                    outputColumnAnnotations: {
                      column1: {
                        type: [
                          'String',
                        ],
                        _likely_types: [
                          [
                            'String',
                          ],
                          [
                            'Integer',
                          ],
                          [
                            'Phone',
                          ],
                          [
                            'SSN',
                          ],
                          [
                            'Map',
                          ],
                        ],
                      },
                    },
                  },
                  kind: 'task',
                  type: 'SplitRows',
                  parameters: {
                    on: {
                      kind: 'constant',
                      type: 'String',
                      value: '\n',
                    },
                    col: {
                      kind: 'column',
                      type: 'Column',
                      value: 'column1',
                      relation: null,
                    },
                    quote: {
                      kind: 'constant',
                      type: 'String',
                      value: '"',
                    },
                    quoteEscapeChar: {
                      kind: 'constant',
                      type: 'String',
                      value: '"',
                    },
                  },
                  outputName: null,
                },
                tableData: null,
                portId: null,
                id: 31117775,
                hash: '5e0dbcfc803cc40c01c0298ba18470aabb16ab81',
                pbemappingartifacts: [],
                targetmappingartifacts: [],
                udfscriptlines: [],
                dependencies: [],
              },
              {
                columnMetadata: null,
                task: {
                  annotations: {
                    outputColumnAnnotations: {
                      column2: {
                        type: [
                          'String',
                        ],
                        _likely_types: [
                          [
                            'String',
                          ],
                          [
                            'Integer',
                          ],
                          [
                            'Phone',
                          ],
                          [
                            'SSN',
                          ],
                          [
                            'Map',
                          ],
                        ],
                      },
                      column3: {
                        type: [
                          'String',
                        ],
                        _likely_types: [
                          [
                            'String',
                          ],
                          [
                            'Integer',
                          ],
                          [
                            'Phone',
                          ],
                          [
                            'SSN',
                          ],
                          [
                            'Map',
                          ],
                        ],
                      },
                      column4: {
                        type: [
                          'String',
                        ],
                        _likely_types: [
                          [
                            'String',
                          ],
                          [
                            'Integer',
                          ],
                          [
                            'Phone',
                          ],
                          [
                            'SSN',
                          ],
                          [
                            'Map',
                          ],
                        ],
                      },
                      column5: {
                        type: [
                          'String',
                        ],
                        _likely_types: [
                          [
                            'String',
                          ],
                          [
                            'Integer',
                          ],
                          [
                            'Phone',
                          ],
                          [
                            'SSN',
                          ],
                          [
                            'Map',
                          ],
                        ],
                      },
                      column6: {
                        type: [
                          'String',
                        ],
                        _likely_types: [
                          [
                            'String',
                          ],
                          [
                            'Integer',
                          ],
                          [
                            'Phone',
                          ],
                          [
                            'SSN',
                          ],
                          [
                            'Map',
                          ],
                        ],
                      },
                      column7: {
                        type: [
                          'Integer',
                        ],
                        _likely_types: [
                          [
                            'Integer',
                          ],
                          [
                            'Float',
                          ],
                          [
                            'String',
                          ],
                          [
                            'Phone',
                          ],
                          [
                            'SSN',
                          ],
                        ],
                      },
                      column8: {
                        type: [
                          'String',
                        ],
                        _likely_types: [
                          [
                            'String',
                          ],
                          [
                            'Integer',
                          ],
                          [
                            'Phone',
                          ],
                          [
                            'SSN',
                          ],
                          [
                            'Map',
                          ],
                        ],
                      },
                      column9: {
                        type: [
                          'String',
                        ],
                        _likely_types: [
                          [
                            'String',
                          ],
                          [
                            'Integer',
                          ],
                          [
                            'Phone',
                          ],
                          [
                            'SSN',
                          ],
                          [
                            'Map',
                          ],
                        ],
                      },
                      column10: {
                        type: [
                          'String',
                        ],
                        _likely_types: [
                          [
                            'String',
                          ],
                          [
                            'Integer',
                          ],
                          [
                            'Phone',
                          ],
                          [
                            'SSN',
                          ],
                          [
                            'Map',
                          ],
                        ],
                      },
                      column11: {
                        type: [
                          'String',
                        ],
                        _likely_types: [
                          [
                            'String',
                          ],
                          [
                            'Integer',
                          ],
                          [
                            'Phone',
                          ],
                          [
                            'SSN',
                          ],
                          [
                            'Map',
                          ],
                        ],
                      },
                      column12: {
                        type: [
                          'String',
                        ],
                        _likely_types: [
                          [
                            'String',
                          ],
                          [
                            'Integer',
                          ],
                          [
                            'Phone',
                          ],
                          [
                            'SSN',
                          ],
                          [
                            'Map',
                          ],
                        ],
                      },
                      column13: {
                        type: [
                          'String',
                        ],
                        _likely_types: [
                          [
                            'String',
                          ],
                          [
                            'Integer',
                          ],
                          [
                            'Phone',
                          ],
                          [
                            'SSN',
                          ],
                          [
                            'Map',
                          ],
                        ],
                      },
                      column14: {
                        type: [
                          'String',
                        ],
                        _likely_types: [
                          [
                            'String',
                          ],
                          [
                            'Integer',
                          ],
                          [
                            'Phone',
                          ],
                          [
                            'SSN',
                          ],
                          [
                            'Map',
                          ],
                        ],
                      },
                      column15: {
                        type: [
                          'String',
                        ],
                        _likely_types: [
                          [
                            'String',
                          ],
                          [
                            'Integer',
                          ],
                          [
                            'Phone',
                          ],
                          [
                            'SSN',
                          ],
                          [
                            'Map',
                          ],
                        ],
                      },
                      column16: {
                        type: [
                          'String',
                        ],
                        _likely_types: [
                          [
                            'String',
                          ],
                          [
                            'Integer',
                          ],
                          [
                            'Phone',
                          ],
                          [
                            'SSN',
                          ],
                          [
                            'Map',
                          ],
                        ],
                      },
                      column17: {
                        type: [
                          'Integer',
                        ],
                        _likely_types: [
                          [
                            'Integer',
                          ],
                          [
                            'Float',
                          ],
                          [
                            'String',
                          ],
                          [
                            'Phone',
                          ],
                          [
                            'SSN',
                          ],
                        ],
                      },
                      column18: {
                        type: [
                          'Integer',
                        ],
                        _likely_types: [
                          [
                            'Integer',
                          ],
                          [
                            'Float',
                          ],
                          [
                            'String',
                          ],
                          [
                            'Phone',
                          ],
                          [
                            'SSN',
                          ],
                        ],
                      },
                      column19: {
                        type: [
                          'Integer',
                        ],
                        _likely_types: [
                          [
                            'Integer',
                          ],
                          [
                            'Float',
                          ],
                          [
                            'String',
                          ],
                          [
                            'Phone',
                          ],
                          [
                            'SSN',
                          ],
                        ],
                      },
                      column20: {
                        type: [
                          'String',
                        ],
                        _likely_types: [
                          [
                            'String',
                          ],
                          [
                            'Integer',
                          ],
                          [
                            'Phone',
                          ],
                          [
                            'SSN',
                          ],
                          [
                            'Map',
                          ],
                        ],
                      },
                      column21: {
                        type: [
                          'String',
                        ],
                        _likely_types: [
                          [
                            'String',
                          ],
                          [
                            'Integer',
                          ],
                          [
                            'Phone',
                          ],
                          [
                            'SSN',
                          ],
                          [
                            'Map',
                          ],
                        ],
                      },
                      column22: {
                        type: [
                          'String',
                        ],
                        _likely_types: [
                          [
                            'String',
                          ],
                          [
                            'Integer',
                          ],
                          [
                            'Phone',
                          ],
                          [
                            'SSN',
                          ],
                          [
                            'Map',
                          ],
                        ],
                      },
                      column23: {
                        type: [
                          'String',
                        ],
                        _likely_types: [
                          [
                            'String',
                          ],
                          [
                            'Integer',
                          ],
                          [
                            'Phone',
                          ],
                          [
                            'SSN',
                          ],
                          [
                            'Map',
                          ],
                        ],
                      },
                      column24: {
                        type: [
                          'String',
                        ],
                        _likely_types: [
                          [
                            'String',
                          ],
                          [
                            'Integer',
                          ],
                          [
                            'Phone',
                          ],
                          [
                            'SSN',
                          ],
                          [
                            'Map',
                          ],
                        ],
                      },
                      column25: {
                        type: [
                          'String',
                        ],
                        _likely_types: [
                          [
                            'String',
                          ],
                          [
                            'Integer',
                          ],
                          [
                            'Phone',
                          ],
                          [
                            'SSN',
                          ],
                          [
                            'Map',
                          ],
                        ],
                      },
                      column26: {
                        type: [
                          'String',
                        ],
                        _likely_types: [
                          [
                            'String',
                          ],
                          [
                            'Integer',
                          ],
                          [
                            'Phone',
                          ],
                          [
                            'SSN',
                          ],
                          [
                            'Map',
                          ],
                        ],
                      },
                      column27: {
                        type: [
                          'String',
                        ],
                        _likely_types: [
                          [
                            'String',
                          ],
                          [
                            'Integer',
                          ],
                          [
                            'Phone',
                          ],
                          [
                            'SSN',
                          ],
                          [
                            'Map',
                          ],
                        ],
                      },
                      column28: {
                        type: [
                          'String',
                        ],
                        _likely_types: [
                          [
                            'String',
                          ],
                          [
                            'Integer',
                          ],
                          [
                            'Phone',
                          ],
                          [
                            'SSN',
                          ],
                          [
                            'Map',
                          ],
                        ],
                      },
                      column29: {
                        type: [
                          'String',
                        ],
                        _likely_types: [
                          [
                            'String',
                          ],
                          [
                            'Integer',
                          ],
                          [
                            'Phone',
                          ],
                          [
                            'SSN',
                          ],
                          [
                            'Map',
                          ],
                        ],
                      },
                      column30: {
                        type: [
                          'String',
                        ],
                        _likely_types: [
                          [
                            'String',
                          ],
                          [
                            'Integer',
                          ],
                          [
                            'Phone',
                          ],
                          [
                            'SSN',
                          ],
                          [
                            'Map',
                          ],
                        ],
                      },
                    },
                  },
                  kind: 'task',
                  type: 'Split',
                  parameters: {
                    col: {
                      kind: 'column',
                      type: 'Column',
                      value: 'column1',
                      relation: null,
                    },
                    type: {
                      kind: 'bundle',
                      type: 'Bundle',
                      value: 'on',
                    },
                    on: {
                      kind: 'constant',
                      type: 'String',
                      value: ',',
                    },
                    limit: {
                      kind: 'constant',
                      type: 'Integer',
                      value: 28,
                    },
                    quote: {
                      kind: 'constant',
                      type: 'String',
                      value: '"',
                    },
                    as: {
                      kind: 'array',
                      type: 'Array',
                      value: [
                        {
                          kind: 'constant',
                          type: 'String',
                          value: 'column2',
                        },
                        {
                          kind: 'constant',
                          type: 'String',
                          value: 'column3',
                        },
                        {
                          kind: 'constant',
                          type: 'String',
                          value: 'column4',
                        },
                        {
                          kind: 'constant',
                          type: 'String',
                          value: 'column5',
                        },
                        {
                          kind: 'constant',
                          type: 'String',
                          value: 'column6',
                        },
                        {
                          kind: 'constant',
                          type: 'String',
                          value: 'column7',
                        },
                        {
                          kind: 'constant',
                          type: 'String',
                          value: 'column8',
                        },
                        {
                          kind: 'constant',
                          type: 'String',
                          value: 'column9',
                        },
                        {
                          kind: 'constant',
                          type: 'String',
                          value: 'column10',
                        },
                        {
                          kind: 'constant',
                          type: 'String',
                          value: 'column11',
                        },
                        {
                          kind: 'constant',
                          type: 'String',
                          value: 'column12',
                        },
                        {
                          kind: 'constant',
                          type: 'String',
                          value: 'column13',
                        },
                        {
                          kind: 'constant',
                          type: 'String',
                          value: 'column14',
                        },
                        {
                          kind: 'constant',
                          type: 'String',
                          value: 'column15',
                        },
                        {
                          kind: 'constant',
                          type: 'String',
                          value: 'column16',
                        },
                        {
                          kind: 'constant',
                          type: 'String',
                          value: 'column17',
                        },
                        {
                          kind: 'constant',
                          type: 'String',
                          value: 'column18',
                        },
                        {
                          kind: 'constant',
                          type: 'String',
                          value: 'column19',
                        },
                        {
                          kind: 'constant',
                          type: 'String',
                          value: 'column20',
                        },
                        {
                          kind: 'constant',
                          type: 'String',
                          value: 'column21',
                        },
                        {
                          kind: 'constant',
                          type: 'String',
                          value: 'column22',
                        },
                        {
                          kind: 'constant',
                          type: 'String',
                          value: 'column23',
                        },
                        {
                          kind: 'constant',
                          type: 'String',
                          value: 'column24',
                        },
                        {
                          kind: 'constant',
                          type: 'String',
                          value: 'column25',
                        },
                        {
                          kind: 'constant',
                          type: 'String',
                          value: 'column26',
                        },
                        {
                          kind: 'constant',
                          type: 'String',
                          value: 'column27',
                        },
                        {
                          kind: 'constant',
                          type: 'String',
                          value: 'column28',
                        },
                        {
                          kind: 'constant',
                          type: 'String',
                          value: 'column29',
                        },
                        {
                          kind: 'constant',
                          type: 'String',
                          value: 'column30',
                        },
                      ],
                    },
                  },
                  outputName: null,
                },
                tableData: null,
                portId: null,
                id: 31117776,
                hash: '8973915e3fcdeb9431539eeb95ea3671e3937efb',
                pbemappingartifacts: [],
                targetmappingartifacts: [],
                udfscriptlines: [],
                dependencies: [],
              },
              {
                columnMetadata: null,
                task: {
                  annotations: {
                    outputColumnAnnotations: {
                      column2: {
                        type: [
                          'Emailaddress',
                        ],
                        _likely_types: [
                          [
                            'Emailaddress',
                          ],
                          [
                            'Url',
                          ],
                          [
                            'String',
                          ],
                          [
                            'Integer',
                          ],
                          [
                            'Phone',
                          ],
                        ],
                      },
                      column3: {
                        type: [
                          'String',
                        ],
                        _likely_types: [
                          [
                            'String',
                          ],
                          [
                            'Integer',
                          ],
                          [
                            'Phone',
                          ],
                          [
                            'SSN',
                          ],
                          [
                            'Map',
                          ],
                        ],
                      },
                      column4: {
                        type: [
                          'String',
                        ],
                        _likely_types: [
                          [
                            'String',
                          ],
                          [
                            'Integer',
                          ],
                          [
                            'Phone',
                          ],
                          [
                            'SSN',
                          ],
                          [
                            'Map',
                          ],
                        ],
                      },
                      column5: {
                        type: [
                          'String',
                        ],
                        _likely_types: [
                          [
                            'String',
                          ],
                          [
                            'Integer',
                          ],
                          [
                            'Phone',
                          ],
                          [
                            'SSN',
                          ],
                          [
                            'Map',
                          ],
                        ],
                      },
                      column6: {
                        type: [
                          'String',
                        ],
                        _likely_types: [
                          [
                            'String',
                          ],
                          [
                            'Integer',
                          ],
                          [
                            'Phone',
                          ],
                          [
                            'SSN',
                          ],
                          [
                            'Map',
                          ],
                        ],
                      },
                      column7: {
                        type: [
                          'Integer',
                        ],
                        _likely_types: [
                          [
                            'Integer',
                          ],
                          [
                            'Float',
                          ],
                          [
                            'String',
                          ],
                          [
                            'Phone',
                          ],
                          [
                            'SSN',
                          ],
                        ],
                      },
                      column8: {
                        type: [
                          'Integer',
                        ],
                        _likely_types: [
                          [
                            'Integer',
                          ],
                          [
                            'Float',
                          ],
                          [
                            'String',
                          ],
                          [
                            'Phone',
                          ],
                          [
                            'SSN',
                          ],
                        ],
                      },
                      column9: {
                        type: [
                          'String',
                        ],
                        _likely_types: [
                          [
                            'String',
                          ],
                          [
                            'Integer',
                          ],
                          [
                            'Phone',
                          ],
                          [
                            'SSN',
                          ],
                          [
                            'Map',
                          ],
                        ],
                      },
                      column10: {
                        type: [
                          'Datetime',
                          'yy-mm-dd hh:mm:ss',
                          'yyyy*mm*dd*HH:MM:SS.sssX',
                        ],
                        _likely_types: [
                          [
                            'Datetime',
                            'yy-mm-dd hh:mm:ss',
                            'yyyy*mm*dd*HH:MM:SS.sssX',
                          ],
                          [
                            'String',
                          ],
                          [
                            'Datetime',
                            'yy-dd-mm hh:mm:ss',
                            'yyyy*dd*mm*HH:MM:SS.sssX',
                          ],
                          [
                            'Integer',
                          ],
                          [
                            'Phone',
                          ],
                        ],
                      },
                      column11: {
                        type: [
                          'Datetime',
                          'yy-mm-dd hh:mm:ss',
                          'yyyy*mm*dd*HH:MM:SS.sssX',
                        ],
                        _likely_types: [
                          [
                            'Datetime',
                            'yy-mm-dd hh:mm:ss',
                            'yyyy*mm*dd*HH:MM:SS.sssX',
                          ],
                          [
                            'String',
                          ],
                          [
                            'Integer',
                          ],
                          [
                            'Phone',
                          ],
                          [
                            'SSN',
                          ],
                        ],
                      },
                      column12: {
                        type: [
                          'String',
                        ],
                        _likely_types: [
                          [
                            'String',
                          ],
                          [
                            'Integer',
                          ],
                          [
                            'Phone',
                          ],
                          [
                            'SSN',
                          ],
                          [
                            'Map',
                          ],
                        ],
                      },
                      column13: {
                        type: [
                          'State',
                        ],
                        _likely_types: [
                          [
                            'State',
                          ],
                          [
                            'String',
                          ],
                          [
                            'Integer',
                          ],
                          [
                            'Phone',
                          ],
                          [
                            'SSN',
                          ],
                        ],
                      },
                      column14: {
                        type: [
                          'String',
                        ],
                        _likely_types: [
                          [
                            'String',
                          ],
                          [
                            'Integer',
                          ],
                          [
                            'Phone',
                          ],
                          [
                            'SSN',
                          ],
                          [
                            'Map',
                          ],
                        ],
                      },
                      column15: {
                        type: [
                          'String',
                        ],
                        _likely_types: [
                          [
                            'String',
                          ],
                          [
                            'Integer',
                          ],
                          [
                            'Phone',
                          ],
                          [
                            'SSN',
                          ],
                          [
                            'Map',
                          ],
                        ],
                      },
                      column16: {
                        type: [
                          'String',
                        ],
                        _likely_types: [
                          [
                            'String',
                          ],
                          [
                            'Integer',
                          ],
                          [
                            'Phone',
                          ],
                          [
                            'SSN',
                          ],
                          [
                            'Map',
                          ],
                        ],
                      },
                      column17: {
                        type: [
                          'Integer',
                        ],
                        _likely_types: [
                          [
                            'Integer',
                          ],
                          [
                            'Float',
                          ],
                          [
                            'String',
                          ],
                          [
                            'Phone',
                          ],
                          [
                            'SSN',
                          ],
                        ],
                      },
                      column18: {
                        type: [
                          'Integer',
                        ],
                        _likely_types: [
                          [
                            'Integer',
                          ],
                          [
                            'Float',
                          ],
                          [
                            'String',
                          ],
                          [
                            'Phone',
                          ],
                          [
                            'SSN',
                          ],
                        ],
                      },
                      column19: {
                        type: [
                          'Integer',
                        ],
                        _likely_types: [
                          [
                            'Integer',
                          ],
                          [
                            'Float',
                          ],
                          [
                            'String',
                          ],
                          [
                            'Phone',
                          ],
                          [
                            'SSN',
                          ],
                        ],
                      },
                      column20: {
                        type: [
                          'Datetime',
                          'yy-mm-dd hh:mm:ss',
                          'yyyy*mm*dd*HH:MM:SS.sssX',
                        ],
                        _likely_types: [
                          [
                            'Datetime',
                            'yy-mm-dd hh:mm:ss',
                            'yyyy*mm*dd*HH:MM:SS.sssX',
                          ],
                          [
                            'String',
                          ],
                          [
                            'Integer',
                          ],
                          [
                            'Phone',
                          ],
                          [
                            'SSN',
                          ],
                        ],
                      },
                      column21: {
                        type: [
                          'String',
                        ],
                        _likely_types: [
                          [
                            'String',
                          ],
                          [
                            'Integer',
                          ],
                          [
                            'Phone',
                          ],
                          [
                            'SSN',
                          ],
                          [
                            'Float',
                          ],
                        ],
                      },
                      column22: {
                        type: [
                          'Integer',
                        ],
                        _likely_types: [
                          [
                            'Integer',
                          ],
                          [
                            'Float',
                          ],
                          [
                            'String',
                          ],
                          [
                            'Phone',
                          ],
                          [
                            'SSN',
                          ],
                        ],
                      },
                      column23: {
                        type: [
                          'String',
                        ],
                        _likely_types: [
                          [
                            'String',
                          ],
                          [
                            'Integer',
                          ],
                          [
                            'Phone',
                          ],
                          [
                            'SSN',
                          ],
                          [
                            'Map',
                          ],
                        ],
                      },
                      column24: {
                        type: [
                          'String',
                        ],
                        _likely_types: [
                          [
                            'String',
                          ],
                          [
                            'Integer',
                          ],
                          [
                            'Phone',
                          ],
                          [
                            'SSN',
                          ],
                          [
                            'Map',
                          ],
                        ],
                      },
                      column25: {
                        type: [
                          'String',
                        ],
                        _likely_types: [
                          [
                            'String',
                          ],
                          [
                            'Integer',
                          ],
                          [
                            'Phone',
                          ],
                          [
                            'SSN',
                          ],
                          [
                            'Map',
                          ],
                        ],
                      },
                      column26: {
                        type: [
                          'String',
                        ],
                        _likely_types: [
                          [
                            'String',
                          ],
                          [
                            'Integer',
                          ],
                          [
                            'Phone',
                          ],
                          [
                            'SSN',
                          ],
                          [
                            'Map',
                          ],
                        ],
                      },
                      column27: {
                        type: [
                          'String',
                        ],
                        _likely_types: [
                          [
                            'String',
                          ],
                          [
                            'Integer',
                          ],
                          [
                            'Phone',
                          ],
                          [
                            'SSN',
                          ],
                          [
                            'Map',
                          ],
                        ],
                      },
                      column28: {
                        type: [
                          'String',
                        ],
                        _likely_types: [
                          [
                            'String',
                          ],
                          [
                            'Integer',
                          ],
                          [
                            'Phone',
                          ],
                          [
                            'SSN',
                          ],
                          [
                            'Map',
                          ],
                        ],
                      },
                      column29: {
                        type: [
                          'Bool',
                        ],
                        _likely_types: [
                          [
                            'Bool',
                          ],
                          [
                            'String',
                          ],
                          [
                            'Integer',
                          ],
                          [
                            'Phone',
                          ],
                          [
                            'SSN',
                          ],
                        ],
                      },
                      column30: {
                        type: [
                          'Datetime',
                          'yy-mm-dd hh:mm:ss',
                          'yyyy*mm*dd*HH:MM:SS.sssX',
                        ],
                        _likely_types: [
                          [
                            'Datetime',
                            'yy-mm-dd hh:mm:ss',
                            'yyyy*mm*dd*HH:MM:SS.sssX',
                          ],
                          [
                            'String',
                          ],
                          [
                            'Integer',
                          ],
                          [
                            'Phone',
                          ],
                          [
                            'SSN',
                          ],
                        ],
                      },
                    },
                  },
                  kind: 'task',
                  type: 'Set',
                  parameters: {
                    col: {
                      kind: 'array',
                      type: 'Array',
                      value: [
                        {
                          kind: 'column',
                          type: 'Wildcard',
                          value: '*',
                          annotations: {
                            includeLineage: false,
                            includeFileLineage: false,
                          },
                          relation: null,
                        },
                      ],
                    },
                    value: {
                      annotations: {},
                      kind: 'func',
                      type: 'If',
                      parameters: {
                        true_expression: {
                          annotations: {},
                          kind: 'func',
                          type: 'Substitute',
                          parameters: {
                            ignoreCase: {
                              kind: 'constant',
                              type: 'Bool',
                              value: false,
                            },
                            col: {
                              annotations: {},
                              kind: 'func',
                              type: 'Trim',
                              parameters: {
                                col: {
                                  kind: 'variable',
                                  type: 'Variable',
                                  value: 'col',
                                },
                              },
                            },
                            on: {
                              kind: 'constant',
                              type: 'Pattern',
                              value: '{start}"|"{end}',
                            },
                            with: {
                              kind: 'constant',
                              type: 'String',
                              value: '',
                            },
                          },
                        },
                        false_expression: {
                          kind: 'variable',
                          type: 'Variable',
                          value: 'col',
                        },
                        predicate: {
                          annotations: {},
                          kind: 'func',
                          type: 'And',
                          parameters: {
                            lhs: {
                              annotations: {},
                              kind: 'func',
                              type: 'StartsWith',
                              parameters: {
                                ignore_case: {
                                  kind: 'constant',
                                  type: 'Bool',
                                  value: false,
                                },
                                lhs: {
                                  annotations: {},
                                  kind: 'func',
                                  type: 'Trim',
                                  parameters: {
                                    col: {
                                      kind: 'variable',
                                      type: 'Variable',
                                      value: 'col',
                                    },
                                  },
                                },
                                rhs: {
                                  kind: 'constant',
                                  type: 'String',
                                  value: '"',
                                },
                              },
                            },
                            rhs: {
                              annotations: {},
                              kind: 'func',
                              type: 'EndsWith',
                              parameters: {
                                ignore_case: {
                                  kind: 'constant',
                                  type: 'Bool',
                                  value: false,
                                },
                                lhs: {
                                  annotations: {},
                                  kind: 'func',
                                  type: 'Trim',
                                  parameters: {
                                    col: {
                                      kind: 'variable',
                                      type: 'Variable',
                                      value: 'col',
                                    },
                                  },
                                },
                                rhs: {
                                  kind: 'constant',
                                  type: 'String',
                                  value: '"',
                                },
                              },
                            },
                          },
                        },
                      },
                    },
                  },
                  outputName: null,
                },
                tableData: null,
                portId: null,
                id: 31117777,
                hash: '5eee209db795d4e9334afe965b63f48b54cee0c6',
                pbemappingartifacts: [],
                targetmappingartifacts: [],
                udfscriptlines: [],
                dependencies: [],
              },
              {
                columnMetadata: null,
                task: {
                  annotations: {
                    outputColumnAnnotations: {
                      column2: {
                        type: [
                          'Emailaddress',
                        ],
                        _likely_types: [
                          [
                            'Emailaddress',
                          ],
                          [
                            'Url',
                          ],
                          [
                            'String',
                          ],
                          [
                            'Integer',
                          ],
                          [
                            'Phone',
                          ],
                        ],
                      },
                      column3: {
                        type: [
                          'String',
                        ],
                        _likely_types: [
                          [
                            'String',
                          ],
                          [
                            'Integer',
                          ],
                          [
                            'Phone',
                          ],
                          [
                            'SSN',
                          ],
                          [
                            'Map',
                          ],
                        ],
                      },
                      column4: {
                        type: [
                          'String',
                        ],
                        _likely_types: [
                          [
                            'String',
                          ],
                          [
                            'Integer',
                          ],
                          [
                            'Phone',
                          ],
                          [
                            'SSN',
                          ],
                          [
                            'Map',
                          ],
                        ],
                      },
                      column5: {
                        type: [
                          'String',
                        ],
                        _likely_types: [
                          [
                            'String',
                          ],
                          [
                            'Integer',
                          ],
                          [
                            'Phone',
                          ],
                          [
                            'SSN',
                          ],
                          [
                            'Map',
                          ],
                        ],
                      },
                      column6: {
                        type: [
                          'String',
                        ],
                        _likely_types: [
                          [
                            'String',
                          ],
                          [
                            'Integer',
                          ],
                          [
                            'Phone',
                          ],
                          [
                            'SSN',
                          ],
                          [
                            'Map',
                          ],
                        ],
                      },
                      column7: {
                        type: [
                          'Integer',
                        ],
                        _likely_types: [
                          [
                            'Integer',
                          ],
                          [
                            'Float',
                          ],
                          [
                            'String',
                          ],
                          [
                            'Phone',
                          ],
                          [
                            'SSN',
                          ],
                        ],
                      },
                      column8: {
                        type: [
                          'Integer',
                        ],
                        _likely_types: [
                          [
                            'Integer',
                          ],
                          [
                            'Float',
                          ],
                          [
                            'String',
                          ],
                          [
                            'Phone',
                          ],
                          [
                            'SSN',
                          ],
                        ],
                      },
                      column9: {
                        type: [
                          'String',
                        ],
                        _likely_types: [
                          [
                            'String',
                          ],
                          [
                            'Integer',
                          ],
                          [
                            'Phone',
                          ],
                          [
                            'SSN',
                          ],
                          [
                            'Map',
                          ],
                        ],
                      },
                      column10: {
                        type: [
                          'Datetime',
                          'yy-mm-dd hh:mm:ss',
                          'yyyy*mm*dd*HH:MM:SS.sssX',
                        ],
                        _likely_types: [
                          [
                            'Datetime',
                            'yy-mm-dd hh:mm:ss',
                            'yyyy*mm*dd*HH:MM:SS.sssX',
                          ],
                          [
                            'String',
                          ],
                          [
                            'Datetime',
                            'yy-dd-mm hh:mm:ss',
                            'yyyy*dd*mm*HH:MM:SS.sssX',
                          ],
                          [
                            'Integer',
                          ],
                          [
                            'Phone',
                          ],
                        ],
                      },
                      column11: {
                        type: [
                          'Datetime',
                          'yy-mm-dd hh:mm:ss',
                          'yyyy*mm*dd*HH:MM:SS.sssX',
                        ],
                        _likely_types: [
                          [
                            'Datetime',
                            'yy-mm-dd hh:mm:ss',
                            'yyyy*mm*dd*HH:MM:SS.sssX',
                          ],
                          [
                            'String',
                          ],
                          [
                            'Integer',
                          ],
                          [
                            'Phone',
                          ],
                          [
                            'SSN',
                          ],
                        ],
                      },
                      column12: {
                        type: [
                          'String',
                        ],
                        _likely_types: [
                          [
                            'String',
                          ],
                          [
                            'Integer',
                          ],
                          [
                            'Phone',
                          ],
                          [
                            'SSN',
                          ],
                          [
                            'Map',
                          ],
                        ],
                      },
                      column13: {
                        type: [
                          'State',
                        ],
                        _likely_types: [
                          [
                            'State',
                          ],
                          [
                            'String',
                          ],
                          [
                            'Integer',
                          ],
                          [
                            'Phone',
                          ],
                          [
                            'SSN',
                          ],
                        ],
                      },
                      column14: {
                        type: [
                          'String',
                        ],
                        _likely_types: [
                          [
                            'String',
                          ],
                          [
                            'Integer',
                          ],
                          [
                            'Phone',
                          ],
                          [
                            'SSN',
                          ],
                          [
                            'Map',
                          ],
                        ],
                      },
                      column15: {
                        type: [
                          'String',
                        ],
                        _likely_types: [
                          [
                            'String',
                          ],
                          [
                            'Integer',
                          ],
                          [
                            'Phone',
                          ],
                          [
                            'SSN',
                          ],
                          [
                            'Map',
                          ],
                        ],
                      },
                      column16: {
                        type: [
                          'String',
                        ],
                        _likely_types: [
                          [
                            'String',
                          ],
                          [
                            'Integer',
                          ],
                          [
                            'Phone',
                          ],
                          [
                            'SSN',
                          ],
                          [
                            'Map',
                          ],
                        ],
                      },
                      column17: {
                        type: [
                          'Integer',
                        ],
                        _likely_types: [
                          [
                            'Integer',
                          ],
                          [
                            'Float',
                          ],
                          [
                            'String',
                          ],
                          [
                            'Phone',
                          ],
                          [
                            'SSN',
                          ],
                        ],
                      },
                      column18: {
                        type: [
                          'Integer',
                        ],
                        _likely_types: [
                          [
                            'Integer',
                          ],
                          [
                            'Float',
                          ],
                          [
                            'String',
                          ],
                          [
                            'Phone',
                          ],
                          [
                            'SSN',
                          ],
                        ],
                      },
                      column19: {
                        type: [
                          'Integer',
                        ],
                        _likely_types: [
                          [
                            'Integer',
                          ],
                          [
                            'Float',
                          ],
                          [
                            'String',
                          ],
                          [
                            'Phone',
                          ],
                          [
                            'SSN',
                          ],
                        ],
                      },
                      column20: {
                        type: [
                          'Datetime',
                          'yy-mm-dd hh:mm:ss',
                          'yyyy*mm*dd*HH:MM:SS.sssX',
                        ],
                        _likely_types: [
                          [
                            'Datetime',
                            'yy-mm-dd hh:mm:ss',
                            'yyyy*mm*dd*HH:MM:SS.sssX',
                          ],
                          [
                            'String',
                          ],
                          [
                            'Integer',
                          ],
                          [
                            'Phone',
                          ],
                          [
                            'SSN',
                          ],
                        ],
                      },
                      column21: {
                        type: [
                          'String',
                        ],
                        _likely_types: [
                          [
                            'String',
                          ],
                          [
                            'Integer',
                          ],
                          [
                            'Phone',
                          ],
                          [
                            'SSN',
                          ],
                          [
                            'Float',
                          ],
                        ],
                      },
                      column22: {
                        type: [
                          'Integer',
                        ],
                        _likely_types: [
                          [
                            'Integer',
                          ],
                          [
                            'Float',
                          ],
                          [
                            'String',
                          ],
                          [
                            'Phone',
                          ],
                          [
                            'SSN',
                          ],
                        ],
                      },
                      column23: {
                        type: [
                          'String',
                        ],
                        _likely_types: [
                          [
                            'String',
                          ],
                          [
                            'Integer',
                          ],
                          [
                            'Phone',
                          ],
                          [
                            'SSN',
                          ],
                          [
                            'Map',
                          ],
                        ],
                      },
                      column24: {
                        type: [
                          'String',
                        ],
                        _likely_types: [
                          [
                            'String',
                          ],
                          [
                            'Integer',
                          ],
                          [
                            'Phone',
                          ],
                          [
                            'SSN',
                          ],
                          [
                            'Map',
                          ],
                        ],
                      },
                      column25: {
                        type: [
                          'String',
                        ],
                        _likely_types: [
                          [
                            'String',
                          ],
                          [
                            'Integer',
                          ],
                          [
                            'Phone',
                          ],
                          [
                            'SSN',
                          ],
                          [
                            'Map',
                          ],
                        ],
                      },
                      column26: {
                        type: [
                          'String',
                        ],
                        _likely_types: [
                          [
                            'String',
                          ],
                          [
                            'Integer',
                          ],
                          [
                            'Phone',
                          ],
                          [
                            'SSN',
                          ],
                          [
                            'Map',
                          ],
                        ],
                      },
                      column27: {
                        type: [
                          'String',
                        ],
                        _likely_types: [
                          [
                            'String',
                          ],
                          [
                            'Integer',
                          ],
                          [
                            'Phone',
                          ],
                          [
                            'SSN',
                          ],
                          [
                            'Map',
                          ],
                        ],
                      },
                      column28: {
                        type: [
                          'String',
                        ],
                        _likely_types: [
                          [
                            'String',
                          ],
                          [
                            'Integer',
                          ],
                          [
                            'Phone',
                          ],
                          [
                            'SSN',
                          ],
                          [
                            'Map',
                          ],
                        ],
                      },
                      column29: {
                        type: [
                          'Bool',
                        ],
                        _likely_types: [
                          [
                            'Bool',
                          ],
                          [
                            'String',
                          ],
                          [
                            'Integer',
                          ],
                          [
                            'Phone',
                          ],
                          [
                            'SSN',
                          ],
                        ],
                      },
                      column30: {
                        type: [
                          'Datetime',
                          'yy-mm-dd hh:mm:ss',
                          'yyyy*mm*dd*HH:MM:SS.sssX',
                        ],
                        _likely_types: [
                          [
                            'Datetime',
                            'yy-mm-dd hh:mm:ss',
                            'yyyy*mm*dd*HH:MM:SS.sssX',
                          ],
                          [
                            'String',
                          ],
                          [
                            'Integer',
                          ],
                          [
                            'Phone',
                          ],
                          [
                            'SSN',
                          ],
                        ],
                      },
                    },
                  },
                  kind: 'task',
                  type: 'Replace',
                  parameters: {
                    with: {
                      kind: 'constant',
                      type: 'String',
                      value: '"',
                    },
                    col: {
                      kind: 'array',
                      type: 'Array',
                      value: [
                        {
                          kind: 'column',
                          type: 'Wildcard',
                          value: '*',
                          annotations: {
                            includeLineage: false,
                            includeFileLineage: false,
                          },
                          relation: null,
                        },
                      ],
                    },
                    type: {
                      kind: 'bundle',
                      type: 'Bundle',
                      value: 'on',
                    },
                    on: {
                      kind: 'constant',
                      type: 'String',
                      value: '""',
                    },
                    global: {
                      kind: 'constant',
                      type: 'Bool',
                      value: true,
                    },
                  },
                  outputName: null,
                },
                tableData: null,
                portId: null,
                id: 31117778,
                hash: '7496b6b2cbe1f6af3cd7c945a1a16a19ccf8ea42',
                pbemappingartifacts: [],
                targetmappingartifacts: [],
                udfscriptlines: [],
                dependencies: [],
              },
            ],
            dqScriptRules: [],
          },
        ],
        outputobjects: [
          {
            id: 826050,
            execution: 'dataflow',
            profiler: true,
            flowNodeId: 5571249,
            isAdhoc: false,
            ignoreRecipeErrors: false,
            name: null,
            description: null,
            publications: [
              {
                path: [
                  'czechrepublic-290206',
                  'SAP',
                ],
                parameters: {
                  arrayStrictTypeMatch: 'false',
                  colsToUpdate: '[]',
                  deleteUnmatchedRowsInTarget: 'false',
                  externalTableLocation: null,
                  insertChecked: 'false',
                  isDeltaTable: 'false',
                  isExternalTable: 'false',
                  matchedRowsAction: 'update',
                  mergeJoinKeys: '[]',
                  strictTypeMatch: 'false',
                },
                id: 789645,
                tableName: 'dup_order_detail',
                targetType: 'bigquery',
                action: 'createAndLoad',
                connectionId: null,
                runParameters: [],
              },
            ],
            writesettings: [],
            sqlscripts: [
              {
                sqlScript: 'DROP TABLE IF EXISTS\n  SAP.order_de_ident;\n  \nCREATE TABLE\n  SAP.order_de_ident AS\nSELECT\n  * EXCEPT (email,\n    cellphone_number,\n    cust_name,\n    addr1)\nFROM (\n  SELECT\n    *,    \n    DENSE_RANK() OVER (PARTITION BY insertId ORDER BY processing_dt DESC) row_number\n  FROM\n    `czechrepublic-290206.SAP.dup_order_detail` )\nWHERE\n  row_number = 1\n\n',
                id: 10558,
                connectionId: null,
                type: 'post',
                vendor: 'bigquery',
                runParameters: [],
              },
            ],
            outputobjectdataflowoptions: [
              {
                id: 12577372,
                key: 'autoscalingAlgorithm',
                value: 'THROUGHPUT_BASED',
              },
              {
                id: 12577378,
                key: 'hostProjectId',
                value: '',
              },
              {
                id: 12577377,
                key: 'label.',
                value: '',
              },
              {
                id: 12577370,
                key: 'machineType',
                value: 'n1-standard-1',
              },
              {
                id: 12577375,
                key: 'maxNumWorkers',
                value: '1000',
              },
              {
                id: 12577371,
                key: 'network',
                value: '',
              },
              {
                id: 12577374,
                key: 'numWorkers',
                value: '1',
              },
              {
                id: 12577368,
                key: 'region',
                value: 'asia-east1',
              },
              {
                id: 12577373,
                key: 'serviceAccount',
                value: '',
              },
              {
                id: 12577367,
                key: 'subnetwork',
                value: '',
              },
              {
                id: 12577376,
                key: 'usePublicIps',
                value: 'true',
              },
              {
                id: 12577369,
                key: 'zone',
                value: '',
              },
            ],
            outputobjectsparkoptions: [],
            outputobjectschemadriftoptions: [],
          },
          {
            id: 825521,
            execution: 'dataflow',
            profiler: true,
            flowNodeId: 5571249,
            isAdhoc: true,
            ignoreRecipeErrors: true,
            name: null,
            description: null,
            publications: [
              {
                path: [
                  'czechrepublic-290206',
                  'SAP',
                ],
                parameters: {
                  arrayStrictTypeMatch: 'false',
                  colsToUpdate: '[]',
                  deleteUnmatchedRowsInTarget: 'false',
                  externalTableLocation: null,
                  insertChecked: 'false',
                  isDeltaTable: 'false',
                  isExternalTable: 'false',
                  matchedRowsAction: 'update',
                  mergeJoinKeys: '[]',
                  strictTypeMatch: 'false',
                },
                id: 784168,
                tableName: 'dup_order_detail',
                targetType: 'bigquery',
                action: 'createAndLoad',
                connectionId: null,
                runParameters: [],
              },
            ],
            writesettings: [],
            sqlscripts: [
              {
                sqlScript: 'DROP TABLE IF EXISTS\n  SAP.order_de_ident;\n  \nCREATE TABLE\n  SAP.order_de_ident AS\nSELECT\n  * EXCEPT (email,\n    cellphone_number,\n    cust_name,\n    addr1)\nFROM (\n  SELECT\n    *,\n    ROW_NUMBER() OVER (PARTITION BY insertId ORDER BY processing_dt DESC) row_number\n  FROM\n    `czechrepublic-290206.SAP.dup_order_detail` )\nWHERE\n  row_number = 1\n\n  \n  ',
                id: 10113,
                connectionId: null,
                type: 'post',
                vendor: 'bigquery',
                runParameters: [],
              },
            ],
            outputobjectdataflowoptions: [
              {
                id: 12523557,
                key: 'autoscalingAlgorithm',
                value: 'THROUGHPUT_BASED',
              },
              {
                id: 12523563,
                key: 'hostProjectId',
                value: '',
              },
              {
                id: 12523562,
                key: 'label.',
                value: '',
              },
              {
                id: 12523555,
                key: 'machineType',
                value: 'n1-standard-1',
              },
              {
                id: 12523560,
                key: 'maxNumWorkers',
                value: '1000',
              },
              {
                id: 12523556,
                key: 'network',
                value: '',
              },
              {
                id: 12523559,
                key: 'numWorkers',
                value: '1',
              },
              {
                id: 12523553,
                key: 'region',
                value: 'asia-east1',
              },
              {
                id: 12523558,
                key: 'serviceAccount',
                value: '',
              },
              {
                id: 12523552,
                key: 'subnetwork',
                value: '',
              },
              {
                id: 12523561,
                key: 'usePublicIps',
                value: 'true',
              },
              {
                id: 12523554,
                key: 'zone',
                value: '',
              },
            ],
            outputobjectsparkoptions: [],
            outputobjectschemadriftoptions: [],
          },
        ],
        datasources: [
          {
            path: '/sap2bq.csv',
            bucket: 'sap_export',
            userinfo: null,
            type: 'gs',
            host: null,
            hasDynamicBucket: false,
            hasDynamicUserInfo: false,
            hasDynamicHost: false,
            isDynamicOrConverted: false,
            id: 1892507,
            dynamicPath: null,
            dynamicBucket: null,
            dynamicHost: null,
            dynamicUserInfo: null,
            connectionId: null,
            isSchematized: true,
            isDynamic: false,
            isConverted: false,
            disableTypeInference: false,
            hasStructuring: true,
            hasSchemaErrors: false,
            parsingScriptId: 5023417,
            storageLocation: {
              fullUri: 'gs://sap_export/sap2bq.csv',
              id: 22179172,
              path: '/sap2bq.csv',
              size: 3704008,
              type: 'gs',
              bucket: 'sap_export',
              blobHost: null,
              container: null,
              hash: '505cc69a4fcc228ef6b3177df9da317d8c4f0e28',
              host: null,
              userinfo: null,
            },
            runParameters: [],
          },
        ],
        webhookflowtasks: [],
      },
    ],
    udfscriptartifacts: [],
  },
  hash: 'MgwbdLunH9yVjqB8NeC/qJx/zuYKSmAk',
}
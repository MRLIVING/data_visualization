delete row: $sourcerownumber == 1
// drop col: column22 action: Drop
textformat col: column2, column3, column4, column5, column6, column7, column8, column9, column10, column11, column12, column13, column14, column15, column16, column17, column18, column19, column20, column21 type: trimquotes
replacepatterns col: column2, column3, column4, column5, column6, column7, column8, column9, column10, column11, column12, column13, column14, column15, column16, column17, column18, column19, column20, column21 with: '' on: /^\t|\t$/ global: true
header
rename type: manual mapping: [Email,'email']
rename type: manual mapping: [{手機號碼},'cellphone_number']
rename type: manual mapping: [{客戶/供應商名},'cust_name']
rename type: manual mapping: [{客戶/供應商編碼},'cust_id']
splitpatterns col: cust_id type: between start: /[\/-]/ includeStart: true
rename type: manual mapping: [cust_id1,'cust_id']
settype col: cust_id type: String
drop col: cust_id2 action: Drop
rename type: manual mapping: [{地址1},'addr1']
settype col: addr1 type: String
rename type: manual mapping: [{訂單金額合計},'order_total']
rename type: manual mapping: [{訂貨單號},'order_id']
rename type: manual mapping: [{門市},'sale_channel']
settype col: sale_channel type: String
rename type: manual mapping: [{付訂日期},'deposit_date']
rename type: manual mapping: [{各品項交期日},'delivery_date']
settype col: delivery_date datetimeType: 'Datetime','yy-mm-dd','yyyy*mm*dd' type: Datetime
rename type: manual mapping: [{品項名稱[規格]},'product_name_spec']
settype col: product_name_spec type: String
rename type: manual mapping: [{供應商名},'supplier']
rename type: manual mapping: [{品項群組名稱},'category_group']
replacepatterns col: category_group with: 'ㆍ' on: '∬' global: true
rename type: manual mapping: [{品項編碼},'product_id']
rename type: manual mapping: [{品項名},'product_name']
rename type: manual mapping: [{價格（含稅）（計算值）},'unit_price']
rename type: manual mapping: [{數量},'quantity']
settype col: quantity type: Integer
rename type: manual mapping: [{價格（含稅）（計算值）(附加數量)},'price']
rename type: manual mapping: [{日期},'ecount_date']
rename type: manual mapping: [{支付條件},'payment_channel']
replacepatterns col: price,unit_price with: '' on: /,/ global: true
settype col: price,unit_price type: Float
derive type: single value: CASE([MATCHES([sale_channel], '網路', false),'線上','線下']) as: 'channel_oo'
derive type: single value: CASE([sale_channel == '內湖旗艦店', 100, sale_channel == '新竹竹北店', 102, sale_channel == '台中文心店', 103, sale_channel == '高雄巨蛋店', 104, sale_channel == '網路', 200, 300]) as: 'sale_channel_sort'
dateformat col: ecount_date type: yymmddcommondateslash
extractpatterns type: custom col: addr1 on: /臺北市|台北市|北市|南海島|釣魚臺|基隆市|新北市|新北|新店|板橋|宜蘭縣|宜蘭|連江縣|桃園市|新竹市|新竹縣|竹北市|新竹門市|桃園市|桃園|苗栗縣|苗栗市|臺中市|台中市|彰化縣|彰化市|彰化|南投縣|南投市|嘉義市|嘉義縣|雲林縣|臺南市|台南市|高雄市|澎湖縣|金門縣|屏東縣|屏東市|臺東縣|台東縣|臺東市|台東市|花蓮縣|花蓮市|自取/ limit: 1
derive type: single value: CASE([MATCHES([addr2], /台北市|北市/, false), '臺北市', MATCHES([addr2], /新北|板橋|新店/, false), '新北市', MATCHES([addr2], '宜蘭', false), '宜蘭縣', addr2 == '桃園', '桃園市', MATCHES([addr2], /竹北市|新竹門市/, false), '新竹縣', addr2 == '苗栗市', '苗栗縣', addr2 == '台中市', '臺中市', MATCHES([addr2], '彰化', false), '彰化縣', addr2 == '南投市', '南投縣', addr2 == '台南市', '臺南市', addr2 == '屏東市', '屏東縣', addr2 == '台東縣', '臺東縣', addr2 == '台東市', '臺東縣', addr2 == '臺東市', '臺東縣', addr2 == '花蓮市', '花蓮縣', MATCHES([addr2], /自取/, false) && MATCHES([sale_channel], /內湖/, false), '臺北市', addr2]) as: 'district'
derive type: single value: CASE([MATCHES([addr2], /臺北市|台北市|北市|新北市|新北|新店|板橋|基隆市|宜蘭縣|宜蘭/, false), '北部', MATCHES([addr2], /桃園市|桃園|新竹市|新竹縣|新竹|竹北市|苗栗縣|苗栗市/, false), '中北部', MATCHES([addr2], /臺中市|台中市|彰化縣|彰化|南投縣|南投市|雲林縣/, false), '中部', MATCHES([addr2], /嘉義縣|嘉義市|臺南市|台南市|高雄市|屏東縣|屏東|臺東縣|台東縣|臺東市|台東市/, false), '南部', addr2 == '花蓮縣', '北部', addr2 == '花蓮市', '北部', addr2 == '澎湖縣', '北部', MATCHES([addr2], /自取/, false) && MATCHES([sale_channel], /內湖/, false), '北部']) as: 'region'
derive type: single value: CASE([region == '北部', 10, region == '中北部', 11, region == '中部', 20, region == '南部', 30]) as: 'region_sort'
extractpatterns type: custom col: category_group on: /[^ㆍ]+節/
rename type: manual mapping: [category_group1,'category_campaign']
extractpatterns type: custom col: category_group on: /陶板|布料|皮革|塑料|大理石/
rename type: manual mapping: [category_group1,'category_material']
extractpatterns type: custom col: category_group on: /AT|CA|CC|CO|DG|MN|SD|ST/
rename type: manual mapping: [category_group1,'category_factory']
extractpatterns type: custom col: category_group on: /世紀中現代風|美式鄉村風格|法式鄉村風格|工業風格|美式|法式|北歐/
rename type: manual mapping: [category_group1,'category_style_tmp']
derive type: single value: CASE([MATCHES([category_factory], /ST/, false),'MCM',!ISNULL(category_style_tmp),category_style_tmp,NULL()]) as: 'category_style'
extractpatterns type: custom col: category_group on: /沙發\/主人椅|腳凳|餐椅|板凳|吧椅|茶\(邊\)几|書桌|櫃架|床架|餐桌|寢具|家飾|燈飾|配件|鄉村風布套|辦公椅/
rename type: manual mapping: [category_group1,'category_fun_tmp']
derive type: single value: CASE([MATCHES([category_fun_tmp], '床架', false) && !MATCHES([category_style], 'MCM', false) && !MATCHES([category_factory], 'CC', false), '床架', MATCHES([category_fun_tmp], '櫃架', false) && !MATCHES([category_style], /MCM/, false) && !MATCHES([category_factory], 'CC', false), '櫃架', !MATCHES([category_fun_tmp], /床架|櫃架/, false), category_fun_tmp]) as: 'category_fun'
derive type: single value: CASE([MATCHES([category_group], /棉被/, false), '棉被', MATCHES([category_group], /枕頭|枕套/, false), '枕頭', MATCHES([category_group], /床墊|床套|保潔墊|床板/, false), '床墊', NULL()]) as: 'category_mat'
derive type: single value: CASE([(MATCHES([category_factory], 'SD', false) || (MATCHES([category_factory], 'CA', false) && MATCHES([category_material], '布料', false))) && !MATCHES([category_fun], /餐椅|餐桌|板凳|吧椅|茶\(邊\)几/, false), '北歐風沙發', MATCHES([category_factory], /MN/, false), '美式沙發', MATCHES([category_factory], /CC/, false), '法式鄉村', MATCHES([category_fun], /辦公椅|家飾|書桌|茶\(邊\)几/, false) && !MATCHES([category_style], 'MCM', false) && !MATCHES([category_factory], 'CC', false) && !MATCHES([category_material], '大理石', false), '其他北歐家具', NULL()]) as: 'category_region_style'
derive type: single value: CASE([MATCHES([category_region_style], /北歐風沙發|其他北歐家具|美式沙發|法式鄉村/, false), category_region_style, MATCHES([category_style], /MCM/, false), 'MCM', MATCHES([category_fun], /床架|櫃架|燈飾/, false), category_fun, MATCHES([category_material], '大理石', false), '大理石', MATCHES([category_fun], '餐桌', false) && !MATCHES([category_material], '大理石', false) && !MATCHES([category_region_style], /法式鄉村/, false) && !MATCHES([category_style], 'MCM', false), '餐桌', MATCHES([category_fun], /餐椅|板凳|吧椅/, false) && !MATCHES([category_material], '大理石', false) && !MATCHES([category_region_style], /法式鄉村/, false) && !MATCHES([category_style], /MCM/, false) && !MATCHES([category_fun], '辦公椅', false), '餐椅\/板凳\/中島吧擡', MATCHES([category_factory], 'CA', false) && !MATCHES([category_material], '布料', false), '皮沙發', MATCHES([category_mat], /床墊|枕頭|棉被/, false), category_mat, NULL()]) as: 'category_group_alice_tmp'
rename type: manual mapping: [category_group_alice_tmp,'category_group_alice']
filter type: custom rowType: single row: MATCHES([email], `{yyyy}/{mm}/{dd}|合計`, false) action: Delete
splitpatterns col: deposit_date type: on on: /[&+,\- ]/ limit: 1
derive type: single value: CASE([PARSEINT(SUBSTRING(deposit_date1, 0, FIND(deposit_date1, '\/', false, 0))) <= 11,MERGE(['2020',deposit_date1], '\/'),MERGE(['2019',deposit_date1], '\/')]) as: 'deposit_date'
settype col: deposit_date datetimeType: 'Datetime','yy-mm-dd','yyyy*mm*dd' type: Datetime
filter type: custom rowType: single row: ISMISMATCHED(deposit_date, ['Datetime','yy-mm-dd','yyyy*mm*dd']) action: Delete
derive type: single value: DATEDIF(deposit_date, delivery_date, day) as: 'product_order_lead_time'
derive type: multiple value: CORREL(product_order_lead_time, quantity) group: product_name as: 'corr_leadtime2qty'